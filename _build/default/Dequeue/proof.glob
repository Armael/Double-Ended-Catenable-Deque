DIGEST d425a4ff34d165abf25b28e559344b52
FDequeue.proof
R24:32 Coq.ssr.ssreflect <> <> lib
R59:65 Coq.Program.Program <> <> lib
R67:70 Coq.Lists.List <> <> lib
R72:77 Coq.ZArith.ZArith <> <> lib
R79:81 Coq.micromega.Lia <> <> lib
R91:103 Coq.Lists.List ListNotations <> mod
R136:144 Equations.Prop.Equations <> <> lib
R194:200 Hammer.Tactics.Tactics <> <> lib
R235:237 AAC_tactics.AAC <> <> lib
R272:280 AAC_tactics.Instances <> <> lib
R290:304 AAC_tactics.Instances Lists <> mod
def 386:393 <> flattenp
binder 396:396 <> A:1
R403:406 Coq.Init.Datatypes <> list ind
R410:412 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R409:409 Dequeue.proof <> A:1 var
R413:413 Dequeue.proof <> A:1 var
binder 400:400 <> l:2
R418:421 Coq.Init.Datatypes <> list ind
R423:423 Dequeue.proof <> A:1 var
R436:436 Dequeue.proof <> l:2 var
R447:448 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R453:454 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R460:463 Coq.Init.Datatypes <> cons constr
R465:465 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R467:468 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R470:470 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R481:484 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R478:478 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R480:480 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R488:491 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R485:485 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R487:487 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R492:499 Dequeue.proof <> flattenp:3 def
prf 612:623 <> app_cons_one
binder 626:626 <> A:5
R641:641 Dequeue.proof <> A:5 var
binder 637:637 <> a:6
R649:652 Coq.Init.Datatypes <> list ind
R654:654 Dequeue.proof <> A:5 var
binder 645:645 <> l:7
R665:667 Coq.Init.Logic <> ::type_scope:x_'='_x not
R660:663 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R659:659 Dequeue.proof <> a:6 var
R664:664 Dequeue.proof <> l:7 var
R671:674 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R668:668 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R670:670 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R669:669 Dequeue.proof <> a:6 var
R675:675 Dequeue.proof <> l:7 var
R713:715 Coq.Init.Datatypes <> app def
def 729:737 <> singleton
binder 740:740 <> A:8
R755:755 Dequeue.proof <> A:8 var
binder 751:751 <> x:9
R760:763 Coq.Init.Datatypes <> list ind
R765:765 Dequeue.proof <> A:8 var
R770:770 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R772:772 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R771:771 Dequeue.proof <> x:9 var
R782:790 Dequeue.proof <> singleton def
prf 895:906 <> flattenp_app
binder 908:908 <> A:10
R915:918 Coq.Init.Datatypes <> list ind
R922:924 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R921:921 Dequeue.proof <> A:10 var
R925:925 Dequeue.proof <> A:10 var
binder 911:912 <> l1:11
binder 929:930 <> l2:12
R953:955 Coq.Init.Logic <> ::type_scope:x_'='_x not
R934:941 Dequeue.proof <> flattenp def
R946:949 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R944:945 Dequeue.proof <> l1:11 var
R950:951 Dequeue.proof <> l2:12 var
R967:970 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R956:963 Dequeue.proof <> flattenp def
R965:966 Dequeue.proof <> l1:11 var
R971:978 Dequeue.proof <> flattenp def
R980:981 Dequeue.proof <> l2:12 var
R1051:1063 Coq.Lists.List <> app_comm_cons thm
R1051:1063 Coq.Lists.List <> app_comm_cons thm
R1051:1063 Coq.Lists.List <> app_comm_cons thm
R1244:1252 Coq.Lists.List <> app_assoc thm
R1288:1300 Coq.Lists.List <> app_comm_cons thm
R1334:1345 Dequeue.proof <> flattenp_app thm
R1379:1387 Coq.Lists.List <> app_nil_r thm
R1421:1436 Coq.Program.Combinators <> compose_id_right thm
ind 1841:1849 <> green_hue
constr 1862:1870 <> SomeGreen
constr 1875:1881 <> NoGreen
scheme 1841:1849 <> green_hue_rect
scheme 1841:1849 <> green_hue_ind
scheme 1841:1849 <> green_hue_rec
scheme 1841:1849 <> green_hue_sind
ind 1894:1903 <> yellow_hue
constr 1915:1924 <> SomeYellow
constr 1928:1935 <> NoYellow
scheme 1894:1903 <> yellow_hue_rect
scheme 1894:1903 <> yellow_hue_ind
scheme 1894:1903 <> yellow_hue_rec
scheme 1894:1903 <> yellow_hue_sind
ind 1948:1954 <> red_hue
constr 1969:1975 <> SomeRed
constr 1982:1986 <> NoRed
scheme 1948:1954 <> red_hue_rect
scheme 1948:1954 <> red_hue_ind
scheme 1948:1954 <> red_hue_rec
scheme 1948:1954 <> red_hue_sind
ind 2110:2114 <> color
constr 2130:2132 <> Mix
R2145:2148 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2136:2144 Dequeue.proof <> green_hue ind
R2159:2162 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2149:2158 Dequeue.proof <> yellow_hue ind
R2170:2173 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2163:2169 Dequeue.proof <> red_hue ind
R2174:2178 Dequeue.proof <> color:19 ind
scheme 2110:2114 <> color_rect
scheme 2110:2114 <> color_ind
scheme 2110:2114 <> color_rec
scheme 2110:2114 <> color_sind
R2322:2330 Dequeue.proof <> green_hue ind
R2356:2365 Dequeue.proof <> yellow_hue ind
R2391:2397 Dequeue.proof <> red_hue ind
R2423:2427 Dequeue.proof <> color ind
abbrev 2482:2486 <> green
R2492:2494 Dequeue.proof <> Mix constr
R2496:2504 Dequeue.proof <> SomeGreen constr
R2506:2513 Dequeue.proof <> NoYellow constr
R2515:2519 Dequeue.proof <> NoRed constr
abbrev 2532:2537 <> yellow
R2543:2545 Dequeue.proof <> Mix constr
R2547:2553 Dequeue.proof <> NoGreen constr
R2555:2564 Dequeue.proof <> SomeYellow constr
R2566:2570 Dequeue.proof <> NoRed constr
abbrev 2583:2585 <> red
R2591:2593 Dequeue.proof <> Mix constr
R2595:2601 Dequeue.proof <> NoGreen constr
R2603:2610 Dequeue.proof <> NoYellow constr
R2612:2618 Dequeue.proof <> SomeRed constr
abbrev 2631:2639 <> uncolored
R2645:2647 Dequeue.proof <> Mix constr
R2649:2655 Dequeue.proof <> NoGreen constr
R2657:2664 Dequeue.proof <> NoYellow constr
R2666:2670 Dequeue.proof <> NoRed constr
ind 2712:2717 <> buffer
constr 2748:2749 <> B0
constr 2787:2788 <> B1
constr 2834:2835 <> B2
constr 2902:2903 <> B3
constr 2976:2977 <> B4
constr 3040:3041 <> B5
R2725:2728 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2734:2737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2729:2733 Dequeue.proof <> color ind
binder 2761:2761 <> a:23
R2772:2777 Dequeue.proof <> buffer:21 ind
R2781:2783 Dequeue.proof <> red abbrev
R2779:2779 Dequeue.proof <> a:23 var
binder 2800:2800 <> a:24
R2812:2815 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2811:2811 Dequeue.proof <> a:24 var
R2816:2821 Dequeue.proof <> buffer:21 ind
R2825:2830 Dequeue.proof <> yellow abbrev
R2823:2823 Dequeue.proof <> a:24 var
binder 2847:2847 <> a:25
binder 2857:2857 <> G:26
binder 2859:2859 <> Y:27
R2866:2869 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2865:2865 Dequeue.proof <> a:25 var
R2871:2874 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2870:2870 Dequeue.proof <> a:25 var
R2875:2880 Dequeue.proof <> buffer:21 ind
R2885:2887 Dequeue.proof <> Mix constr
R2889:2889 Dequeue.proof <> G:26 var
R2891:2891 Dequeue.proof <> Y:27 var
R2893:2897 Dequeue.proof <> NoRed constr
R2882:2882 Dequeue.proof <> a:25 var
binder 2915:2915 <> a:28
binder 2926:2926 <> G:29
binder 2928:2928 <> Y:30
R2935:2938 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2934:2934 Dequeue.proof <> a:28 var
R2940:2943 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2939:2939 Dequeue.proof <> a:28 var
R2945:2948 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2944:2944 Dequeue.proof <> a:28 var
R2949:2954 Dequeue.proof <> buffer:21 ind
R2959:2961 Dequeue.proof <> Mix constr
R2963:2963 Dequeue.proof <> G:29 var
R2965:2965 Dequeue.proof <> Y:30 var
R2967:2971 Dequeue.proof <> NoRed constr
R2956:2956 Dequeue.proof <> a:28 var
binder 2989:2989 <> a:31
R3003:3006 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3002:3002 Dequeue.proof <> a:31 var
R3008:3011 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3007:3007 Dequeue.proof <> a:31 var
R3013:3016 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3012:3012 Dequeue.proof <> a:31 var
R3018:3021 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3017:3017 Dequeue.proof <> a:31 var
R3022:3027 Dequeue.proof <> buffer:21 ind
R3031:3036 Dequeue.proof <> yellow abbrev
R3029:3029 Dequeue.proof <> a:31 var
binder 3053:3053 <> a:32
R3067:3070 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3066:3066 Dequeue.proof <> a:32 var
R3072:3075 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3071:3071 Dequeue.proof <> a:32 var
R3077:3080 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3076:3076 Dequeue.proof <> a:32 var
R3082:3085 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3081:3081 Dequeue.proof <> a:32 var
R3087:3090 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3086:3086 Dequeue.proof <> a:32 var
R3091:3096 Dequeue.proof <> buffer:21 ind
R3100:3102 Dequeue.proof <> red abbrev
R3098:3098 Dequeue.proof <> a:32 var
scheme 2712:2717 <> buffer_rect
scheme 2712:2717 <> buffer_ind
scheme 2712:2717 <> buffer_rec
scheme 2712:2717 <> buffer_sind
ind 3150:3162 <> yellow_buffer
constr 3186:3194 <> Yellowish
binder 3165:3165 <> A:33
binder 3206:3206 <> G:36
binder 3208:3208 <> Y:37
R3238:3243 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3214:3219 Dequeue.proof <> buffer ind
R3221:3221 Dequeue.proof <> A:33 var
R3224:3226 Dequeue.proof <> Mix constr
R3228:3228 Dequeue.proof <> G:36 var
R3230:3230 Dequeue.proof <> Y:37 var
R3232:3236 Dequeue.proof <> NoRed constr
R3244:3256 Dequeue.proof <> yellow_buffer:34 ind
R3258:3258 Dequeue.proof <> A:33 var
scheme 3150:3162 <> yellow_buffer_rect
scheme 3150:3162 <> yellow_buffer_ind
scheme 3150:3162 <> yellow_buffer_rec
scheme 3150:3162 <> yellow_buffer_sind
R3271:3279 Dequeue.proof <> Yellowish constr
R3271:3279 Dequeue.proof <> Yellowish constr
ind 3332:3341 <> any_buffer
constr 3365:3367 <> Any
binder 3344:3344 <> A:38
binder 3379:3379 <> C:41
R3393:3396 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3383:3388 Dequeue.proof <> buffer ind
R3390:3390 Dequeue.proof <> A:38 var
R3392:3392 Dequeue.proof <> C:41 var
R3397:3406 Dequeue.proof <> any_buffer:39 ind
R3408:3408 Dequeue.proof <> A:38 var
scheme 3332:3341 <> any_buffer_rect
scheme 3332:3341 <> any_buffer_ind
scheme 3332:3341 <> any_buffer_rec
scheme 3332:3341 <> any_buffer_sind
R3421:3423 Dequeue.proof <> Any constr
R3421:3423 Dequeue.proof <> Any constr
ind 3469:3474 <> packet
constr 3513:3516 <> HOLE
constr 3564:3569 <> Yellow
constr 3742:3746 <> Green
constr 3880:3882 <> Red
R3482:3485 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3490:3493 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3499:3502 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3494:3498 Dequeue.proof <> color ind
binder 3528:3528 <> a:44
R3541:3546 Dequeue.proof <> packet:42 ind
R3552:3560 Dequeue.proof <> uncolored abbrev
R3550:3550 Dequeue.proof <> a:44 var
R3548:3548 Dequeue.proof <> a:44 var
binder 3581:3581 <> a:45
binder 3583:3583 <> b:46
binder 3594:3595 <> G1:47
binder 3597:3598 <> Y1:48
binder 3600:3601 <> Y2:49
binder 3603:3604 <> G3:50
binder 3606:3607 <> Y3:51
R3639:3644 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3613:3618 Dequeue.proof <> buffer ind
R3620:3620 Dequeue.proof <> a:45 var
R3623:3625 Dequeue.proof <> Mix constr
R3627:3628 Dequeue.proof <> G1:47 var
R3630:3631 Dequeue.proof <> Y1:48 var
R3633:3637 Dequeue.proof <> NoRed constr
R3684:3689 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3645:3650 Dequeue.proof <> packet:42 ind
R3663:3665 Dequeue.proof <> Mix constr
R3667:3673 Dequeue.proof <> NoGreen constr
R3675:3676 Dequeue.proof <> Y2:49 var
R3678:3682 Dequeue.proof <> NoRed constr
R3660:3660 Dequeue.proof <> b:46 var
R3654:3656 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R3653:3653 Dequeue.proof <> a:45 var
R3657:3657 Dequeue.proof <> a:45 var
R3716:3721 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3690:3695 Dequeue.proof <> buffer ind
R3697:3697 Dequeue.proof <> a:45 var
R3700:3702 Dequeue.proof <> Mix constr
R3704:3705 Dequeue.proof <> G3:50 var
R3707:3708 Dequeue.proof <> Y3:51 var
R3710:3714 Dequeue.proof <> NoRed constr
R3722:3727 Dequeue.proof <> packet:42 ind
R3733:3738 Dequeue.proof <> yellow abbrev
R3731:3731 Dequeue.proof <> b:46 var
R3729:3729 Dequeue.proof <> a:45 var
binder 3758:3758 <> a:52
binder 3760:3760 <> b:53
binder 3771:3771 <> Y:54
R3791:3796 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3777:3782 Dequeue.proof <> buffer ind
R3784:3784 Dequeue.proof <> a:52 var
R3786:3790 Dequeue.proof <> green abbrev
R3835:3840 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3797:3802 Dequeue.proof <> packet:42 ind
R3815:3817 Dequeue.proof <> Mix constr
R3819:3825 Dequeue.proof <> NoGreen constr
R3827:3827 Dequeue.proof <> Y:54 var
R3829:3833 Dequeue.proof <> NoRed constr
R3812:3812 Dequeue.proof <> b:53 var
R3806:3808 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R3805:3805 Dequeue.proof <> a:52 var
R3809:3809 Dequeue.proof <> a:52 var
R3855:3860 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3841:3846 Dequeue.proof <> buffer ind
R3848:3848 Dequeue.proof <> a:52 var
R3850:3854 Dequeue.proof <> green abbrev
R3861:3866 Dequeue.proof <> packet:42 ind
R3872:3876 Dequeue.proof <> green abbrev
R3870:3870 Dequeue.proof <> b:53 var
R3868:3868 Dequeue.proof <> a:52 var
binder 3894:3894 <> a:55
binder 3896:3896 <> b:56
binder 3907:3908 <> C1:57
binder 3910:3910 <> Y:58
binder 3912:3913 <> C2:59
R3930:3935 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3919:3924 Dequeue.proof <> buffer ind
R3926:3926 Dequeue.proof <> a:55 var
R3928:3929 Dequeue.proof <> C1:57 var
R3974:3979 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3936:3941 Dequeue.proof <> packet:42 ind
R3954:3956 Dequeue.proof <> Mix constr
R3958:3964 Dequeue.proof <> NoGreen constr
R3966:3966 Dequeue.proof <> Y:58 var
R3968:3972 Dequeue.proof <> NoRed constr
R3951:3951 Dequeue.proof <> b:56 var
R3945:3947 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R3944:3944 Dequeue.proof <> a:55 var
R3948:3948 Dequeue.proof <> a:55 var
R3991:3996 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3980:3985 Dequeue.proof <> buffer ind
R3987:3987 Dequeue.proof <> a:55 var
R3989:3990 Dequeue.proof <> C2:59 var
R3997:4002 Dequeue.proof <> packet:42 ind
R4008:4010 Dequeue.proof <> red abbrev
R4006:4006 Dequeue.proof <> b:56 var
R4004:4004 Dequeue.proof <> a:55 var
scheme 3469:3474 <> packet_rect
scheme 3469:3474 <> packet_ind
scheme 3469:3474 <> packet_rec
scheme 3469:3474 <> packet_sind
ind 4057:4062 <> cdeque
constr 4093:4097 <> Small
constr 4148:4148 <> G
constr 4244:4244 <> Y
constr 4332:4332 <> R
R4070:4073 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4079:4082 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4074:4078 Dequeue.proof <> color ind
binder 4109:4109 <> a:62
binder 4111:4111 <> C:63
R4127:4130 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4117:4122 Dequeue.proof <> buffer ind
R4124:4124 Dequeue.proof <> a:62 var
R4126:4126 Dequeue.proof <> C:63 var
R4131:4136 Dequeue.proof <> cdeque:60 ind
R4140:4144 Dequeue.proof <> green abbrev
R4138:4138 Dequeue.proof <> a:62 var
binder 4160:4160 <> a:64
binder 4162:4162 <> b:65
binder 4164:4164 <> G:66
binder 4166:4166 <> R:67
R4188:4193 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4172:4177 Dequeue.proof <> packet ind
R4179:4179 Dequeue.proof <> a:64 var
R4181:4181 Dequeue.proof <> b:65 var
R4183:4187 Dequeue.proof <> green abbrev
R4221:4226 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4194:4199 Dequeue.proof <> cdeque:60 ind
R4204:4206 Dequeue.proof <> Mix constr
R4208:4208 Dequeue.proof <> G:66 var
R4210:4217 Dequeue.proof <> NoYellow constr
R4219:4219 Dequeue.proof <> R:67 var
R4201:4201 Dequeue.proof <> b:65 var
R4227:4232 Dequeue.proof <> cdeque:60 ind
R4236:4240 Dequeue.proof <> green abbrev
R4234:4234 Dequeue.proof <> a:64 var
binder 4256:4256 <> a:68
binder 4258:4258 <> b:69
R4288:4293 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4271:4276 Dequeue.proof <> packet ind
R4278:4278 Dequeue.proof <> a:68 var
R4280:4280 Dequeue.proof <> b:69 var
R4282:4287 Dequeue.proof <> yellow abbrev
R4308:4313 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4294:4299 Dequeue.proof <> cdeque:60 ind
R4303:4307 Dequeue.proof <> green abbrev
R4301:4301 Dequeue.proof <> b:69 var
R4314:4319 Dequeue.proof <> cdeque:60 ind
R4323:4328 Dequeue.proof <> yellow abbrev
R4321:4321 Dequeue.proof <> a:68 var
binder 4344:4344 <> a:70
binder 4346:4346 <> b:71
R4373:4378 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4359:4364 Dequeue.proof <> packet ind
R4366:4366 Dequeue.proof <> a:70 var
R4368:4368 Dequeue.proof <> b:71 var
R4370:4372 Dequeue.proof <> red abbrev
R4393:4398 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4379:4384 Dequeue.proof <> cdeque:60 ind
R4388:4392 Dequeue.proof <> green abbrev
R4386:4386 Dequeue.proof <> b:71 var
R4399:4404 Dequeue.proof <> cdeque:60 ind
R4408:4410 Dequeue.proof <> red abbrev
R4406:4406 Dequeue.proof <> a:70 var
scheme 4057:4062 <> cdeque_rect
scheme 4057:4062 <> cdeque_ind
scheme 4057:4062 <> cdeque_rec
scheme 4057:4062 <> cdeque_sind
ind 4451:4459 <> decompose
constr 4484:4492 <> Underflow
constr 4522:4523 <> Ok
constr 4559:4566 <> Overflow
binder 4462:4462 <> A:72
R4504:4507 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4496:4501 Coq.Init.Datatypes <> option ind
R4503:4503 Dequeue.proof <> A:72 var
R4508:4516 Dequeue.proof <> decompose:73 ind
R4518:4518 Dequeue.proof <> A:72 var
R4541:4544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4527:4532 Dequeue.proof <> buffer ind
R4534:4534 Dequeue.proof <> A:72 var
R4536:4540 Dequeue.proof <> green abbrev
R4545:4553 Dequeue.proof <> decompose:73 ind
R4555:4555 Dequeue.proof <> A:72 var
R4584:4587 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4570:4575 Dequeue.proof <> buffer ind
R4577:4577 Dequeue.proof <> A:72 var
R4579:4583 Dequeue.proof <> green abbrev
R4593:4596 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4589:4591 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4588:4588 Dequeue.proof <> A:72 var
R4592:4592 Dequeue.proof <> A:72 var
R4597:4605 Dequeue.proof <> decompose:73 ind
R4607:4607 Dequeue.proof <> A:72 var
scheme 4451:4459 <> decompose_rect
scheme 4451:4459 <> decompose_ind
scheme 4451:4459 <> decompose_rec
scheme 4451:4459 <> decompose_sind
R4621:4629 Dequeue.proof <> Underflow constr
R4621:4629 Dequeue.proof <> Underflow constr
R4646:4647 Dequeue.proof <> Ok constr
R4646:4647 Dequeue.proof <> Ok constr
R4664:4671 Dequeue.proof <> Overflow constr
R4664:4671 Dequeue.proof <> Overflow constr
ind 4715:4722 <> sandwich
constr 4747:4751 <> Alone
constr 4780:4787 <> Sandwich
binder 4725:4725 <> A:75
R4763:4766 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4755:4760 Coq.Init.Datatypes <> option ind
R4762:4762 Dequeue.proof <> A:75 var
R4767:4774 Dequeue.proof <> sandwich:76 ind
R4776:4776 Dequeue.proof <> A:75 var
binder 4790:4790 <> C:78
R4796:4799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4795:4795 Dequeue.proof <> A:75 var
R4810:4813 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4800:4805 Dequeue.proof <> buffer ind
R4807:4807 Dequeue.proof <> A:75 var
R4809:4809 Dequeue.proof <> C:78 var
R4815:4818 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4814:4814 Dequeue.proof <> A:75 var
R4819:4826 Dequeue.proof <> sandwich:76 ind
R4828:4828 Dequeue.proof <> A:75 var
scheme 4715:4722 <> sandwich_rect
scheme 4715:4722 <> sandwich_ind
scheme 4715:4722 <> sandwich_rec
scheme 4715:4722 <> sandwich_sind
R4841:4845 Dequeue.proof <> Alone constr
R4841:4845 Dequeue.proof <> Alone constr
R4862:4869 Dequeue.proof <> Sandwich constr
R4862:4869 Dequeue.proof <> Sandwich constr
ind 4929:4938 <> not_yellow
constr 4961:4970 <> Not_yellow
R4947:4950 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4942:4946 Dequeue.proof <> color ind
binder 4973:4973 <> G:81
binder 4975:4975 <> R:82
R4980:4989 Dequeue.proof <> not_yellow:79 ind
R4992:4994 Dequeue.proof <> Mix constr
R4996:4996 Dequeue.proof <> G:81 var
R4998:5005 Dequeue.proof <> NoYellow constr
R5007:5007 Dequeue.proof <> R:82 var
scheme 4929:4938 <> not_yellow_rect
scheme 4929:4938 <> not_yellow_ind
scheme 4929:4938 <> not_yellow_rec
scheme 4929:4938 <> not_yellow_sind
ind 5047:5051 <> deque
constr 5073:5073 <> T
R5059:5062 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 5085:5085 <> a:85
binder 5087:5087 <> G:86
binder 5089:5089 <> Y:87
R5119:5124 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5095:5100 Dequeue.proof <> cdeque ind
R5102:5102 Dequeue.proof <> a:85 var
R5105:5107 Dequeue.proof <> Mix constr
R5109:5109 Dequeue.proof <> G:86 var
R5111:5111 Dequeue.proof <> Y:87 var
R5113:5117 Dequeue.proof <> NoRed constr
R5125:5129 Dequeue.proof <> deque:83 ind
R5131:5131 Dequeue.proof <> a:85 var
scheme 5047:5051 <> deque_rect
scheme 5047:5051 <> deque_ind
scheme 5047:5051 <> deque_rec
scheme 5047:5051 <> deque_sind
def 5218:5225 <> pair_seq
binder 5228:5228 <> A:88
R5238:5241 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5234:5236 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R5242:5245 Coq.Init.Datatypes <> list ind
R5253:5260 Dequeue.proof <> pair_seq:92 def
R5262:5262 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5264:5265 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5267:5267 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5263:5263 Dequeue.proof <> a:90 var
R5266:5266 Dequeue.proof <> b:91 var
R5262:5267 Coq.Init.Datatypes <> pair constr
R5275:5278 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5272:5272 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5274:5274 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5279:5279 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5281:5281 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
def 5329:5338 <> option_seq
binder 5341:5341 <> A:93
R5354:5357 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5346:5351 Coq.Init.Datatypes <> option ind
R5358:5361 Coq.Init.Datatypes <> list ind
R5368:5377 Dequeue.proof <> option_seq:95 def
R5379:5382 Coq.Init.Datatypes <> None constr
R5379:5382 Coq.Init.Datatypes <> None constr
R5391:5400 Dequeue.proof <> option_seq:97 def
R5403:5406 Coq.Init.Datatypes <> Some constr
R5408:5408 Dequeue.proof <> x:96 var
R5403:5408 Coq.Init.Datatypes <> Some constr
R5414:5414 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5416:5416 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5387:5388 Coq.Lists.List ListNotations ::list_scope:'['_']' not
def 5463:5472 <> buffer_seq
binder 5475:5475 <> A:98
binder 5477:5477 <> C:99
R5492:5495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5482:5487 Dequeue.proof <> buffer ind
R5496:5499 Coq.Init.Datatypes <> list ind
R5506:5515 Dequeue.proof <> buffer_seq:101 def
R5517:5518 Dequeue.proof <> B0 constr
R5517:5518 Dequeue.proof <> B0 constr
R5527:5536 Dequeue.proof <> buffer_seq:103 def
R5539:5540 Dequeue.proof <> B1 constr
R5542:5542 Dequeue.proof <> a:102 var
R5539:5542 Dequeue.proof <> B1 constr
R5553:5562 Dequeue.proof <> buffer_seq:106 def
R5565:5566 Dequeue.proof <> B2 constr
R5570:5570 Dequeue.proof <> b:105 var
R5568:5568 Dequeue.proof <> a:104 var
R5565:5570 Dequeue.proof <> B2 constr
R5588:5597 Dequeue.proof <> buffer_seq:110 def
R5600:5601 Dequeue.proof <> B3 constr
R5607:5607 Dequeue.proof <> c:109 var
R5605:5605 Dequeue.proof <> b:108 var
R5603:5603 Dequeue.proof <> a:107 var
R5600:5607 Dequeue.proof <> B3 constr
R5632:5641 Dequeue.proof <> buffer_seq:115 def
R5644:5645 Dequeue.proof <> B4 constr
R5653:5653 Dequeue.proof <> d:114 var
R5651:5651 Dequeue.proof <> c:113 var
R5649:5649 Dequeue.proof <> b:112 var
R5647:5647 Dequeue.proof <> a:111 var
R5644:5653 Dequeue.proof <> B4 constr
R5685:5694 Dequeue.proof <> buffer_seq:121 def
R5697:5698 Dequeue.proof <> B5 constr
R5708:5708 Dequeue.proof <> e:120 var
R5706:5706 Dequeue.proof <> d:119 var
R5704:5704 Dequeue.proof <> c:118 var
R5702:5702 Dequeue.proof <> b:117 var
R5700:5700 Dequeue.proof <> a:116 var
R5697:5708 Dequeue.proof <> B5 constr
R5523:5524 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R5548:5548 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5550:5550 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5579:5582 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5576:5576 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5578:5578 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5583:5583 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5585:5585 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5616:5619 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5613:5613 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5615:5615 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5623:5626 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5620:5620 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5622:5622 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5627:5627 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5629:5629 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5662:5665 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5659:5659 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5661:5661 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5669:5672 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5666:5666 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5668:5668 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5676:5679 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5673:5673 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5675:5675 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5680:5680 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5682:5682 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5717:5720 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5714:5714 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5716:5716 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5724:5727 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5721:5721 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5723:5723 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5731:5734 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5728:5728 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5730:5730 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5738:5741 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5735:5735 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5737:5737 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5742:5742 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5744:5744 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
def 5798:5814 <> yellow_buffer_seq
binder 5817:5817 <> A:122
R5837:5840 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5822:5834 Dequeue.proof <> yellow_buffer ind
R5841:5844 Coq.Init.Datatypes <> list ind
R5851:5867 Dequeue.proof <> yellow_buffer_seq:125 def
R5870:5878 Dequeue.proof <> Yellowish constr
R5880:5882 Dequeue.proof <> buf:124 var
R5870:5882 Dequeue.proof <> Yellowish constr
R5888:5897 Dequeue.proof <> buffer_seq def
def 5950:5963 <> any_buffer_seq
binder 5966:5966 <> A:126
R5983:5986 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5971:5980 Dequeue.proof <> any_buffer ind
R5987:5990 Coq.Init.Datatypes <> list ind
R5997:6010 Dequeue.proof <> any_buffer_seq:129 def
R6013:6015 Dequeue.proof <> Any constr
R6017:6019 Dequeue.proof <> buf:128 var
R6013:6019 Dequeue.proof <> Any constr
R6025:6034 Dequeue.proof <> buffer_seq def
def 6143:6158 <> packet_front_seq
binder 6161:6161 <> A:130
binder 6163:6163 <> B:131
binder 6165:6165 <> C:132
R6182:6185 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6170:6175 Dequeue.proof <> packet ind
R6186:6189 Coq.Init.Datatypes <> list ind
R6196:6211 Dequeue.proof <> packet_front_seq:134 def
R6213:6216 Dequeue.proof <> HOLE constr
R6213:6216 Dequeue.proof <> HOLE constr
R6225:6240 Dequeue.proof <> packet_front_seq:137 def
R6243:6248 Dequeue.proof <> Yellow constr
R6255:6255 Dequeue.proof <> p:136 var
R6250:6253 Dequeue.proof <> buf1:135 var
R6243:6257 Dequeue.proof <> Yellow constr
R6315:6330 Dequeue.proof <> packet_front_seq:140 def
R6333:6337 Dequeue.proof <> Green constr
R6344:6344 Dequeue.proof <> p:139 var
R6339:6342 Dequeue.proof <> buf1:138 var
R6333:6346 Dequeue.proof <> Green constr
R6404:6419 Dequeue.proof <> packet_front_seq:143 def
R6422:6424 Dequeue.proof <> Red constr
R6431:6431 Dequeue.proof <> p:142 var
R6426:6429 Dequeue.proof <> buf1:141 var
R6422:6433 Dequeue.proof <> Red constr
R6221:6222 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R6280:6283 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6265:6274 Dequeue.proof <> buffer_seq def
R6284:6291 Dequeue.proof <> flattenp def
R6294:6309 Dequeue.proof <> packet_front_seq:133 def
R6369:6372 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6354:6363 Dequeue.proof <> buffer_seq def
R6373:6380 Dequeue.proof <> flattenp def
R6383:6398 Dequeue.proof <> packet_front_seq:133 def
R6456:6459 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6441:6450 Dequeue.proof <> buffer_seq def
R6460:6467 Dequeue.proof <> flattenp def
R6470:6485 Dequeue.proof <> packet_front_seq:133 def
def 6593:6607 <> packet_rear_seq
binder 6610:6610 <> A:144
binder 6612:6612 <> B:145
binder 6614:6614 <> C:146
R6631:6634 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6619:6624 Dequeue.proof <> packet ind
R6635:6638 Coq.Init.Datatypes <> list ind
R6645:6659 Dequeue.proof <> packet_rear_seq:148 def
R6661:6664 Dequeue.proof <> HOLE constr
R6661:6664 Dequeue.proof <> HOLE constr
R6673:6687 Dequeue.proof <> packet_rear_seq:151 def
R6690:6695 Dequeue.proof <> Yellow constr
R6701:6704 Dequeue.proof <> buf2:149 var
R6699:6699 Dequeue.proof <> p:150 var
R6690:6704 Dequeue.proof <> Yellow constr
R6761:6775 Dequeue.proof <> packet_rear_seq:154 def
R6778:6782 Dequeue.proof <> Green constr
R6788:6791 Dequeue.proof <> buf2:152 var
R6786:6786 Dequeue.proof <> p:153 var
R6778:6791 Dequeue.proof <> Green constr
R6848:6862 Dequeue.proof <> packet_rear_seq:157 def
R6865:6867 Dequeue.proof <> Red constr
R6873:6876 Dequeue.proof <> buf2:155 var
R6871:6871 Dequeue.proof <> p:156 var
R6865:6876 Dequeue.proof <> Red constr
R6669:6670 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R6740:6743 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6712:6719 Dequeue.proof <> flattenp def
R6722:6736 Dequeue.proof <> packet_rear_seq:147 def
R6744:6753 Dequeue.proof <> buffer_seq def
R6827:6830 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6799:6806 Dequeue.proof <> flattenp def
R6809:6823 Dequeue.proof <> packet_rear_seq:147 def
R6831:6840 Dequeue.proof <> buffer_seq def
R6912:6915 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6884:6891 Dequeue.proof <> flattenp def
R6894:6908 Dequeue.proof <> packet_rear_seq:147 def
R6916:6925 Dequeue.proof <> buffer_seq def
def 7145:7163 <> packet_hole_flatten
binder 7166:7166 <> A:158
binder 7168:7168 <> B:159
binder 7170:7170 <> C:160
R7187:7190 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7175:7180 Dequeue.proof <> packet ind
R7197:7200 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7191:7194 Coq.Init.Datatypes <> list ind
R7201:7204 Coq.Init.Datatypes <> list ind
R7211:7229 Dequeue.proof <> packet_hole_flatten:162 def
R7231:7234 Dequeue.proof <> HOLE constr
R7231:7234 Dequeue.proof <> HOLE constr
R7243:7261 Dequeue.proof <> packet_hole_flatten:164 def
R7264:7269 Dequeue.proof <> Yellow constr
R7273:7273 Dequeue.proof <> p:163 var
R7264:7275 Dequeue.proof <> Yellow constr
R7319:7337 Dequeue.proof <> packet_hole_flatten:166 def
R7340:7344 Dequeue.proof <> Green constr
R7348:7348 Dequeue.proof <> p:165 var
R7340:7350 Dequeue.proof <> Green constr
R7394:7412 Dequeue.proof <> packet_hole_flatten:168 def
R7415:7417 Dequeue.proof <> Red constr
R7421:7421 Dequeue.proof <> p:167 var
R7415:7423 Dequeue.proof <> Red constr
R7239:7240 Coq.Init.Datatypes <> id def
R7291:7295 Coq.Program.Basics <> ::program_scope:x_'∘'_x not
R7283:7290 Dequeue.proof <> flattenp def
R7296:7314 Dequeue.proof <> packet_hole_flatten:161 def
R7366:7370 Coq.Program.Basics <> ::program_scope:x_'∘'_x not
R7358:7365 Dequeue.proof <> flattenp def
R7371:7389 Dequeue.proof <> packet_hole_flatten:161 def
R7439:7443 Coq.Program.Basics <> ::program_scope:x_'∘'_x not
R7431:7438 Dequeue.proof <> flattenp def
R7444:7462 Dequeue.proof <> packet_hole_flatten:161 def
def 7530:7539 <> cdeque_seq
binder 7542:7542 <> A:169
binder 7544:7544 <> C:170
R7559:7562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7549:7554 Dequeue.proof <> cdeque ind
R7563:7566 Coq.Init.Datatypes <> list ind
R7573:7582 Dequeue.proof <> cdeque_seq:173 def
R7585:7589 Dequeue.proof <> Small constr
R7591:7593 Dequeue.proof <> buf:172 var
R7585:7593 Dequeue.proof <> Small constr
R7615:7624 Dequeue.proof <> cdeque_seq:176 def
R7627:7627 Dequeue.proof <> G constr
R7631:7632 Dequeue.proof <> dq:174 var
R7629:7629 Dequeue.proof <> p:175 var
R7627:7632 Dequeue.proof <> G constr
R7726:7735 Dequeue.proof <> cdeque_seq:179 def
R7738:7738 Dequeue.proof <> Y constr
R7742:7743 Dequeue.proof <> dq:177 var
R7740:7740 Dequeue.proof <> p:178 var
R7738:7743 Dequeue.proof <> Y constr
R7837:7846 Dequeue.proof <> cdeque_seq:182 def
R7849:7849 Dequeue.proof <> R constr
R7853:7854 Dequeue.proof <> dq:180 var
R7851:7851 Dequeue.proof <> p:181 var
R7849:7854 Dequeue.proof <> R constr
R7599:7608 Dequeue.proof <> buffer_seq def
R7658:7663 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R7640:7655 Dequeue.proof <> packet_front_seq def
R7701:7706 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R7664:7682 Dequeue.proof <> packet_hole_flatten def
R7687:7696 Dequeue.proof <> cdeque_seq:171 def
R7707:7721 Dequeue.proof <> packet_rear_seq def
R7769:7774 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R7751:7766 Dequeue.proof <> packet_front_seq def
R7812:7817 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R7775:7793 Dequeue.proof <> packet_hole_flatten def
R7798:7807 Dequeue.proof <> cdeque_seq:171 def
R7818:7832 Dequeue.proof <> packet_rear_seq def
R7880:7885 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R7862:7877 Dequeue.proof <> packet_front_seq def
R7923:7928 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R7886:7904 Dequeue.proof <> packet_hole_flatten def
R7909:7918 Dequeue.proof <> cdeque_seq:171 def
R7929:7943 Dequeue.proof <> packet_rear_seq def
def 8034:8051 <> decompose_main_seq
binder 8054:8054 <> A:183
R8071:8079 Dequeue.proof <> decompose ind
R8081:8081 Dequeue.proof <> A:183 var
binder 8065:8067 <> dec:184
R8086:8089 Coq.Init.Datatypes <> list ind
R8096:8113 Dequeue.proof <> decompose_main_seq:186 def
R8116:8124 Dequeue.proof <> Underflow constr
R8126:8129 Coq.Init.Datatypes <> None constr
R8116:8129 Dequeue.proof <> Underflow constr
R8126:8129 Coq.Init.Datatypes <> None constr
R8139:8156 Dequeue.proof <> decompose_main_seq:188 def
R8159:8167 Dequeue.proof <> Underflow constr
R8170:8173 Coq.Init.Datatypes <> Some constr
R8175:8175 Dequeue.proof <> x:187 var
R8159:8176 Dequeue.proof <> Underflow constr
R8170:8175 Coq.Init.Datatypes <> Some constr
R8187:8204 Dequeue.proof <> decompose_main_seq:190 def
R8207:8208 Dequeue.proof <> Ok constr
R8210:8210 Dequeue.proof <> b:189 var
R8207:8210 Dequeue.proof <> Ok constr
R8230:8247 Dequeue.proof <> decompose_main_seq:192 def
R8250:8257 Dequeue.proof <> Overflow constr
R8259:8259 Dequeue.proof <> b:191 var
R8250:8261 Dequeue.proof <> Overflow constr
R8182:8182 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R8184:8184 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R8135:8136 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R8216:8225 Dequeue.proof <> buffer_seq def
R8267:8276 Dequeue.proof <> buffer_seq def
def 8363:8380 <> decompose_rest_seq
binder 8383:8383 <> A:193
R8400:8408 Dequeue.proof <> decompose ind
R8410:8410 Dequeue.proof <> A:193 var
binder 8394:8396 <> dec:194
R8415:8418 Coq.Init.Datatypes <> list ind
R8425:8442 Dequeue.proof <> decompose_rest_seq:196 def
R8445:8453 Dequeue.proof <> Underflow constr
R8445:8455 Dequeue.proof <> Underflow constr
R8465:8482 Dequeue.proof <> decompose_rest_seq:197 def
R8485:8486 Dequeue.proof <> Ok constr
R8485:8488 Dequeue.proof <> Ok constr
R8498:8515 Dequeue.proof <> decompose_rest_seq:201 def
R8518:8525 Dequeue.proof <> Overflow constr
R8529:8529 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8531:8532 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8534:8534 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8530:8530 Dequeue.proof <> x:199 var
R8533:8533 Dequeue.proof <> y:200 var
R8527:8527 Dequeue.proof <> b:198 var
R8518:8534 Dequeue.proof <> Overflow constr
R8529:8534 Coq.Init.Datatypes <> pair constr
R8461:8462 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R8494:8495 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R8543:8546 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R8540:8540 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R8542:8542 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R8547:8547 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R8549:8549 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
def 8626:8637 <> sandwich_seq
binder 8640:8640 <> A:202
R8656:8663 Dequeue.proof <> sandwich ind
R8665:8665 Dequeue.proof <> A:202 var
binder 8651:8652 <> sw:203
R8670:8673 Coq.Init.Datatypes <> list ind
R8680:8691 Dequeue.proof <> sandwich_seq:205 def
R8694:8698 Dequeue.proof <> Alone constr
R8700:8703 Coq.Init.Datatypes <> None constr
R8694:8703 Dequeue.proof <> Alone constr
R8700:8703 Coq.Init.Datatypes <> None constr
R8713:8724 Dequeue.proof <> sandwich_seq:207 def
R8727:8731 Dequeue.proof <> Alone constr
R8734:8737 Coq.Init.Datatypes <> Some constr
R8739:8739 Dequeue.proof <> x:206 var
R8727:8740 Dequeue.proof <> Alone constr
R8734:8739 Coq.Init.Datatypes <> Some constr
R8751:8762 Dequeue.proof <> sandwich_seq:211 def
R8765:8772 Dequeue.proof <> Sandwich constr
R8778:8778 Dequeue.proof <> y:210 var
R8776:8776 Dequeue.proof <> b:208 var
R8774:8774 Dequeue.proof <> x:209 var
R8765:8778 Dequeue.proof <> Sandwich constr
R8746:8746 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R8748:8748 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R8709:8710 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R8787:8790 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R8784:8784 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R8786:8786 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R8803:8806 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R8791:8800 Dequeue.proof <> buffer_seq def
R8807:8807 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R8809:8809 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
def 8867:8875 <> deque_seq
binder 8878:8878 <> A:212
R8890:8893 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8883:8887 Dequeue.proof <> deque ind
R8894:8897 Coq.Init.Datatypes <> list ind
R8904:8912 Dequeue.proof <> deque_seq:215 def
R8915:8915 Dequeue.proof <> T constr
R8917:8918 Dequeue.proof <> dq:214 var
R8915:8918 Dequeue.proof <> T constr
R8924:8933 Dequeue.proof <> cdeque_seq def
R9007:9011 Coq.Init.Specif <> exist constr
not 8996:8996 <> :::'?'_x
def 9083:9092 <> green_push
binder 9095:9095 <> A:216
R9110:9110 Dequeue.proof <> A:216 var
binder 9106:9106 <> x:217
R9118:9123 Dequeue.proof <> buffer ind
R9125:9125 Dequeue.proof <> A:216 var
R9127:9131 Dequeue.proof <> green abbrev
binder 9114:9114 <> b:218
R9138:9139 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9142:9144 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9160:9162 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9198:9199 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9145:9150 Dequeue.proof <> buffer ind
R9154:9159 Dequeue.proof <> yellow abbrev
binder 9140:9141 <> b':219
R9176:9178 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9163:9172 Dequeue.proof <> buffer_seq def
R9174:9175 Dequeue.proof <> b':219 var
R9182:9185 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R9179:9179 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R9181:9181 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R9186:9195 Dequeue.proof <> buffer_seq def
R9204:9213 Dequeue.proof <> green_push:224 def
R9218:9219 Dequeue.proof <> B2 constr
R9223:9223 Dequeue.proof <> b:222 var
R9221:9221 Dequeue.proof <> a:221 var
R9215:9215 Dequeue.proof <> x:223 var
R9218:9223 Dequeue.proof <> B2 constr
R9241:9250 Dequeue.proof <> green_push:229 def
R9255:9256 Dequeue.proof <> B3 constr
R9262:9262 Dequeue.proof <> c:227 var
R9260:9260 Dequeue.proof <> b:226 var
R9258:9258 Dequeue.proof <> a:225 var
R9252:9252 Dequeue.proof <> x:228 var
R9255:9262 Dequeue.proof <> B3 constr
R9229:9230 Dequeue.proof <> :::'?'_x not
R9231:9232 Dequeue.proof <> B3 constr
R9268:9269 Dequeue.proof <> :::'?'_x not
R9270:9271 Dequeue.proof <> B4 constr
def 9329:9340 <> green_inject
binder 9343:9343 <> A:230
R9358:9363 Dequeue.proof <> buffer ind
R9365:9365 Dequeue.proof <> A:230 var
R9367:9371 Dequeue.proof <> green abbrev
binder 9354:9354 <> b:231
R9379:9379 Dequeue.proof <> A:230 var
binder 9375:9375 <> x:232
R9386:9387 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9390:9392 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9408:9410 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9446:9447 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9393:9398 Dequeue.proof <> buffer ind
R9402:9407 Dequeue.proof <> yellow abbrev
binder 9388:9389 <> b':233
R9424:9426 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9411:9420 Dequeue.proof <> buffer_seq def
R9422:9423 Dequeue.proof <> b':233 var
R9439:9442 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R9427:9436 Dequeue.proof <> buffer_seq def
R9443:9443 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R9445:9445 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R9452:9463 Dequeue.proof <> green_inject:238 def
R9474:9474 Dequeue.proof <> x:237 var
R9466:9467 Dequeue.proof <> B2 constr
R9471:9471 Dequeue.proof <> b:236 var
R9469:9469 Dequeue.proof <> a:235 var
R9466:9471 Dequeue.proof <> B2 constr
R9491:9502 Dequeue.proof <> green_inject:243 def
R9515:9515 Dequeue.proof <> x:242 var
R9505:9506 Dequeue.proof <> B3 constr
R9512:9512 Dequeue.proof <> c:241 var
R9510:9510 Dequeue.proof <> b:240 var
R9508:9508 Dequeue.proof <> a:239 var
R9505:9512 Dequeue.proof <> B3 constr
R9479:9480 Dequeue.proof <> :::'?'_x not
R9481:9482 Dequeue.proof <> B3 constr
R9520:9521 Dequeue.proof <> :::'?'_x not
R9522:9523 Dequeue.proof <> B4 constr
def 9580:9588 <> green_pop
binder 9591:9591 <> A:244
R9606:9611 Dequeue.proof <> buffer ind
R9613:9613 Dequeue.proof <> A:244 var
R9615:9619 Dequeue.proof <> green abbrev
binder 9602:9602 <> b:245
R9626:9628 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R9636:9638 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R9658:9660 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R9703:9704 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R9640:9642 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R9643:9655 Dequeue.proof <> yellow_buffer ind
R9629:9629 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9631:9632 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9635:9635 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 9633:9634 <> b':246
binder 9630:9630 <> x:247
binder 9629:9635 <> pat:248
R9673:9675 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9661:9670 Dequeue.proof <> buffer_seq def
R9679:9682 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R9676:9676 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R9678:9678 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R9677:9677 Dequeue.proof <> x:247 var
R9683:9699 Dequeue.proof <> yellow_buffer_seq def
R9701:9702 Dequeue.proof <> b':246 var
R9709:9717 Dequeue.proof <> green_pop:252 def
R9720:9721 Dequeue.proof <> B2 constr
R9725:9725 Dequeue.proof <> b:251 var
R9723:9723 Dequeue.proof <> a:250 var
R9720:9725 Dequeue.proof <> B2 constr
R9758:9766 Dequeue.proof <> green_pop:256 def
R9769:9770 Dequeue.proof <> B3 constr
R9776:9776 Dequeue.proof <> c:255 var
R9774:9774 Dequeue.proof <> b:254 var
R9772:9772 Dequeue.proof <> a:253 var
R9769:9776 Dequeue.proof <> B3 constr
R9731:9732 Dequeue.proof <> :::'?'_x not
R9733:9733 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9735:9737 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9754:9755 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9738:9746 Dequeue.proof <> Yellowish constr
R9749:9750 Dequeue.proof <> B1 constr
R9782:9783 Dequeue.proof <> :::'?'_x not
R9784:9784 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9786:9788 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9807:9808 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9789:9797 Dequeue.proof <> Yellowish constr
R9800:9801 Dequeue.proof <> B2 constr
def 9859:9869 <> green_eject
binder 9872:9872 <> A:257
R9887:9892 Dequeue.proof <> buffer ind
R9894:9894 Dequeue.proof <> A:257 var
R9896:9900 Dequeue.proof <> green abbrev
binder 9883:9883 <> b:258
R9907:9909 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R9917:9919 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R9939:9941 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R9984:9985 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R9935:9937 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R9920:9932 Dequeue.proof <> yellow_buffer ind
R9910:9910 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9913:9914 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9916:9916 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 9915:9915 <> x:259
binder 9911:9912 <> b':260
binder 9910:9916 <> pat:261
R9954:9956 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9942:9951 Dequeue.proof <> buffer_seq def
R9977:9980 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R9957:9973 Dequeue.proof <> yellow_buffer_seq def
R9975:9976 Dequeue.proof <> b':260 var
R9981:9981 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R9983:9983 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R9982:9982 Dequeue.proof <> x:259 var
R9990:10000 Dequeue.proof <> green_eject:265 def
R10003:10004 Dequeue.proof <> B2 constr
R10008:10008 Dequeue.proof <> b:264 var
R10006:10006 Dequeue.proof <> a:263 var
R10003:10008 Dequeue.proof <> B2 constr
R10041:10051 Dequeue.proof <> green_eject:269 def
R10054:10055 Dequeue.proof <> B3 constr
R10061:10061 Dequeue.proof <> c:268 var
R10059:10059 Dequeue.proof <> b:267 var
R10057:10057 Dequeue.proof <> a:266 var
R10054:10061 Dequeue.proof <> B3 constr
R10014:10015 Dequeue.proof <> :::'?'_x not
R10016:10017 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10034:10036 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10038:10038 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10018:10026 Dequeue.proof <> Yellowish constr
R10029:10030 Dequeue.proof <> B1 constr
R10067:10068 Dequeue.proof <> :::'?'_x not
R10069:10070 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10089:10091 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10093:10093 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10071:10079 Dequeue.proof <> Yellowish constr
R10082:10083 Dequeue.proof <> B2 constr
def 10167:10177 <> yellow_push
binder 10180:10180 <> A:270
R10195:10195 Dequeue.proof <> A:270 var
binder 10191:10191 <> x:271
R10203:10215 Dequeue.proof <> yellow_buffer ind
R10217:10217 Dequeue.proof <> A:270 var
binder 10199:10199 <> b:272
R10224:10225 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10228:10230 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10243:10245 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10292:10293 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10231:10240 Dequeue.proof <> any_buffer ind
binder 10226:10227 <> b':273
R10263:10265 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10246:10259 Dequeue.proof <> any_buffer_seq def
R10261:10262 Dequeue.proof <> b':273 var
R10269:10272 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R10266:10266 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R10268:10268 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R10273:10289 Dequeue.proof <> yellow_buffer_seq def
R10298:10308 Dequeue.proof <> yellow_push:277 def
R10313:10321 Dequeue.proof <> Yellowish constr
R10323:10325 Dequeue.proof <> buf:275 var
R10310:10310 Dequeue.proof <> x:276 var
R10313:10325 Dequeue.proof <> Yellowish constr
R10346:10347 Dequeue.proof <> B1 constr
R10349:10349 Dequeue.proof <> a:278 var
R10346:10349 Dequeue.proof <> B1 constr
R10374:10375 Dequeue.proof <> B2 constr
R10379:10379 Dequeue.proof <> b:284 var
R10377:10377 Dequeue.proof <> a:283 var
R10374:10379 Dequeue.proof <> B2 constr
R10406:10407 Dequeue.proof <> B3 constr
R10413:10413 Dequeue.proof <> c:292 var
R10411:10411 Dequeue.proof <> b:290 var
R10409:10409 Dequeue.proof <> a:289 var
R10406:10413 Dequeue.proof <> B3 constr
R10442:10443 Dequeue.proof <> B4 constr
R10451:10451 Dequeue.proof <> d:300 var
R10449:10449 Dequeue.proof <> c:299 var
R10447:10447 Dequeue.proof <> b:297 var
R10445:10445 Dequeue.proof <> a:296 var
R10442:10451 Dequeue.proof <> B4 constr
R10354:10355 Dequeue.proof <> :::'?'_x not
R10356:10358 Dequeue.proof <> Any constr
R10361:10362 Dequeue.proof <> B2 constr
R10384:10385 Dequeue.proof <> :::'?'_x not
R10386:10388 Dequeue.proof <> Any constr
R10391:10392 Dequeue.proof <> B3 constr
R10418:10419 Dequeue.proof <> :::'?'_x not
R10420:10422 Dequeue.proof <> Any constr
R10425:10426 Dequeue.proof <> B4 constr
R10456:10457 Dequeue.proof <> :::'?'_x not
R10458:10460 Dequeue.proof <> Any constr
R10463:10464 Dequeue.proof <> B5 constr
def 10553:10565 <> yellow_inject
binder 10568:10568 <> A:304
R10583:10595 Dequeue.proof <> yellow_buffer ind
R10597:10597 Dequeue.proof <> A:304 var
binder 10579:10579 <> b:305
R10605:10605 Dequeue.proof <> A:304 var
binder 10601:10601 <> x:306
R10612:10613 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10616:10618 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10631:10633 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10680:10681 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10619:10628 Dequeue.proof <> any_buffer ind
binder 10614:10615 <> b':307
R10651:10653 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10634:10647 Dequeue.proof <> any_buffer_seq def
R10649:10650 Dequeue.proof <> b':307 var
R10673:10676 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R10654:10670 Dequeue.proof <> yellow_buffer_seq def
R10677:10677 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R10679:10679 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R10686:10698 Dequeue.proof <> yellow_inject:311 def
R10716:10716 Dequeue.proof <> x:310 var
R10701:10709 Dequeue.proof <> Yellowish constr
R10711:10713 Dequeue.proof <> buf:309 var
R10701:10713 Dequeue.proof <> Yellowish constr
R10736:10737 Dequeue.proof <> B1 constr
R10739:10739 Dequeue.proof <> a:312 var
R10736:10739 Dequeue.proof <> B1 constr
R10764:10765 Dequeue.proof <> B2 constr
R10769:10769 Dequeue.proof <> b:318 var
R10767:10767 Dequeue.proof <> a:317 var
R10764:10769 Dequeue.proof <> B2 constr
R10796:10797 Dequeue.proof <> B3 constr
R10803:10803 Dequeue.proof <> c:326 var
R10801:10801 Dequeue.proof <> b:324 var
R10799:10799 Dequeue.proof <> a:323 var
R10796:10803 Dequeue.proof <> B3 constr
R10832:10833 Dequeue.proof <> B4 constr
R10841:10841 Dequeue.proof <> d:334 var
R10839:10839 Dequeue.proof <> c:333 var
R10837:10837 Dequeue.proof <> b:331 var
R10835:10835 Dequeue.proof <> a:330 var
R10832:10841 Dequeue.proof <> B4 constr
R10744:10745 Dequeue.proof <> :::'?'_x not
R10746:10748 Dequeue.proof <> Any constr
R10751:10752 Dequeue.proof <> B2 constr
R10774:10775 Dequeue.proof <> :::'?'_x not
R10776:10778 Dequeue.proof <> Any constr
R10781:10782 Dequeue.proof <> B3 constr
R10808:10809 Dequeue.proof <> :::'?'_x not
R10810:10812 Dequeue.proof <> Any constr
R10815:10816 Dequeue.proof <> B4 constr
R10846:10847 Dequeue.proof <> :::'?'_x not
R10848:10850 Dequeue.proof <> Any constr
R10853:10854 Dequeue.proof <> B5 constr
def 10942:10951 <> yellow_pop
binder 10954:10954 <> A:338
R10969:10981 Dequeue.proof <> yellow_buffer ind
R10983:10983 Dequeue.proof <> A:338 var
binder 10965:10965 <> b:339
R10990:10992 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R11000:11002 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R11019:11021 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R11068:11069 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R11004:11006 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R11007:11016 Dequeue.proof <> any_buffer ind
R10993:10993 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10995:10996 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10999:10999 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 10997:10998 <> b':340
binder 10994:10994 <> x:341
binder 10993:10999 <> pat:342
R11041:11043 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11022:11038 Dequeue.proof <> yellow_buffer_seq def
R11047:11050 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11044:11044 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R11046:11046 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R11045:11045 Dequeue.proof <> x:341 var
R11051:11064 Dequeue.proof <> any_buffer_seq def
R11066:11067 Dequeue.proof <> b':340 var
R11074:11083 Dequeue.proof <> yellow_pop:345 def
R11086:11094 Dequeue.proof <> Yellowish constr
R11096:11098 Dequeue.proof <> buf:344 var
R11086:11098 Dequeue.proof <> Yellowish constr
R11119:11120 Dequeue.proof <> B1 constr
R11122:11122 Dequeue.proof <> a:346 var
R11119:11122 Dequeue.proof <> B1 constr
R11146:11147 Dequeue.proof <> B2 constr
R11151:11151 Dequeue.proof <> b:351 var
R11149:11149 Dequeue.proof <> a:350 var
R11146:11151 Dequeue.proof <> B2 constr
R11179:11180 Dequeue.proof <> B3 constr
R11186:11186 Dequeue.proof <> c:358 var
R11184:11184 Dequeue.proof <> b:356 var
R11182:11182 Dequeue.proof <> a:355 var
R11179:11186 Dequeue.proof <> B3 constr
R11216:11217 Dequeue.proof <> B4 constr
R11225:11225 Dequeue.proof <> d:365 var
R11223:11223 Dequeue.proof <> c:364 var
R11221:11221 Dequeue.proof <> b:362 var
R11219:11219 Dequeue.proof <> a:361 var
R11216:11225 Dequeue.proof <> B4 constr
R11127:11128 Dequeue.proof <> :::'?'_x not
R11129:11129 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11131:11132 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11139:11139 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11133:11135 Dequeue.proof <> Any constr
R11137:11138 Dequeue.proof <> B0 constr
R11156:11157 Dequeue.proof <> :::'?'_x not
R11158:11158 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11160:11161 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11172:11172 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11162:11164 Dequeue.proof <> Any constr
R11167:11168 Dequeue.proof <> B1 constr
R11191:11192 Dequeue.proof <> :::'?'_x not
R11193:11193 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11195:11196 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11209:11209 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11197:11199 Dequeue.proof <> Any constr
R11202:11203 Dequeue.proof <> B2 constr
R11230:11231 Dequeue.proof <> :::'?'_x not
R11232:11232 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11234:11235 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11250:11250 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11236:11238 Dequeue.proof <> Any constr
R11241:11242 Dequeue.proof <> B3 constr
def 11329:11340 <> yellow_eject
binder 11343:11343 <> A:368
R11358:11370 Dequeue.proof <> yellow_buffer ind
R11372:11372 Dequeue.proof <> A:368 var
binder 11354:11354 <> b:369
R11379:11381 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R11389:11391 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R11408:11410 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R11457:11458 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R11404:11406 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R11392:11401 Dequeue.proof <> any_buffer ind
R11382:11382 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11385:11386 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11388:11388 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 11387:11387 <> x:370
binder 11383:11384 <> b':371
binder 11382:11388 <> pat:372
R11430:11432 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11411:11427 Dequeue.proof <> yellow_buffer_seq def
R11450:11453 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11433:11446 Dequeue.proof <> any_buffer_seq def
R11448:11449 Dequeue.proof <> b':371 var
R11454:11454 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R11456:11456 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R11455:11455 Dequeue.proof <> x:370 var
R11463:11474 Dequeue.proof <> yellow_eject:375 def
R11477:11485 Dequeue.proof <> Yellowish constr
R11487:11489 Dequeue.proof <> buf:374 var
R11477:11489 Dequeue.proof <> Yellowish constr
R11510:11511 Dequeue.proof <> B1 constr
R11513:11513 Dequeue.proof <> a:376 var
R11510:11513 Dequeue.proof <> B1 constr
R11537:11538 Dequeue.proof <> B2 constr
R11542:11542 Dequeue.proof <> b:381 var
R11540:11540 Dequeue.proof <> a:380 var
R11537:11542 Dequeue.proof <> B2 constr
R11570:11571 Dequeue.proof <> B3 constr
R11577:11577 Dequeue.proof <> c:388 var
R11575:11575 Dequeue.proof <> b:386 var
R11573:11573 Dequeue.proof <> a:385 var
R11570:11577 Dequeue.proof <> B3 constr
R11607:11608 Dequeue.proof <> B4 constr
R11616:11616 Dequeue.proof <> d:395 var
R11614:11614 Dequeue.proof <> c:394 var
R11612:11612 Dequeue.proof <> b:392 var
R11610:11610 Dequeue.proof <> a:391 var
R11607:11616 Dequeue.proof <> B4 constr
R11518:11519 Dequeue.proof <> :::'?'_x not
R11520:11520 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11527:11528 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11530:11530 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11521:11523 Dequeue.proof <> Any constr
R11525:11526 Dequeue.proof <> B0 constr
R11547:11548 Dequeue.proof <> :::'?'_x not
R11549:11549 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11560:11561 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11563:11563 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11550:11552 Dequeue.proof <> Any constr
R11555:11556 Dequeue.proof <> B1 constr
R11582:11583 Dequeue.proof <> :::'?'_x not
R11584:11584 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11597:11598 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11600:11600 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11585:11587 Dequeue.proof <> Any constr
R11590:11591 Dequeue.proof <> B2 constr
R11621:11622 Dequeue.proof <> :::'?'_x not
R11623:11623 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11638:11639 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11641:11641 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11624:11626 Dequeue.proof <> Any constr
R11629:11630 Dequeue.proof <> B3 constr
def 11685:11695 <> buffer_push
binder 11698:11698 <> A:398
R11713:11717 Dequeue.proof <> color ind
binder 11709:11709 <> C:399
R11725:11725 Dequeue.proof <> A:398 var
binder 11721:11721 <> x:400
R11733:11738 Dequeue.proof <> buffer ind
R11740:11740 Dequeue.proof <> A:398 var
R11742:11742 Dequeue.proof <> C:399 var
binder 11729:11729 <> b:401
R11749:11750 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R11753:11755 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R11770:11772 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R11808:11809 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R11756:11761 Dequeue.proof <> cdeque ind
R11765:11769 Dequeue.proof <> green abbrev
binder 11751:11752 <> cd:402
R11786:11788 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11773:11782 Dequeue.proof <> cdeque_seq def
R11784:11785 Dequeue.proof <> cd:402 var
R11792:11795 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11789:11789 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R11791:11791 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R11796:11805 Dequeue.proof <> buffer_seq def
R11814:11824 Dequeue.proof <> buffer_push:405 def
R11828:11829 Dequeue.proof <> B0 constr
R11826:11826 Dequeue.proof <> x:404 var
R11828:11829 Dequeue.proof <> B0 constr
R11850:11860 Dequeue.proof <> buffer_push:408 def
R11865:11866 Dequeue.proof <> B1 constr
R11868:11868 Dequeue.proof <> a:406 var
R11862:11862 Dequeue.proof <> x:407 var
R11865:11868 Dequeue.proof <> B1 constr
R11892:11902 Dequeue.proof <> buffer_push:412 def
R11907:11908 Dequeue.proof <> B2 constr
R11912:11912 Dequeue.proof <> b:410 var
R11910:11910 Dequeue.proof <> a:409 var
R11904:11904 Dequeue.proof <> x:411 var
R11907:11912 Dequeue.proof <> B2 constr
R11938:11948 Dequeue.proof <> buffer_push:417 def
R11953:11954 Dequeue.proof <> B3 constr
R11960:11960 Dequeue.proof <> c:415 var
R11958:11958 Dequeue.proof <> b:414 var
R11956:11956 Dequeue.proof <> a:413 var
R11950:11950 Dequeue.proof <> x:416 var
R11953:11960 Dequeue.proof <> B3 constr
R11988:11998 Dequeue.proof <> buffer_push:423 def
R12003:12004 Dequeue.proof <> B4 constr
R12012:12012 Dequeue.proof <> d:421 var
R12010:12010 Dequeue.proof <> c:420 var
R12008:12008 Dequeue.proof <> b:419 var
R12006:12006 Dequeue.proof <> a:418 var
R12000:12000 Dequeue.proof <> x:422 var
R12003:12012 Dequeue.proof <> B4 constr
R12042:12052 Dequeue.proof <> buffer_push:430 def
R12057:12058 Dequeue.proof <> B5 constr
R12068:12068 Dequeue.proof <> e:428 var
R12066:12066 Dequeue.proof <> d:427 var
R12064:12064 Dequeue.proof <> c:426 var
R12062:12062 Dequeue.proof <> b:425 var
R12060:12060 Dequeue.proof <> a:424 var
R12054:12054 Dequeue.proof <> x:429 var
R12057:12068 Dequeue.proof <> B5 constr
R11834:11835 Dequeue.proof <> :::'?'_x not
R11836:11840 Dequeue.proof <> Small constr
R11843:11844 Dequeue.proof <> B1 constr
R11874:11875 Dequeue.proof <> :::'?'_x not
R11876:11880 Dequeue.proof <> Small constr
R11883:11884 Dequeue.proof <> B2 constr
R11918:11919 Dequeue.proof <> :::'?'_x not
R11920:11924 Dequeue.proof <> Small constr
R11927:11928 Dequeue.proof <> B3 constr
R11966:11967 Dequeue.proof <> :::'?'_x not
R11968:11972 Dequeue.proof <> Small constr
R11975:11976 Dequeue.proof <> B4 constr
R12018:12019 Dequeue.proof <> :::'?'_x not
R12020:12024 Dequeue.proof <> Small constr
R12027:12028 Dequeue.proof <> B5 constr
R12074:12075 Dequeue.proof <> :::'?'_x not
R12076:12076 Dequeue.proof <> G constr
R12114:12118 Dequeue.proof <> Small constr
R12120:12121 Dequeue.proof <> B0 constr
R12079:12083 Dequeue.proof <> Green constr
R12102:12103 Dequeue.proof <> B3 constr
R12096:12099 Dequeue.proof <> HOLE constr
R12086:12087 Dequeue.proof <> B3 constr
def 12166:12178 <> buffer_inject
binder 12181:12181 <> A:431
R12196:12200 Dequeue.proof <> color ind
binder 12192:12192 <> C:432
R12208:12213 Dequeue.proof <> buffer ind
R12215:12215 Dequeue.proof <> A:431 var
R12217:12217 Dequeue.proof <> C:432 var
binder 12204:12204 <> b:433
R12225:12225 Dequeue.proof <> A:431 var
binder 12221:12221 <> x:434
R12232:12233 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R12236:12238 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R12253:12255 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R12291:12292 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R12239:12244 Dequeue.proof <> cdeque ind
R12248:12252 Dequeue.proof <> green abbrev
binder 12234:12235 <> cd:435
R12269:12271 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12256:12265 Dequeue.proof <> cdeque_seq def
R12267:12268 Dequeue.proof <> cd:435 var
R12284:12287 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12272:12281 Dequeue.proof <> buffer_seq def
R12288:12288 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R12290:12290 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R12297:12309 Dequeue.proof <> buffer_inject:438 def
R12314:12314 Dequeue.proof <> x:437 var
R12311:12312 Dequeue.proof <> B0 constr
R12311:12312 Dequeue.proof <> B0 constr
R12335:12347 Dequeue.proof <> buffer_inject:441 def
R12356:12356 Dequeue.proof <> x:440 var
R12350:12351 Dequeue.proof <> B1 constr
R12353:12353 Dequeue.proof <> a:439 var
R12350:12353 Dequeue.proof <> B1 constr
R12379:12391 Dequeue.proof <> buffer_inject:445 def
R12402:12402 Dequeue.proof <> x:444 var
R12394:12395 Dequeue.proof <> B2 constr
R12399:12399 Dequeue.proof <> b:443 var
R12397:12397 Dequeue.proof <> a:442 var
R12394:12399 Dequeue.proof <> B2 constr
R12427:12439 Dequeue.proof <> buffer_inject:450 def
R12452:12452 Dequeue.proof <> x:449 var
R12442:12443 Dequeue.proof <> B3 constr
R12449:12449 Dequeue.proof <> c:448 var
R12447:12447 Dequeue.proof <> b:447 var
R12445:12445 Dequeue.proof <> a:446 var
R12442:12449 Dequeue.proof <> B3 constr
R12479:12491 Dequeue.proof <> buffer_inject:456 def
R12506:12506 Dequeue.proof <> x:455 var
R12494:12495 Dequeue.proof <> B4 constr
R12503:12503 Dequeue.proof <> d:454 var
R12501:12501 Dequeue.proof <> c:453 var
R12499:12499 Dequeue.proof <> b:452 var
R12497:12497 Dequeue.proof <> a:451 var
R12494:12503 Dequeue.proof <> B4 constr
R12535:12547 Dequeue.proof <> buffer_inject:463 def
R12564:12564 Dequeue.proof <> x:462 var
R12550:12551 Dequeue.proof <> B5 constr
R12561:12561 Dequeue.proof <> e:461 var
R12559:12559 Dequeue.proof <> d:460 var
R12557:12557 Dequeue.proof <> c:459 var
R12555:12555 Dequeue.proof <> b:458 var
R12553:12553 Dequeue.proof <> a:457 var
R12550:12561 Dequeue.proof <> B5 constr
R12319:12320 Dequeue.proof <> :::'?'_x not
R12321:12325 Dequeue.proof <> Small constr
R12328:12329 Dequeue.proof <> B1 constr
R12361:12362 Dequeue.proof <> :::'?'_x not
R12363:12367 Dequeue.proof <> Small constr
R12370:12371 Dequeue.proof <> B2 constr
R12407:12408 Dequeue.proof <> :::'?'_x not
R12409:12413 Dequeue.proof <> Small constr
R12416:12417 Dequeue.proof <> B3 constr
R12457:12458 Dequeue.proof <> :::'?'_x not
R12459:12463 Dequeue.proof <> Small constr
R12466:12467 Dequeue.proof <> B4 constr
R12511:12512 Dequeue.proof <> :::'?'_x not
R12513:12517 Dequeue.proof <> Small constr
R12520:12521 Dequeue.proof <> B5 constr
R12569:12570 Dequeue.proof <> :::'?'_x not
R12571:12571 Dequeue.proof <> G constr
R12609:12613 Dequeue.proof <> Small constr
R12615:12616 Dequeue.proof <> B0 constr
R12574:12578 Dequeue.proof <> Green constr
R12597:12598 Dequeue.proof <> B3 constr
R12591:12594 Dequeue.proof <> HOLE constr
R12581:12582 Dequeue.proof <> B3 constr
def 12662:12671 <> buffer_pop
binder 12674:12674 <> A:464
binder 12676:12676 <> C:465
R12684:12689 Dequeue.proof <> buffer ind
R12691:12691 Dequeue.proof <> A:464 var
R12693:12693 Dequeue.proof <> C:465 var
binder 12680:12680 <> b:466
R12700:12701 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R12703:12705 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R12731:12737 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R12841:12842 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R12706:12711 Coq.Init.Datatypes <> option ind
R12715:12717 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R12718:12727 Dequeue.proof <> any_buffer ind
binder 12702:12702 <> o:467
R12750:12756 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12738:12747 Dequeue.proof <> buffer_seq def
R12763:12763 Dequeue.proof <> o:467 var
R12776:12779 Coq.Init.Datatypes <> None constr
R12784:12785 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R12793:12796 Coq.Init.Datatypes <> Some constr
R12798:12798 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12800:12801 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12804:12804 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12812:12815 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12809:12809 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R12811:12811 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R12816:12829 Dequeue.proof <> any_buffer_seq def
R12847:12856 Dequeue.proof <> buffer_pop:470 def
R12858:12859 Dequeue.proof <> B0 constr
R12858:12859 Dequeue.proof <> B0 constr
R12872:12881 Dequeue.proof <> buffer_pop:476 def
R12884:12885 Dequeue.proof <> B5 constr
R12895:12895 Dequeue.proof <> e:475 var
R12893:12893 Dequeue.proof <> d:474 var
R12891:12891 Dequeue.proof <> c:473 var
R12889:12889 Dequeue.proof <> b:472 var
R12887:12887 Dequeue.proof <> a:471 var
R12884:12895 Dequeue.proof <> B5 constr
R12931:12940 Dequeue.proof <> buffer_pop:478 def
R12942:12944 Dequeue.proof <> buf:477 var
R12985:12986 Dequeue.proof <> :::'?'_x not
R12987:12987 Dequeue.proof <> o:480 var
R12985:12987 Coq.Init.Specif <> exist constr
R12864:12865 Dequeue.proof <> :::'?'_x not
R12866:12869 Coq.Init.Datatypes <> None constr
R12951:12960 Dequeue.proof <> yellow_pop def
R12963:12971 Dequeue.proof <> Yellowish constr
R12992:12993 Dequeue.proof <> :::'?'_x not
R12994:12997 Coq.Init.Datatypes <> Some constr
R12951:12960 Dequeue.proof <> yellow_pop def
R12963:12971 Dequeue.proof <> Yellowish constr
R12992:12993 Dequeue.proof <> :::'?'_x not
R12994:12997 Coq.Init.Datatypes <> Some constr
R12951:12960 Dequeue.proof <> yellow_pop def
R12963:12971 Dequeue.proof <> Yellowish constr
R12992:12993 Dequeue.proof <> :::'?'_x not
R12994:12997 Coq.Init.Datatypes <> Some constr
R12951:12960 Dequeue.proof <> yellow_pop def
R12963:12971 Dequeue.proof <> Yellowish constr
R12992:12993 Dequeue.proof <> :::'?'_x not
R12994:12997 Coq.Init.Datatypes <> Some constr
R12901:12902 Dequeue.proof <> :::'?'_x not
R12903:12906 Coq.Init.Datatypes <> Some constr
R12908:12908 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12910:12911 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12928:12928 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12912:12914 Dequeue.proof <> Any constr
R12917:12918 Dequeue.proof <> B4 constr
def 13046:13057 <> buffer_eject
binder 13060:13060 <> A:482
binder 13062:13062 <> C:483
R13070:13075 Dequeue.proof <> buffer ind
R13077:13077 Dequeue.proof <> A:482 var
R13079:13079 Dequeue.proof <> C:483 var
binder 13066:13066 <> b:484
R13086:13087 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R13089:13091 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R13117:13123 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R13227:13228 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R13092:13097 Coq.Init.Datatypes <> option ind
R13112:13114 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R13100:13109 Dequeue.proof <> any_buffer ind
binder 13088:13088 <> o:485
R13136:13142 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13124:13133 Dequeue.proof <> buffer_seq def
R13149:13149 Dequeue.proof <> o:485 var
R13162:13165 Coq.Init.Datatypes <> None constr
R13170:13171 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R13179:13182 Coq.Init.Datatypes <> Some constr
R13184:13184 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13187:13188 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13190:13190 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13212:13215 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13195:13208 Dequeue.proof <> any_buffer_seq def
R13216:13216 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13218:13218 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13233:13244 Dequeue.proof <> buffer_eject:493 def
R13247:13248 Dequeue.proof <> B5 constr
R13258:13258 Dequeue.proof <> e:492 var
R13256:13256 Dequeue.proof <> d:491 var
R13254:13254 Dequeue.proof <> c:490 var
R13252:13252 Dequeue.proof <> b:489 var
R13250:13250 Dequeue.proof <> a:488 var
R13247:13258 Dequeue.proof <> B5 constr
R13294:13305 Dequeue.proof <> buffer_eject:494 def
R13307:13308 Dequeue.proof <> B0 constr
R13307:13308 Dequeue.proof <> B0 constr
R13321:13332 Dequeue.proof <> buffer_eject:496 def
R13334:13336 Dequeue.proof <> buf:495 var
R13379:13380 Dequeue.proof <> :::'?'_x not
R13381:13381 Dequeue.proof <> o:498 var
R13379:13381 Coq.Init.Specif <> exist constr
R13313:13314 Dequeue.proof <> :::'?'_x not
R13315:13318 Coq.Init.Datatypes <> None constr
R13343:13354 Dequeue.proof <> yellow_eject def
R13357:13365 Dequeue.proof <> Yellowish constr
R13386:13387 Dequeue.proof <> :::'?'_x not
R13388:13391 Coq.Init.Datatypes <> Some constr
R13343:13354 Dequeue.proof <> yellow_eject def
R13357:13365 Dequeue.proof <> Yellowish constr
R13386:13387 Dequeue.proof <> :::'?'_x not
R13388:13391 Coq.Init.Datatypes <> Some constr
R13343:13354 Dequeue.proof <> yellow_eject def
R13357:13365 Dequeue.proof <> Yellowish constr
R13386:13387 Dequeue.proof <> :::'?'_x not
R13388:13391 Coq.Init.Datatypes <> Some constr
R13343:13354 Dequeue.proof <> yellow_eject def
R13357:13365 Dequeue.proof <> Yellowish constr
R13386:13387 Dequeue.proof <> :::'?'_x not
R13388:13391 Coq.Init.Datatypes <> Some constr
R13264:13265 Dequeue.proof <> :::'?'_x not
R13266:13269 Coq.Init.Datatypes <> Some constr
R13271:13271 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13288:13289 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13291:13291 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13272:13274 Dequeue.proof <> Any constr
R13277:13278 Dequeue.proof <> B4 constr
def 13436:13445 <> prefix_rot
binder 13448:13448 <> A:500
binder 13450:13450 <> C:501
R13458:13458 Dequeue.proof <> A:500 var
binder 13454:13454 <> x:502
R13466:13471 Dequeue.proof <> buffer ind
R13473:13473 Dequeue.proof <> A:500 var
R13475:13475 Dequeue.proof <> C:501 var
binder 13462:13462 <> b:503
R13482:13484 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R13492:13494 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R13509:13511 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R13554:13555 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R13505:13507 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R13495:13500 Dequeue.proof <> buffer ind
R13485:13485 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13488:13489 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13491:13491 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 13490:13490 <> y:504
binder 13486:13487 <> b':505
binder 13485:13491 <> pat:506
R13531:13533 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13515:13518 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13512:13512 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13514:13514 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13519:13528 Dequeue.proof <> buffer_seq def
R13547:13550 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13534:13543 Dequeue.proof <> buffer_seq def
R13545:13546 Dequeue.proof <> b':505 var
R13551:13551 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13553:13553 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13552:13552 Dequeue.proof <> y:504 var
R13560:13569 Dequeue.proof <> prefix_rot:509 def
R13573:13574 Dequeue.proof <> B0 constr
R13571:13571 Dequeue.proof <> x:508 var
R13573:13574 Dequeue.proof <> B0 constr
R13590:13599 Dequeue.proof <> prefix_rot:512 def
R13604:13605 Dequeue.proof <> B1 constr
R13607:13607 Dequeue.proof <> a:510 var
R13601:13601 Dequeue.proof <> x:511 var
R13604:13607 Dequeue.proof <> B1 constr
R13626:13635 Dequeue.proof <> prefix_rot:516 def
R13640:13641 Dequeue.proof <> B2 constr
R13645:13645 Dequeue.proof <> b:514 var
R13643:13643 Dequeue.proof <> a:513 var
R13637:13637 Dequeue.proof <> x:515 var
R13640:13645 Dequeue.proof <> B2 constr
R13666:13675 Dequeue.proof <> prefix_rot:521 def
R13680:13681 Dequeue.proof <> B3 constr
R13687:13687 Dequeue.proof <> c:519 var
R13685:13685 Dequeue.proof <> b:518 var
R13683:13683 Dequeue.proof <> a:517 var
R13677:13677 Dequeue.proof <> x:520 var
R13680:13687 Dequeue.proof <> B3 constr
R13710:13719 Dequeue.proof <> prefix_rot:527 def
R13724:13725 Dequeue.proof <> B4 constr
R13733:13733 Dequeue.proof <> d:525 var
R13731:13731 Dequeue.proof <> c:524 var
R13729:13729 Dequeue.proof <> b:523 var
R13727:13727 Dequeue.proof <> a:522 var
R13721:13721 Dequeue.proof <> x:526 var
R13724:13733 Dequeue.proof <> B4 constr
R13758:13767 Dequeue.proof <> prefix_rot:534 def
R13772:13773 Dequeue.proof <> B5 constr
R13783:13783 Dequeue.proof <> e:532 var
R13781:13781 Dequeue.proof <> d:531 var
R13779:13779 Dequeue.proof <> c:530 var
R13777:13777 Dequeue.proof <> b:529 var
R13775:13775 Dequeue.proof <> a:528 var
R13769:13769 Dequeue.proof <> x:533 var
R13772:13783 Dequeue.proof <> B5 constr
R13579:13580 Dequeue.proof <> :::'?'_x not
R13581:13581 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13584:13585 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13587:13587 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13582:13583 Dequeue.proof <> B0 constr
R13613:13614 Dequeue.proof <> :::'?'_x not
R13615:13615 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13620:13621 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13623:13623 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13616:13617 Dequeue.proof <> B1 constr
R13651:13652 Dequeue.proof <> :::'?'_x not
R13653:13653 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13660:13661 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13663:13663 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13654:13655 Dequeue.proof <> B2 constr
R13693:13694 Dequeue.proof <> :::'?'_x not
R13695:13695 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13704:13705 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13707:13707 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13696:13697 Dequeue.proof <> B3 constr
R13739:13740 Dequeue.proof <> :::'?'_x not
R13741:13741 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13752:13753 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13755:13755 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13742:13743 Dequeue.proof <> B4 constr
R13789:13790 Dequeue.proof <> :::'?'_x not
R13791:13791 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13804:13805 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13807:13807 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13792:13793 Dequeue.proof <> B5 constr
def 13847:13856 <> suffix_rot
binder 13859:13859 <> A:535
binder 13861:13861 <> C:536
R13869:13874 Dequeue.proof <> buffer ind
R13876:13876 Dequeue.proof <> A:535 var
R13878:13878 Dequeue.proof <> C:536 var
binder 13865:13865 <> b:537
R13886:13886 Dequeue.proof <> A:535 var
binder 13882:13882 <> y:538
R13893:13895 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R13903:13905 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R13920:13922 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R13965:13966 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R13907:13909 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R13910:13915 Dequeue.proof <> buffer ind
R13896:13896 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13898:13899 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13902:13902 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 13900:13901 <> b':539
binder 13897:13897 <> x:540
binder 13896:13902 <> pat:541
R13942:13944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13935:13938 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13923:13932 Dequeue.proof <> buffer_seq def
R13939:13939 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13941:13941 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13948:13951 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13945:13945 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13947:13947 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13946:13946 Dequeue.proof <> x:540 var
R13952:13961 Dequeue.proof <> buffer_seq def
R13963:13964 Dequeue.proof <> b':539 var
R13971:13980 Dequeue.proof <> suffix_rot:544 def
R13985:13985 Dequeue.proof <> x:543 var
R13982:13983 Dequeue.proof <> B0 constr
R13982:13983 Dequeue.proof <> B0 constr
R14001:14010 Dequeue.proof <> suffix_rot:547 def
R14019:14019 Dequeue.proof <> x:546 var
R14013:14014 Dequeue.proof <> B1 constr
R14016:14016 Dequeue.proof <> a:545 var
R14013:14016 Dequeue.proof <> B1 constr
R14037:14046 Dequeue.proof <> suffix_rot:551 def
R14057:14057 Dequeue.proof <> x:550 var
R14049:14050 Dequeue.proof <> B2 constr
R14054:14054 Dequeue.proof <> b:549 var
R14052:14052 Dequeue.proof <> a:548 var
R14049:14054 Dequeue.proof <> B2 constr
R14077:14086 Dequeue.proof <> suffix_rot:556 def
R14099:14099 Dequeue.proof <> x:555 var
R14089:14090 Dequeue.proof <> B3 constr
R14096:14096 Dequeue.proof <> c:554 var
R14094:14094 Dequeue.proof <> b:553 var
R14092:14092 Dequeue.proof <> a:552 var
R14089:14096 Dequeue.proof <> B3 constr
R14121:14130 Dequeue.proof <> suffix_rot:562 def
R14145:14145 Dequeue.proof <> x:561 var
R14133:14134 Dequeue.proof <> B4 constr
R14142:14142 Dequeue.proof <> d:560 var
R14140:14140 Dequeue.proof <> c:559 var
R14138:14138 Dequeue.proof <> b:558 var
R14136:14136 Dequeue.proof <> a:557 var
R14133:14142 Dequeue.proof <> B4 constr
R14169:14178 Dequeue.proof <> suffix_rot:569 def
R14195:14195 Dequeue.proof <> x:568 var
R14181:14182 Dequeue.proof <> B5 constr
R14192:14192 Dequeue.proof <> e:567 var
R14190:14190 Dequeue.proof <> d:566 var
R14188:14188 Dequeue.proof <> c:565 var
R14186:14186 Dequeue.proof <> b:564 var
R14184:14184 Dequeue.proof <> a:563 var
R14181:14192 Dequeue.proof <> B5 constr
R13990:13991 Dequeue.proof <> :::'?'_x not
R13992:13992 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13994:13995 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13998:13998 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13996:13997 Dequeue.proof <> B0 constr
R14024:14025 Dequeue.proof <> :::'?'_x not
R14026:14026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14028:14029 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14034:14034 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14030:14031 Dequeue.proof <> B1 constr
R14062:14063 Dequeue.proof <> :::'?'_x not
R14064:14064 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14066:14067 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14074:14074 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14068:14069 Dequeue.proof <> B2 constr
R14104:14105 Dequeue.proof <> :::'?'_x not
R14106:14106 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14108:14109 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14118:14118 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14110:14111 Dequeue.proof <> B3 constr
R14150:14151 Dequeue.proof <> :::'?'_x not
R14152:14152 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14154:14155 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14166:14166 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14156:14157 Dequeue.proof <> B4 constr
R14200:14201 Dequeue.proof <> :::'?'_x not
R14202:14202 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14204:14205 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14218:14218 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14206:14207 Dequeue.proof <> B5 constr
def 14297:14304 <> prefix23
binder 14307:14307 <> A:570
binder 14309:14309 <> G:571
binder 14311:14311 <> Y:572
R14319:14324 Coq.Init.Datatypes <> option ind
R14326:14326 Dequeue.proof <> A:570 var
binder 14315:14315 <> o:573
R14334:14336 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R14333:14333 Dequeue.proof <> A:570 var
R14337:14337 Dequeue.proof <> A:570 var
binder 14330:14330 <> p:574
R14344:14345 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R14347:14349 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R14374:14380 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R14422:14423 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R14350:14355 Dequeue.proof <> buffer ind
R14360:14362 Dequeue.proof <> Mix constr
R14368:14372 Dequeue.proof <> NoRed constr
binder 14346:14346 <> b:575
R14393:14395 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14381:14390 Dequeue.proof <> buffer_seq def
R14392:14392 Dequeue.proof <> b:575 var
R14408:14411 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14396:14405 Dequeue.proof <> option_seq def
R14412:14419 Dequeue.proof <> pair_seq def
R14428:14435 Dequeue.proof <> prefix23:579 def
R14442:14442 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14444:14445 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14447:14447 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14443:14443 Dequeue.proof <> b:577 var
R14446:14446 Dequeue.proof <> c:578 var
R14437:14440 Coq.Init.Datatypes <> None constr
R14437:14440 Coq.Init.Datatypes <> None constr
R14442:14447 Coq.Init.Datatypes <> pair constr
R14462:14469 Dequeue.proof <> prefix23:583 def
R14480:14480 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14482:14483 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14485:14485 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14481:14481 Dequeue.proof <> b:581 var
R14484:14484 Dequeue.proof <> c:582 var
R14472:14475 Coq.Init.Datatypes <> Some constr
R14477:14477 Dequeue.proof <> a:580 var
R14472:14477 Coq.Init.Datatypes <> Some constr
R14480:14485 Coq.Init.Datatypes <> pair constr
R14490:14491 Dequeue.proof <> :::'?'_x not
R14492:14493 Dequeue.proof <> B3 constr
R14452:14453 Dequeue.proof <> :::'?'_x not
R14454:14455 Dequeue.proof <> B2 constr
def 14575:14582 <> suffix23
binder 14585:14585 <> A:584
binder 14587:14587 <> G:585
binder 14589:14589 <> Y:586
R14598:14600 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R14597:14597 Dequeue.proof <> A:584 var
R14601:14601 Dequeue.proof <> A:584 var
binder 14593:14593 <> p:587
R14609:14614 Coq.Init.Datatypes <> option ind
R14616:14616 Dequeue.proof <> A:584 var
binder 14605:14605 <> o:588
R14623:14624 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R14626:14628 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R14653:14659 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R14701:14702 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R14629:14634 Dequeue.proof <> buffer ind
R14639:14641 Dequeue.proof <> Mix constr
R14647:14651 Dequeue.proof <> NoRed constr
binder 14625:14625 <> b:589
R14672:14674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14660:14669 Dequeue.proof <> buffer_seq def
R14671:14671 Dequeue.proof <> b:589 var
R14685:14688 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14675:14682 Dequeue.proof <> pair_seq def
R14689:14698 Dequeue.proof <> option_seq def
R14707:14714 Dequeue.proof <> suffix23:593 def
R14723:14726 Coq.Init.Datatypes <> None constr
R14716:14716 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14718:14719 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14721:14721 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14717:14717 Dequeue.proof <> a:591 var
R14720:14720 Dequeue.proof <> b:592 var
R14716:14721 Coq.Init.Datatypes <> pair constr
R14723:14726 Coq.Init.Datatypes <> None constr
R14741:14748 Dequeue.proof <> suffix23:597 def
R14758:14761 Coq.Init.Datatypes <> Some constr
R14763:14763 Dequeue.proof <> c:596 var
R14750:14750 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14752:14753 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14755:14755 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14751:14751 Dequeue.proof <> a:594 var
R14754:14754 Dequeue.proof <> b:595 var
R14750:14755 Coq.Init.Datatypes <> pair constr
R14758:14763 Coq.Init.Datatypes <> Some constr
R14769:14770 Dequeue.proof <> :::'?'_x not
R14771:14772 Dequeue.proof <> B3 constr
R14731:14732 Dequeue.proof <> :::'?'_x not
R14733:14734 Dequeue.proof <> B2 constr
def 14871:14878 <> suffix12
binder 14881:14881 <> A:598
R14889:14889 Dequeue.proof <> A:598 var
binder 14885:14885 <> x:599
R14897:14902 Coq.Init.Datatypes <> option ind
R14904:14904 Dequeue.proof <> A:598 var
binder 14893:14893 <> o:600
R14911:14912 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R14914:14916 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R14932:14934 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R14969:14970 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R14917:14922 Dequeue.proof <> buffer ind
R14926:14931 Dequeue.proof <> yellow abbrev
binder 14913:14913 <> b:601
R14947:14949 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14935:14944 Dequeue.proof <> buffer_seq def
R14946:14946 Dequeue.proof <> b:601 var
R14953:14956 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14950:14950 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14952:14952 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14957:14966 Dequeue.proof <> option_seq def
R14975:14982 Dequeue.proof <> suffix12:604 def
R14986:14989 Coq.Init.Datatypes <> None constr
R14984:14984 Dequeue.proof <> x:603 var
R14986:14989 Coq.Init.Datatypes <> None constr
R15002:15009 Dequeue.proof <> suffix12:607 def
R15014:15017 Coq.Init.Datatypes <> Some constr
R15019:15019 Dequeue.proof <> y:606 var
R15011:15011 Dequeue.proof <> x:605 var
R15014:15019 Coq.Init.Datatypes <> Some constr
R15025:15026 Dequeue.proof <> :::'?'_x not
R15027:15028 Dequeue.proof <> B2 constr
R14994:14995 Dequeue.proof <> :::'?'_x not
R14996:14997 Dequeue.proof <> B1 constr
def 15205:15220 <> prefix_decompose
binder 15223:15223 <> A:608
binder 15225:15225 <> C:609
R15233:15238 Dequeue.proof <> buffer ind
R15240:15240 Dequeue.proof <> A:608 var
R15242:15242 Dequeue.proof <> C:609 var
binder 15229:15229 <> b:610
R15249:15250 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R15254:15256 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R15268:15270 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R15334:15335 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R15257:15265 Dequeue.proof <> decompose ind
binder 15251:15253 <> dec:611
R15283:15285 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15271:15280 Dequeue.proof <> buffer_seq def
R15308:15311 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15286:15303 Dequeue.proof <> decompose_main_seq def
R15305:15307 Dequeue.proof <> dec:611 var
R15312:15329 Dequeue.proof <> decompose_rest_seq def
R15331:15333 Dequeue.proof <> dec:611 var
R15340:15355 Dequeue.proof <> prefix_decompose:613 def
R15357:15358 Dequeue.proof <> B0 constr
R15357:15358 Dequeue.proof <> B0 constr
R15381:15396 Dequeue.proof <> prefix_decompose:615 def
R15399:15400 Dequeue.proof <> B1 constr
R15402:15402 Dequeue.proof <> x:614 var
R15399:15402 Dequeue.proof <> B1 constr
R15430:15445 Dequeue.proof <> prefix_decompose:618 def
R15448:15449 Dequeue.proof <> B2 constr
R15453:15453 Dequeue.proof <> b:617 var
R15451:15451 Dequeue.proof <> a:616 var
R15448:15453 Dequeue.proof <> B2 constr
R15474:15489 Dequeue.proof <> prefix_decompose:622 def
R15492:15493 Dequeue.proof <> B3 constr
R15499:15499 Dequeue.proof <> c:621 var
R15497:15497 Dequeue.proof <> b:620 var
R15495:15495 Dequeue.proof <> a:619 var
R15492:15499 Dequeue.proof <> B3 constr
R15522:15537 Dequeue.proof <> prefix_decompose:627 def
R15540:15541 Dequeue.proof <> B4 constr
R15549:15549 Dequeue.proof <> d:626 var
R15547:15547 Dequeue.proof <> c:625 var
R15545:15545 Dequeue.proof <> b:624 var
R15543:15543 Dequeue.proof <> a:623 var
R15540:15549 Dequeue.proof <> B4 constr
R15583:15598 Dequeue.proof <> prefix_decompose:633 def
R15601:15602 Dequeue.proof <> B5 constr
R15612:15612 Dequeue.proof <> e:632 var
R15610:15610 Dequeue.proof <> d:631 var
R15608:15608 Dequeue.proof <> c:630 var
R15606:15606 Dequeue.proof <> b:629 var
R15604:15604 Dequeue.proof <> a:628 var
R15601:15612 Dequeue.proof <> B5 constr
R15363:15364 Dequeue.proof <> :::'?'_x not
R15365:15373 Dequeue.proof <> Underflow constr
R15375:15378 Coq.Init.Datatypes <> None constr
R15408:15409 Dequeue.proof <> :::'?'_x not
R15410:15418 Dequeue.proof <> Underflow constr
R15421:15424 Coq.Init.Datatypes <> Some constr
R15459:15460 Dequeue.proof <> :::'?'_x not
R15461:15462 Dequeue.proof <> Ok constr
R15465:15466 Dequeue.proof <> B2 constr
R15505:15506 Dequeue.proof <> :::'?'_x not
R15507:15508 Dequeue.proof <> Ok constr
R15511:15512 Dequeue.proof <> B3 constr
R15555:15556 Dequeue.proof <> :::'?'_x not
R15557:15564 Dequeue.proof <> Overflow constr
R15575:15575 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15577:15578 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15580:15580 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15567:15568 Dequeue.proof <> B2 constr
R15618:15619 Dequeue.proof <> :::'?'_x not
R15620:15627 Dequeue.proof <> Overflow constr
R15640:15640 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15642:15643 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15645:15645 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15630:15631 Dequeue.proof <> B3 constr
def 15822:15837 <> suffix_decompose
binder 15840:15840 <> A:634
binder 15842:15842 <> C:635
R15850:15855 Dequeue.proof <> buffer ind
R15857:15857 Dequeue.proof <> A:634 var
R15859:15859 Dequeue.proof <> C:635 var
binder 15846:15846 <> b:636
R15866:15867 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R15871:15873 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R15885:15887 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R15951:15952 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R15874:15882 Dequeue.proof <> decompose ind
binder 15868:15870 <> dec:637
R15900:15902 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15888:15897 Dequeue.proof <> buffer_seq def
R15925:15928 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15903:15920 Dequeue.proof <> decompose_rest_seq def
R15922:15924 Dequeue.proof <> dec:637 var
R15929:15946 Dequeue.proof <> decompose_main_seq def
R15948:15950 Dequeue.proof <> dec:637 var
R15957:15972 Dequeue.proof <> suffix_decompose:639 def
R15974:15975 Dequeue.proof <> B0 constr
R15974:15975 Dequeue.proof <> B0 constr
R15998:16013 Dequeue.proof <> suffix_decompose:641 def
R16016:16017 Dequeue.proof <> B1 constr
R16019:16019 Dequeue.proof <> x:640 var
R16016:16019 Dequeue.proof <> B1 constr
R16047:16062 Dequeue.proof <> suffix_decompose:644 def
R16065:16066 Dequeue.proof <> B2 constr
R16070:16070 Dequeue.proof <> b:643 var
R16068:16068 Dequeue.proof <> a:642 var
R16065:16070 Dequeue.proof <> B2 constr
R16091:16106 Dequeue.proof <> suffix_decompose:648 def
R16109:16110 Dequeue.proof <> B3 constr
R16116:16116 Dequeue.proof <> c:647 var
R16114:16114 Dequeue.proof <> b:646 var
R16112:16112 Dequeue.proof <> a:645 var
R16109:16116 Dequeue.proof <> B3 constr
R16139:16154 Dequeue.proof <> suffix_decompose:653 def
R16157:16158 Dequeue.proof <> B4 constr
R16166:16166 Dequeue.proof <> d:652 var
R16164:16164 Dequeue.proof <> c:651 var
R16162:16162 Dequeue.proof <> b:650 var
R16160:16160 Dequeue.proof <> a:649 var
R16157:16166 Dequeue.proof <> B4 constr
R16200:16215 Dequeue.proof <> suffix_decompose:659 def
R16218:16219 Dequeue.proof <> B5 constr
R16229:16229 Dequeue.proof <> e:658 var
R16227:16227 Dequeue.proof <> d:657 var
R16225:16225 Dequeue.proof <> c:656 var
R16223:16223 Dequeue.proof <> b:655 var
R16221:16221 Dequeue.proof <> a:654 var
R16218:16229 Dequeue.proof <> B5 constr
R15980:15981 Dequeue.proof <> :::'?'_x not
R15982:15990 Dequeue.proof <> Underflow constr
R15992:15995 Coq.Init.Datatypes <> None constr
R16025:16026 Dequeue.proof <> :::'?'_x not
R16027:16035 Dequeue.proof <> Underflow constr
R16038:16041 Coq.Init.Datatypes <> Some constr
R16076:16077 Dequeue.proof <> :::'?'_x not
R16078:16079 Dequeue.proof <> Ok constr
R16082:16083 Dequeue.proof <> B2 constr
R16122:16123 Dequeue.proof <> :::'?'_x not
R16124:16125 Dequeue.proof <> Ok constr
R16128:16129 Dequeue.proof <> B3 constr
R16172:16173 Dequeue.proof <> :::'?'_x not
R16174:16181 Dequeue.proof <> Overflow constr
R16192:16192 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16194:16195 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16197:16197 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16184:16185 Dequeue.proof <> B2 constr
R16235:16236 Dequeue.proof <> :::'?'_x not
R16237:16244 Dequeue.proof <> Overflow constr
R16257:16257 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16259:16260 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16262:16262 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16247:16248 Dequeue.proof <> B3 constr
def 16332:16348 <> buffer_unsandwich
binder 16351:16351 <> A:660
binder 16353:16353 <> C:661
R16361:16366 Dequeue.proof <> buffer ind
R16368:16368 Dequeue.proof <> A:660 var
R16370:16370 Dequeue.proof <> C:661 var
binder 16357:16357 <> b:662
R16377:16378 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R16381:16383 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R16394:16396 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R16427:16428 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R16384:16391 Dequeue.proof <> sandwich ind
binder 16379:16380 <> sw:663
R16409:16411 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16397:16406 Dequeue.proof <> buffer_seq def
R16412:16423 Dequeue.proof <> sandwich_seq def
R16425:16426 Dequeue.proof <> sw:663 var
R16433:16449 Dequeue.proof <> buffer_unsandwich:665 def
R16451:16452 Dequeue.proof <> B0 constr
R16451:16452 Dequeue.proof <> B0 constr
R16471:16487 Dequeue.proof <> buffer_unsandwich:667 def
R16490:16491 Dequeue.proof <> B1 constr
R16493:16493 Dequeue.proof <> a:666 var
R16490:16493 Dequeue.proof <> B1 constr
R16517:16533 Dequeue.proof <> buffer_unsandwich:670 def
R16536:16537 Dequeue.proof <> B2 constr
R16541:16541 Dequeue.proof <> b:669 var
R16539:16539 Dequeue.proof <> a:668 var
R16536:16541 Dequeue.proof <> B2 constr
R16566:16582 Dequeue.proof <> buffer_unsandwich:674 def
R16585:16586 Dequeue.proof <> B3 constr
R16592:16592 Dequeue.proof <> c:673 var
R16590:16590 Dequeue.proof <> b:672 var
R16588:16588 Dequeue.proof <> a:671 var
R16585:16592 Dequeue.proof <> B3 constr
R16621:16637 Dequeue.proof <> buffer_unsandwich:679 def
R16640:16641 Dequeue.proof <> B4 constr
R16649:16649 Dequeue.proof <> d:678 var
R16647:16647 Dequeue.proof <> c:677 var
R16645:16645 Dequeue.proof <> b:676 var
R16643:16643 Dequeue.proof <> a:675 var
R16640:16649 Dequeue.proof <> B4 constr
R16680:16696 Dequeue.proof <> buffer_unsandwich:685 def
R16699:16700 Dequeue.proof <> B5 constr
R16710:16710 Dequeue.proof <> e:684 var
R16708:16708 Dequeue.proof <> d:683 var
R16706:16706 Dequeue.proof <> c:682 var
R16704:16704 Dequeue.proof <> b:681 var
R16702:16702 Dequeue.proof <> a:680 var
R16699:16710 Dequeue.proof <> B5 constr
R16457:16458 Dequeue.proof <> :::'?'_x not
R16459:16463 Dequeue.proof <> Alone constr
R16465:16468 Coq.Init.Datatypes <> None constr
R16499:16500 Dequeue.proof <> :::'?'_x not
R16501:16505 Dequeue.proof <> Alone constr
R16508:16511 Coq.Init.Datatypes <> Some constr
R16547:16548 Dequeue.proof <> :::'?'_x not
R16549:16556 Dequeue.proof <> Sandwich constr
R16560:16561 Dequeue.proof <> B0 constr
R16598:16599 Dequeue.proof <> :::'?'_x not
R16600:16607 Dequeue.proof <> Sandwich constr
R16612:16613 Dequeue.proof <> B1 constr
R16655:16656 Dequeue.proof <> :::'?'_x not
R16657:16664 Dequeue.proof <> Sandwich constr
R16669:16670 Dequeue.proof <> B2 constr
R16716:16717 Dequeue.proof <> :::'?'_x not
R16718:16725 Dequeue.proof <> Sandwich constr
R16730:16731 Dequeue.proof <> B3 constr
def 16910:16921 <> buffer_halve
binder 16924:16924 <> A:686
binder 16926:16926 <> C:687
R16934:16939 Dequeue.proof <> buffer ind
R16941:16941 Dequeue.proof <> A:686 var
R16943:16943 Dequeue.proof <> C:687 var
binder 16930:16930 <> b:688
R16950:16952 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R16960:16962 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R16992:16998 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R17058:17059 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R16971:16973 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R16963:16968 Coq.Init.Datatypes <> option ind
R16974:16983 Dequeue.proof <> any_buffer ind
R16987:16989 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R16953:16953 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16955:16956 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16959:16959 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 16957:16958 <> b':689
binder 16954:16954 <> o:690
binder 16953:16959 <> pat:691
R17011:17013 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16999:17008 Dequeue.proof <> buffer_seq def
R17026:17029 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17014:17023 Dequeue.proof <> option_seq def
R17025:17025 Dequeue.proof <> o:690 var
R17030:17037 Dequeue.proof <> flattenp def
R17040:17053 Dequeue.proof <> any_buffer_seq def
R17055:17056 Dequeue.proof <> b':689 var
R17064:17075 Dequeue.proof <> buffer_halve:693 def
R17077:17078 Dequeue.proof <> B0 constr
R17077:17078 Dequeue.proof <> B0 constr
R17101:17112 Dequeue.proof <> buffer_halve:695 def
R17115:17116 Dequeue.proof <> B1 constr
R17118:17118 Dequeue.proof <> a:694 var
R17115:17118 Dequeue.proof <> B1 constr
R17144:17155 Dequeue.proof <> buffer_halve:698 def
R17158:17159 Dequeue.proof <> B2 constr
R17163:17163 Dequeue.proof <> b:697 var
R17161:17161 Dequeue.proof <> a:696 var
R17158:17163 Dequeue.proof <> B2 constr
R17196:17207 Dequeue.proof <> buffer_halve:702 def
R17210:17211 Dequeue.proof <> B3 constr
R17217:17217 Dequeue.proof <> c:701 var
R17215:17215 Dequeue.proof <> b:700 var
R17213:17213 Dequeue.proof <> a:699 var
R17210:17217 Dequeue.proof <> B3 constr
R17252:17263 Dequeue.proof <> buffer_halve:707 def
R17266:17267 Dequeue.proof <> B4 constr
R17275:17275 Dequeue.proof <> d:706 var
R17273:17273 Dequeue.proof <> c:705 var
R17271:17271 Dequeue.proof <> b:704 var
R17269:17269 Dequeue.proof <> a:703 var
R17266:17275 Dequeue.proof <> B4 constr
R17315:17326 Dequeue.proof <> buffer_halve:713 def
R17329:17330 Dequeue.proof <> B5 constr
R17340:17340 Dequeue.proof <> e:712 var
R17338:17338 Dequeue.proof <> d:711 var
R17336:17336 Dequeue.proof <> c:710 var
R17334:17334 Dequeue.proof <> b:709 var
R17332:17332 Dequeue.proof <> a:708 var
R17329:17340 Dequeue.proof <> B5 constr
R17083:17084 Dequeue.proof <> :::'?'_x not
R17085:17085 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17090:17091 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17098:17098 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17086:17089 Coq.Init.Datatypes <> None constr
R17092:17094 Dequeue.proof <> Any constr
R17096:17097 Dequeue.proof <> B0 constr
R17124:17125 Dequeue.proof <> :::'?'_x not
R17126:17126 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17133:17134 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17141:17141 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17127:17130 Coq.Init.Datatypes <> Some constr
R17135:17137 Dequeue.proof <> Any constr
R17139:17140 Dequeue.proof <> B0 constr
R17169:17170 Dequeue.proof <> :::'?'_x not
R17171:17171 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17176:17177 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17193:17193 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17172:17175 Coq.Init.Datatypes <> None constr
R17178:17180 Dequeue.proof <> Any constr
R17183:17184 Dequeue.proof <> B1 constr
R17186:17186 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17188:17189 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17191:17191 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17223:17224 Dequeue.proof <> :::'?'_x not
R17225:17225 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17232:17233 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17249:17249 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17226:17229 Coq.Init.Datatypes <> Some constr
R17234:17236 Dequeue.proof <> Any constr
R17239:17240 Dequeue.proof <> B1 constr
R17242:17242 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17244:17245 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17247:17247 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17281:17282 Dequeue.proof <> :::'?'_x not
R17283:17283 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17288:17289 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17312:17312 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17284:17287 Coq.Init.Datatypes <> None constr
R17290:17292 Dequeue.proof <> Any constr
R17295:17296 Dequeue.proof <> B2 constr
R17305:17305 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17307:17308 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17310:17310 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17298:17298 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17300:17301 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17303:17303 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17346:17347 Dequeue.proof <> :::'?'_x not
R17348:17348 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17355:17356 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17379:17379 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17349:17352 Coq.Init.Datatypes <> Some constr
R17357:17359 Dequeue.proof <> Any constr
R17362:17363 Dequeue.proof <> B2 constr
R17372:17372 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17374:17375 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17377:17377 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17365:17365 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17367:17368 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17370:17370 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 17591:17609 <> green_prefix_concat
binder 17612:17612 <> A:714
binder 17614:17614 <> C:715
R17627:17632 Dequeue.proof <> buffer ind
R17634:17634 Dequeue.proof <> A:714 var
R17636:17636 Dequeue.proof <> C:715 var
binder 17620:17623 <> buf1:716
R17649:17654 Dequeue.proof <> buffer ind
R17658:17660 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R17657:17657 Dequeue.proof <> A:714 var
R17661:17661 Dequeue.proof <> A:714 var
R17664:17668 Dequeue.proof <> green abbrev
binder 17642:17645 <> buf2:717
R17675:17677 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R17692:17694 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R17733:17739 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R17846:17847 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R17709:17711 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R17695:17700 Dequeue.proof <> buffer ind
R17704:17708 Dequeue.proof <> green abbrev
R17712:17724 Dequeue.proof <> yellow_buffer ind
R17728:17730 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R17678:17678 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17684:17685 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17691:17691 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 17686:17690 <> buf2':718
binder 17679:17683 <> buf1':719
binder 17678:17691 <> pat:720
R17785:17791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17755:17758 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17740:17749 Dequeue.proof <> buffer_seq def
R17759:17766 Dequeue.proof <> flattenp def
R17769:17778 Dequeue.proof <> buffer_seq def
R17808:17811 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17792:17801 Dequeue.proof <> buffer_seq def
R17803:17807 Dequeue.proof <> buf1':719 var
R17812:17819 Dequeue.proof <> flattenp def
R17822:17838 Dequeue.proof <> yellow_buffer_seq def
R17840:17844 Dequeue.proof <> buf2':718 var
R17852:17870 Dequeue.proof <> green_prefix_concat:724 def
R17877:17880 Dequeue.proof <> buf2:723 var
R17872:17875 Dequeue.proof <> buf1:722 var
R17919:17920 Dequeue.proof <> :::'?'_x not
R17921:17922 Dequeue.proof <> Ok constr
R17924:17926 Dequeue.proof <> buf:725 var
R17919:17926 Coq.Init.Specif <> exist constr
R17921:17926 Dequeue.proof <> Ok constr
R17962:17963 Dequeue.proof <> :::'?'_x not
R17964:17972 Dequeue.proof <> Underflow constr
R17974:17976 Dequeue.proof <> opt:731 var
R17962:17976 Coq.Init.Specif <> exist constr
R17964:17976 Dequeue.proof <> Underflow constr
R18011:18012 Dequeue.proof <> :::'?'_x not
R18013:18013 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18016:18017 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18021:18021 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18014:18015 Dequeue.proof <> ab:733 var
R18018:18020 Dequeue.proof <> buf:734 var
R18011:18021 Coq.Init.Specif <> exist constr
R18013:18021 Coq.Init.Datatypes <> pair constr
R18105:18106 Dequeue.proof <> :::'?'_x not
R18107:18114 Dequeue.proof <> Overflow constr
R18120:18121 Dequeue.proof <> ab:741 var
R18116:18118 Dequeue.proof <> buf:742 var
R18105:18121 Coq.Init.Specif <> exist constr
R18107:18121 Dequeue.proof <> Overflow constr
R17887:17902 Dequeue.proof <> prefix_decompose def
R17984:17992 Dequeue.proof <> green_pop def
R18054:18061 Dequeue.proof <> prefix23 def
R18041:18042 Dequeue.proof <> :::'?'_x not
R18081:18082 Dequeue.proof <> :::'?'_x not
R18083:18083 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18090:18091 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18095:18095 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17932:17933 Dequeue.proof <> :::'?'_x not
R17934:17934 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17938:17939 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17954:17954 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17940:17948 Dequeue.proof <> Yellowish constr
R18150:18159 Dequeue.proof <> green_push def
R18137:18138 Dequeue.proof <> :::'?'_x not
R18176:18177 Dequeue.proof <> :::'?'_x not
R18178:18178 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18182:18183 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18200:18200 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18184:18192 Dequeue.proof <> Yellowish constr
def 18416:18434 <> green_suffix_concat
binder 18437:18437 <> A:746
binder 18439:18439 <> C:747
R18452:18457 Dequeue.proof <> buffer ind
R18461:18463 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R18460:18460 Dequeue.proof <> A:746 var
R18464:18464 Dequeue.proof <> A:746 var
R18467:18471 Dequeue.proof <> green abbrev
binder 18445:18448 <> buf1:748
R18484:18489 Dequeue.proof <> buffer ind
R18491:18491 Dequeue.proof <> A:746 var
R18493:18493 Dequeue.proof <> C:747 var
binder 18477:18480 <> buf2:749
R18500:18502 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R18517:18519 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R18558:18564 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R18671:18672 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R18541:18543 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R18520:18532 Dequeue.proof <> yellow_buffer ind
R18536:18538 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R18544:18549 Dequeue.proof <> buffer ind
R18553:18557 Dequeue.proof <> green abbrev
R18503:18503 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18509:18510 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18516:18516 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 18511:18515 <> buf2':750
binder 18504:18508 <> buf1':751
binder 18503:18516 <> pat:752
R18610:18616 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18591:18594 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18565:18572 Dequeue.proof <> flattenp def
R18575:18584 Dequeue.proof <> buffer_seq def
R18595:18604 Dequeue.proof <> buffer_seq def
R18651:18654 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18617:18624 Dequeue.proof <> flattenp def
R18627:18643 Dequeue.proof <> yellow_buffer_seq def
R18645:18649 Dequeue.proof <> buf1':751 var
R18655:18664 Dequeue.proof <> buffer_seq def
R18666:18670 Dequeue.proof <> buf2':750 var
R18677:18695 Dequeue.proof <> green_suffix_concat:756 def
R18702:18705 Dequeue.proof <> buf2:755 var
R18697:18700 Dequeue.proof <> buf1:754 var
R18743:18744 Dequeue.proof <> :::'?'_x not
R18745:18746 Dequeue.proof <> Ok constr
R18748:18750 Dequeue.proof <> buf:757 var
R18743:18750 Coq.Init.Specif <> exist constr
R18745:18750 Dequeue.proof <> Ok constr
R18784:18785 Dequeue.proof <> :::'?'_x not
R18786:18794 Dequeue.proof <> Underflow constr
R18796:18798 Dequeue.proof <> opt:763 var
R18784:18798 Coq.Init.Specif <> exist constr
R18786:18798 Dequeue.proof <> Underflow constr
R18833:18834 Dequeue.proof <> :::'?'_x not
R18835:18835 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18839:18840 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18843:18843 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18836:18838 Dequeue.proof <> buf:766 var
R18841:18842 Dequeue.proof <> ab:765 var
R18833:18843 Coq.Init.Specif <> exist constr
R18835:18843 Coq.Init.Datatypes <> pair constr
R18925:18926 Dequeue.proof <> :::'?'_x not
R18927:18934 Dequeue.proof <> Overflow constr
R18940:18941 Dequeue.proof <> ab:773 var
R18936:18938 Dequeue.proof <> buf:774 var
R18925:18941 Coq.Init.Specif <> exist constr
R18927:18941 Dequeue.proof <> Overflow constr
R18712:18727 Dequeue.proof <> suffix_decompose def
R18805:18815 Dequeue.proof <> green_eject def
R18875:18882 Dequeue.proof <> suffix23 def
R18862:18863 Dequeue.proof <> :::'?'_x not
R18902:18903 Dequeue.proof <> :::'?'_x not
R18904:18904 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18908:18909 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18916:18916 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18755:18756 Dequeue.proof <> :::'?'_x not
R18757:18757 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18772:18773 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18777:18777 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18758:18766 Dequeue.proof <> Yellowish constr
R18969:18980 Dequeue.proof <> green_inject def
R18956:18957 Dequeue.proof <> :::'?'_x not
R18997:18998 Dequeue.proof <> :::'?'_x not
R18999:18999 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19016:19017 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19021:19021 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19000:19008 Dequeue.proof <> Yellowish constr
def 19231:19250 <> yellow_prefix_concat
binder 19253:19253 <> A:778
binder 19255:19255 <> B:779
R19268:19273 Dequeue.proof <> buffer ind
R19275:19275 Dequeue.proof <> A:778 var
R19277:19277 Dequeue.proof <> B:779 var
binder 19261:19264 <> buf1:780
R19290:19302 Dequeue.proof <> yellow_buffer ind
R19306:19308 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R19305:19305 Dequeue.proof <> A:778 var
R19309:19309 Dequeue.proof <> A:778 var
binder 19283:19286 <> buf2:781
R19317:19319 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R19334:19336 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R19372:19378 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R19489:19490 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R19351:19353 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R19337:19342 Dequeue.proof <> buffer ind
R19346:19350 Dequeue.proof <> green abbrev
R19354:19363 Dequeue.proof <> any_buffer ind
R19367:19369 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R19320:19320 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19326:19327 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19333:19333 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 19328:19332 <> buf2':782
binder 19321:19325 <> buf1':783
binder 19320:19333 <> pat:784
R19431:19437 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19394:19397 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19379:19388 Dequeue.proof <> buffer_seq def
R19398:19405 Dequeue.proof <> flattenp def
R19408:19424 Dequeue.proof <> yellow_buffer_seq def
R19454:19457 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19438:19447 Dequeue.proof <> buffer_seq def
R19449:19453 Dequeue.proof <> buf1':783 var
R19458:19465 Dequeue.proof <> flattenp def
R19468:19481 Dequeue.proof <> any_buffer_seq def
R19483:19487 Dequeue.proof <> buf2':782 var
R19495:19514 Dequeue.proof <> yellow_prefix_concat:788 def
R19521:19524 Dequeue.proof <> buf2:787 var
R19516:19519 Dequeue.proof <> buf1:786 var
R19562:19564 Dequeue.proof <> :::'?'_x not
R19571:19571 Dequeue.proof <> :::'?'_x not
R19565:19566 Dequeue.proof <> Ok constr
R19568:19570 Dequeue.proof <> buf:789 var
R19562:19571 Coq.Init.Specif <> exist constr
R19565:19570 Dequeue.proof <> Ok constr
R19640:19642 Dequeue.proof <> :::'?'_x not
R19656:19656 Dequeue.proof <> :::'?'_x not
R19643:19651 Dequeue.proof <> Underflow constr
R19653:19655 Dequeue.proof <> opt:795 var
R19640:19656 Coq.Init.Specif <> exist constr
R19643:19655 Dequeue.proof <> Underflow constr
R19690:19691 Dequeue.proof <> :::'?'_x not
R19692:19692 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19695:19696 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19700:19700 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19693:19694 Dequeue.proof <> ab:797 var
R19697:19699 Dequeue.proof <> buf:798 var
R19690:19700 Coq.Init.Specif <> exist constr
R19692:19700 Coq.Init.Datatypes <> pair constr
R19778:19780 Dequeue.proof <> :::'?'_x not
R19796:19796 Dequeue.proof <> :::'?'_x not
R19781:19788 Dequeue.proof <> Overflow constr
R19794:19795 Dequeue.proof <> ab:805 var
R19790:19792 Dequeue.proof <> buf:806 var
R19778:19796 Coq.Init.Specif <> exist constr
R19781:19795 Dequeue.proof <> Overflow constr
R19531:19546 Dequeue.proof <> prefix_decompose def
R19663:19672 Dequeue.proof <> yellow_pop def
R19730:19737 Dequeue.proof <> prefix23 def
R19717:19718 Dequeue.proof <> :::'?'_x not
R19755:19756 Dequeue.proof <> :::'?'_x not
R19757:19757 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19764:19765 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19769:19769 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19586:19594 Dequeue.proof <> Yellowish constr
R19617:19618 Dequeue.proof <> :::'?'_x not
R19619:19619 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19623:19624 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19633:19633 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19625:19627 Dequeue.proof <> Any constr
R19824:19834 Dequeue.proof <> yellow_push def
R19811:19812 Dequeue.proof <> :::'?'_x not
R19851:19852 Dequeue.proof <> :::'?'_x not
R19853:19853 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19857:19858 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19865:19865 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 20075:20094 <> yellow_suffix_concat
binder 20097:20097 <> A:811
binder 20099:20099 <> B:812
R20112:20124 Dequeue.proof <> yellow_buffer ind
R20128:20130 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R20127:20127 Dequeue.proof <> A:811 var
R20131:20131 Dequeue.proof <> A:811 var
binder 20105:20108 <> buf1:813
R20145:20150 Dequeue.proof <> buffer ind
R20152:20152 Dequeue.proof <> A:811 var
R20154:20154 Dequeue.proof <> B:812 var
binder 20138:20141 <> buf2:814
R20161:20163 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R20178:20180 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R20216:20222 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R20333:20334 Coq.Init.Specif <> ::type_scope:'{'_''''_x_':'_x_'|'_x_'}' not
R20199:20201 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R20181:20190 Dequeue.proof <> any_buffer ind
R20194:20196 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R20202:20207 Dequeue.proof <> buffer ind
R20211:20215 Dequeue.proof <> green abbrev
R20164:20164 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20170:20171 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20177:20177 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 20172:20176 <> buf2':815
binder 20165:20169 <> buf1':816
binder 20164:20177 <> pat:817
R20275:20281 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20256:20259 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20223:20230 Dequeue.proof <> flattenp def
R20233:20249 Dequeue.proof <> yellow_buffer_seq def
R20260:20269 Dequeue.proof <> buffer_seq def
R20313:20316 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20282:20289 Dequeue.proof <> flattenp def
R20292:20305 Dequeue.proof <> any_buffer_seq def
R20307:20311 Dequeue.proof <> buf1':816 var
R20317:20326 Dequeue.proof <> buffer_seq def
R20328:20332 Dequeue.proof <> buf2':815 var
R20339:20358 Dequeue.proof <> yellow_suffix_concat:821 def
R20365:20368 Dequeue.proof <> buf2:820 var
R20360:20363 Dequeue.proof <> buf1:819 var
R20406:20408 Dequeue.proof <> :::'?'_x not
R20415:20415 Dequeue.proof <> :::'?'_x not
R20409:20410 Dequeue.proof <> Ok constr
R20412:20414 Dequeue.proof <> buf:822 var
R20406:20415 Coq.Init.Specif <> exist constr
R20409:20414 Dequeue.proof <> Ok constr
R20484:20486 Dequeue.proof <> :::'?'_x not
R20500:20500 Dequeue.proof <> :::'?'_x not
R20487:20495 Dequeue.proof <> Underflow constr
R20497:20499 Dequeue.proof <> opt:828 var
R20484:20500 Coq.Init.Specif <> exist constr
R20487:20499 Dequeue.proof <> Underflow constr
R20536:20537 Dequeue.proof <> :::'?'_x not
R20538:20538 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20542:20543 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20546:20546 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20539:20541 Dequeue.proof <> buf:831 var
R20544:20545 Dequeue.proof <> ab:830 var
R20536:20546 Coq.Init.Specif <> exist constr
R20538:20546 Coq.Init.Datatypes <> pair constr
R20624:20626 Dequeue.proof <> :::'?'_x not
R20642:20642 Dequeue.proof <> :::'?'_x not
R20627:20634 Dequeue.proof <> Overflow constr
R20640:20641 Dequeue.proof <> ab:838 var
R20636:20638 Dequeue.proof <> buf:839 var
R20624:20642 Coq.Init.Specif <> exist constr
R20627:20641 Dequeue.proof <> Overflow constr
R20375:20390 Dequeue.proof <> suffix_decompose def
R20507:20518 Dequeue.proof <> yellow_eject def
R20576:20583 Dequeue.proof <> suffix23 def
R20563:20564 Dequeue.proof <> :::'?'_x not
R20601:20602 Dequeue.proof <> :::'?'_x not
R20603:20603 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20607:20608 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20615:20615 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20430:20438 Dequeue.proof <> Yellowish constr
R20461:20462 Dequeue.proof <> :::'?'_x not
R20463:20463 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20472:20473 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20477:20477 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20464:20466 Dequeue.proof <> Any constr
R20670:20682 Dequeue.proof <> yellow_inject def
R20657:20658 Dequeue.proof <> :::'?'_x not
R20699:20700 Dequeue.proof <> :::'?'_x not
R20701:20701 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20708:20709 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20713:20713 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 20807:20820 <> cdeque_of_opt3
binder 20823:20823 <> A:844
R20832:20837 Coq.Init.Datatypes <> option ind
R20839:20839 Dequeue.proof <> A:844 var
binder 20827:20828 <> o1:845
R20848:20853 Coq.Init.Datatypes <> option ind
R20857:20859 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R20856:20856 Dequeue.proof <> A:844 var
R20860:20860 Dequeue.proof <> A:844 var
binder 20843:20844 <> o2:846
R20870:20875 Coq.Init.Datatypes <> option ind
R20877:20877 Dequeue.proof <> A:844 var
binder 20865:20866 <> o3:847
R20884:20885 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R20888:20890 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R20905:20911 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R20986:20987 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R20891:20896 Dequeue.proof <> cdeque ind
R20900:20904 Dequeue.proof <> green abbrev
binder 20886:20887 <> cd:848
R20925:20927 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20912:20921 Dequeue.proof <> cdeque_seq def
R20923:20924 Dequeue.proof <> cd:848 var
R20941:20944 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20928:20937 Dequeue.proof <> option_seq def
R20969:20972 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20945:20952 Dequeue.proof <> flattenp def
R20955:20964 Dequeue.proof <> option_seq def
R20973:20982 Dequeue.proof <> option_seq def
R20992:21005 Dequeue.proof <> cdeque_of_opt3:850 def
R21017:21020 Coq.Init.Datatypes <> None constr
R21012:21015 Coq.Init.Datatypes <> None constr
R21007:21010 Coq.Init.Datatypes <> None constr
R21007:21010 Coq.Init.Datatypes <> None constr
R21012:21015 Coq.Init.Datatypes <> None constr
R21017:21020 Coq.Init.Datatypes <> None constr
R21037:21050 Dequeue.proof <> cdeque_of_opt3:852 def
R21066:21069 Coq.Init.Datatypes <> None constr
R21061:21064 Coq.Init.Datatypes <> None constr
R21053:21056 Coq.Init.Datatypes <> Some constr
R21058:21058 Dequeue.proof <> a:851 var
R21053:21058 Coq.Init.Datatypes <> Some constr
R21061:21064 Coq.Init.Datatypes <> None constr
R21066:21069 Coq.Init.Datatypes <> None constr
R21090:21103 Dequeue.proof <> cdeque_of_opt3:854 def
R21116:21119 Coq.Init.Datatypes <> Some constr
R21121:21121 Dequeue.proof <> a:853 var
R21110:21113 Coq.Init.Datatypes <> None constr
R21105:21108 Coq.Init.Datatypes <> None constr
R21105:21108 Coq.Init.Datatypes <> None constr
R21110:21113 Coq.Init.Datatypes <> None constr
R21116:21121 Coq.Init.Datatypes <> Some constr
R21143:21156 Dequeue.proof <> cdeque_of_opt3:857 def
R21173:21176 Coq.Init.Datatypes <> Some constr
R21178:21178 Dequeue.proof <> b:856 var
R21167:21170 Coq.Init.Datatypes <> None constr
R21159:21162 Coq.Init.Datatypes <> Some constr
R21164:21164 Dequeue.proof <> a:855 var
R21159:21164 Coq.Init.Datatypes <> Some constr
R21167:21170 Coq.Init.Datatypes <> None constr
R21173:21178 Coq.Init.Datatypes <> Some constr
R21202:21215 Dequeue.proof <> cdeque_of_opt3:860 def
R21236:21239 Coq.Init.Datatypes <> None constr
R21223:21226 Coq.Init.Datatypes <> Some constr
R21228:21228 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21230:21231 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21233:21233 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21229:21229 Dequeue.proof <> a:858 var
R21232:21232 Dequeue.proof <> b:859 var
R21217:21220 Coq.Init.Datatypes <> None constr
R21217:21220 Coq.Init.Datatypes <> None constr
R21223:21233 Coq.Init.Datatypes <> Some constr
R21228:21233 Coq.Init.Datatypes <> pair constr
R21236:21239 Coq.Init.Datatypes <> None constr
R21262:21275 Dequeue.proof <> cdeque_of_opt3:864 def
R21300:21303 Coq.Init.Datatypes <> None constr
R21287:21290 Coq.Init.Datatypes <> Some constr
R21292:21292 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21294:21295 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21297:21297 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21293:21293 Dequeue.proof <> b:862 var
R21296:21296 Dequeue.proof <> c:863 var
R21278:21281 Coq.Init.Datatypes <> Some constr
R21283:21283 Dequeue.proof <> a:861 var
R21278:21283 Coq.Init.Datatypes <> Some constr
R21287:21297 Coq.Init.Datatypes <> Some constr
R21292:21297 Coq.Init.Datatypes <> pair constr
R21300:21303 Coq.Init.Datatypes <> None constr
R21328:21341 Dequeue.proof <> cdeque_of_opt3:868 def
R21363:21366 Coq.Init.Datatypes <> Some constr
R21368:21368 Dequeue.proof <> c:867 var
R21349:21352 Coq.Init.Datatypes <> Some constr
R21354:21354 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21356:21357 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21359:21359 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21355:21355 Dequeue.proof <> a:865 var
R21358:21358 Dequeue.proof <> b:866 var
R21343:21346 Coq.Init.Datatypes <> None constr
R21343:21346 Coq.Init.Datatypes <> None constr
R21349:21359 Coq.Init.Datatypes <> Some constr
R21354:21359 Coq.Init.Datatypes <> pair constr
R21363:21368 Coq.Init.Datatypes <> Some constr
R21394:21407 Dequeue.proof <> cdeque_of_opt3:873 def
R21433:21436 Coq.Init.Datatypes <> Some constr
R21438:21438 Dequeue.proof <> d:872 var
R21419:21422 Coq.Init.Datatypes <> Some constr
R21424:21424 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21426:21427 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21429:21429 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21425:21425 Dequeue.proof <> b:870 var
R21428:21428 Dequeue.proof <> c:871 var
R21410:21413 Coq.Init.Datatypes <> Some constr
R21415:21415 Dequeue.proof <> a:869 var
R21410:21415 Coq.Init.Datatypes <> Some constr
R21419:21429 Coq.Init.Datatypes <> Some constr
R21424:21429 Coq.Init.Datatypes <> pair constr
R21433:21438 Coq.Init.Datatypes <> Some constr
R21444:21445 Dequeue.proof <> :::'?'_x not
R21446:21450 Dequeue.proof <> Small constr
R21453:21454 Dequeue.proof <> B4 constr
R21308:21309 Dequeue.proof <> :::'?'_x not
R21310:21314 Dequeue.proof <> Small constr
R21317:21318 Dequeue.proof <> B3 constr
R21184:21185 Dequeue.proof <> :::'?'_x not
R21186:21190 Dequeue.proof <> Small constr
R21193:21194 Dequeue.proof <> B2 constr
R21074:21075 Dequeue.proof <> :::'?'_x not
R21076:21080 Dequeue.proof <> Small constr
R21083:21084 Dequeue.proof <> B1 constr
R21374:21375 Dequeue.proof <> :::'?'_x not
R21376:21380 Dequeue.proof <> Small constr
R21383:21384 Dequeue.proof <> B3 constr
R21244:21245 Dequeue.proof <> :::'?'_x not
R21246:21250 Dequeue.proof <> Small constr
R21253:21254 Dequeue.proof <> B2 constr
R21127:21128 Dequeue.proof <> :::'?'_x not
R21129:21133 Dequeue.proof <> Small constr
R21136:21137 Dequeue.proof <> B1 constr
R21025:21026 Dequeue.proof <> :::'?'_x not
R21027:21031 Dequeue.proof <> Small constr
R21033:21034 Dequeue.proof <> B0 constr
R21820:21822 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R21820:21822 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R21903:21905 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21891:21894 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R21895:21895 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21902:21902 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21896:21896 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21898:21899 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21901:21901 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21903:21905 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21891:21894 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R21895:21895 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21902:21902 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21896:21896 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21898:21899 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21901:21901 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22066:22068 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22061:22064 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R22053:22053 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R22060:22060 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R22054:22054 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22056:22057 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22059:22059 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22066:22068 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22061:22064 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R22053:22053 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R22060:22060 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R22054:22054 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22056:22057 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22059:22059 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22090:22096 Coq.Init.Logic <> f_equal thm
R22098:22105 Dequeue.proof <> flattenp def
R22127:22138 Dequeue.proof <> flattenp_app thm
R21927:21933 Coq.Init.Logic <> f_equal thm
R21935:21942 Dequeue.proof <> flattenp def
R21964:21975 Dequeue.proof <> flattenp_app thm
def 22441:22450 <> make_small
binder 22453:22453 <> A:874
binder 22455:22456 <> C1:875
binder 22458:22459 <> C2:876
binder 22461:22462 <> C3:877
R22473:22478 Dequeue.proof <> buffer ind
R22480:22480 Dequeue.proof <> A:874 var
R22482:22483 Dequeue.proof <> C1:875 var
binder 22468:22469 <> b1:878
R22494:22499 Dequeue.proof <> buffer ind
R22503:22505 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R22502:22502 Dequeue.proof <> A:874 var
R22506:22506 Dequeue.proof <> A:874 var
R22509:22510 Dequeue.proof <> C2:876 var
binder 22489:22490 <> b2:879
R22521:22526 Dequeue.proof <> buffer ind
R22528:22528 Dequeue.proof <> A:874 var
R22530:22531 Dequeue.proof <> C3:877 var
binder 22516:22517 <> b3:880
R22538:22539 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R22542:22544 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R22559:22565 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R22640:22641 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R22545:22550 Dequeue.proof <> cdeque ind
R22554:22558 Dequeue.proof <> green abbrev
binder 22540:22541 <> cd:881
R22579:22581 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22566:22575 Dequeue.proof <> cdeque_seq def
R22577:22578 Dequeue.proof <> cd:881 var
R22595:22598 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R22582:22591 Dequeue.proof <> buffer_seq def
R22623:22626 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R22599:22606 Dequeue.proof <> flattenp def
R22609:22618 Dequeue.proof <> buffer_seq def
R22627:22636 Dequeue.proof <> buffer_seq def
R22646:22655 Dequeue.proof <> make_small:886 def
R22669:22675 Dequeue.proof <> suffix1:885 var
R22665:22667 Dequeue.proof <> buf:883 var
R22657:22663 Dequeue.proof <> prefix1:884 var
R22747:22748 Dequeue.proof <> :::'?'_x not
R22749:22750 Dequeue.proof <> Ok constr
R22752:22753 Dequeue.proof <> p1:888 var
R22747:22753 Coq.Init.Specif <> exist constr
R22749:22753 Dequeue.proof <> Ok constr
R22758:22759 Dequeue.proof <> :::'?'_x not
R22760:22761 Dequeue.proof <> Ok constr
R22763:22764 Dequeue.proof <> s1:898 var
R22758:22764 Coq.Init.Specif <> exist constr
R22760:22764 Dequeue.proof <> Ok constr
R22815:22816 Dequeue.proof <> :::'?'_x not
R22817:22818 Dequeue.proof <> Ok constr
R22820:22821 Dequeue.proof <> p1:904 var
R22815:22821 Coq.Init.Specif <> exist constr
R22817:22821 Dequeue.proof <> Ok constr
R22826:22827 Dequeue.proof <> :::'?'_x not
R22828:22836 Dequeue.proof <> Underflow constr
R22838:22840 Dequeue.proof <> opt:910 var
R22826:22840 Coq.Init.Specif <> exist constr
R22828:22840 Dequeue.proof <> Underflow constr
R22876:22877 Dequeue.proof <> :::'?'_x not
R22878:22881 Coq.Init.Datatypes <> None constr
R22876:22881 Coq.Init.Specif <> exist constr
R22878:22881 Coq.Init.Datatypes <> None constr
R22905:22908 Coq.Init.Datatypes <> None constr
R22905:22908 Coq.Init.Datatypes <> None constr
R22933:22936 Coq.Init.Datatypes <> Some constr
R22938:22938 Dequeue.proof <> x:949 var
R22933:22938 Coq.Init.Datatypes <> Some constr
R22971:22972 Dequeue.proof <> :::'?'_x not
R22973:22974 Dequeue.proof <> cd:953 var
R22971:22974 Coq.Init.Specif <> exist constr
R22995:22996 Dequeue.proof <> :::'?'_x not
R22997:23000 Coq.Init.Datatypes <> Some constr
R23002:23002 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23011:23012 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23015:23015 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23003:23005 Dequeue.proof <> Any constr
R23007:23010 Dequeue.proof <> rest:971 var
R23013:23014 Dequeue.proof <> cd:966 var
R22995:23015 Coq.Init.Specif <> exist constr
R22997:23015 Coq.Init.Datatypes <> Some constr
R23002:23015 Coq.Init.Datatypes <> pair constr
R23003:23010 Dequeue.proof <> Any constr
R23051:23052 Dequeue.proof <> :::'?'_x not
R23053:23058 Dequeue.proof <> suffix:984 var
R23051:23058 Coq.Init.Specif <> exist constr
R23115:23116 Dequeue.proof <> :::'?'_x not
R23117:23125 Dequeue.proof <> Underflow constr
R23127:23129 Dequeue.proof <> opt:993 var
R23115:23129 Coq.Init.Specif <> exist constr
R23117:23129 Dequeue.proof <> Underflow constr
R23134:23135 Dequeue.proof <> :::'?'_x not
R23136:23137 Dequeue.proof <> Ok constr
R23139:23140 Dequeue.proof <> s1:1003 var
R23134:23140 Coq.Init.Specif <> exist constr
R23136:23140 Dequeue.proof <> Ok constr
R23174:23175 Dequeue.proof <> :::'?'_x not
R23176:23179 Coq.Init.Datatypes <> None constr
R23174:23179 Coq.Init.Specif <> exist constr
R23176:23179 Coq.Init.Datatypes <> None constr
R23203:23206 Coq.Init.Datatypes <> None constr
R23203:23206 Coq.Init.Datatypes <> None constr
R23231:23234 Coq.Init.Datatypes <> Some constr
R23236:23236 Dequeue.proof <> x:1039 var
R23231:23236 Coq.Init.Datatypes <> Some constr
R23267:23268 Dequeue.proof <> :::'?'_x not
R23269:23270 Dequeue.proof <> cd:1043 var
R23267:23270 Coq.Init.Specif <> exist constr
R23291:23292 Dequeue.proof <> :::'?'_x not
R23293:23296 Coq.Init.Datatypes <> Some constr
R23298:23298 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23301:23302 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23311:23311 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23299:23300 Dequeue.proof <> cd:1056 var
R23303:23305 Dequeue.proof <> Any constr
R23307:23310 Dequeue.proof <> rest:1060 var
R23291:23311 Coq.Init.Specif <> exist constr
R23293:23311 Coq.Init.Datatypes <> Some constr
R23298:23311 Coq.Init.Datatypes <> pair constr
R23303:23310 Dequeue.proof <> Any constr
R23347:23348 Dequeue.proof <> :::'?'_x not
R23349:23354 Dequeue.proof <> prefix:1070 var
R23347:23354 Coq.Init.Specif <> exist constr
R23411:23412 Dequeue.proof <> :::'?'_x not
R23413:23421 Dequeue.proof <> Underflow constr
R23423:23424 Dequeue.proof <> p1:1083 var
R23411:23424 Coq.Init.Specif <> exist constr
R23413:23424 Dequeue.proof <> Underflow constr
R23429:23430 Dequeue.proof <> :::'?'_x not
R23431:23439 Dequeue.proof <> Underflow constr
R23441:23442 Dequeue.proof <> s1:1093 var
R23429:23442 Coq.Init.Specif <> exist constr
R23431:23442 Dequeue.proof <> Underflow constr
R23483:23484 Dequeue.proof <> :::'?'_x not
R23485:23492 Dequeue.proof <> Sandwich constr
R23502:23503 Dequeue.proof <> cd:1100 var
R23497:23500 Dequeue.proof <> rest:1104 var
R23494:23495 Dequeue.proof <> ab:1097 var
R23483:23503 Coq.Init.Specif <> exist constr
R23485:23503 Dequeue.proof <> Sandwich constr
R23554:23555 Dequeue.proof <> :::'?'_x not
R23556:23561 Dequeue.proof <> prefix:1115 var
R23554:23561 Coq.Init.Specif <> exist constr
R23564:23565 Dequeue.proof <> :::'?'_x not
R23566:23571 Dequeue.proof <> suffix:1140 var
R23564:23571 Coq.Init.Specif <> exist constr
R23629:23630 Dequeue.proof <> :::'?'_x not
R23631:23635 Dequeue.proof <> Alone constr
R23637:23639 Dequeue.proof <> opt:1151 var
R23629:23639 Coq.Init.Specif <> exist constr
R23631:23639 Dequeue.proof <> Alone constr
R23678:23679 Dequeue.proof <> :::'?'_x not
R23680:23681 Dequeue.proof <> cd:1162 var
R23678:23681 Coq.Init.Specif <> exist constr
R23700:23701 Dequeue.proof <> :::'?'_x not
R23702:23709 Dequeue.proof <> Overflow constr
R23714:23715 Dequeue.proof <> ab:1174 var
R23711:23712 Dequeue.proof <> p1:1176 var
R23700:23715 Coq.Init.Specif <> exist constr
R23702:23715 Dequeue.proof <> Overflow constr
R23720:23721 Dequeue.proof <> :::'?'_x not
R23722:23723 Dequeue.proof <> Ok constr
R23725:23726 Dequeue.proof <> s1:1187 var
R23720:23726 Coq.Init.Specif <> exist constr
R23722:23726 Dequeue.proof <> Ok constr
R23764:23765 Dequeue.proof <> :::'?'_x not
R23766:23769 Dequeue.proof <> rest:1197 var
R23764:23769 Coq.Init.Specif <> exist constr
R23810:23811 Dequeue.proof <> :::'?'_x not
R23812:23813 Dequeue.proof <> Ok constr
R23815:23816 Dequeue.proof <> p1:1205 var
R23810:23816 Coq.Init.Specif <> exist constr
R23812:23816 Dequeue.proof <> Ok constr
R23821:23822 Dequeue.proof <> :::'?'_x not
R23823:23830 Dequeue.proof <> Overflow constr
R23835:23836 Dequeue.proof <> ab:1211 var
R23832:23833 Dequeue.proof <> s1:1216 var
R23821:23836 Coq.Init.Specif <> exist constr
R23823:23836 Dequeue.proof <> Overflow constr
R23876:23877 Dequeue.proof <> :::'?'_x not
R23878:23881 Dequeue.proof <> rest:1226 var
R23876:23881 Coq.Init.Specif <> exist constr
R23922:23923 Dequeue.proof <> :::'?'_x not
R23924:23932 Dequeue.proof <> Underflow constr
R23934:23936 Dequeue.proof <> opt:1234 var
R23922:23936 Coq.Init.Specif <> exist constr
R23924:23936 Dequeue.proof <> Underflow constr
R23941:23942 Dequeue.proof <> :::'?'_x not
R23943:23950 Dequeue.proof <> Overflow constr
R23955:23956 Dequeue.proof <> ab:1240 var
R23952:23953 Dequeue.proof <> s1:1245 var
R23941:23956 Coq.Init.Specif <> exist constr
R23943:23956 Dequeue.proof <> Overflow constr
R23993:23994 Dequeue.proof <> :::'?'_x not
R23995:23995 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23998:23999 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24006:24006 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23996:23997 Dequeue.proof <> cd:1251 var
R24000:24005 Dequeue.proof <> center:1252 var
R23993:24006 Coq.Init.Specif <> exist constr
R23995:24006 Coq.Init.Datatypes <> pair constr
R24042:24043 Dequeue.proof <> :::'?'_x not
R24044:24049 Dequeue.proof <> prefix:1267 var
R24042:24049 Coq.Init.Specif <> exist constr
R24106:24107 Dequeue.proof <> :::'?'_x not
R24108:24115 Dequeue.proof <> Overflow constr
R24120:24121 Dequeue.proof <> ab:1278 var
R24117:24118 Dequeue.proof <> p1:1281 var
R24106:24121 Coq.Init.Specif <> exist constr
R24108:24121 Dequeue.proof <> Overflow constr
R24126:24127 Dequeue.proof <> :::'?'_x not
R24128:24136 Dequeue.proof <> Underflow constr
R24138:24140 Dequeue.proof <> opt:1288 var
R24126:24140 Coq.Init.Specif <> exist constr
R24128:24140 Dequeue.proof <> Underflow constr
R24177:24178 Dequeue.proof <> :::'?'_x not
R24179:24179 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24186:24187 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24190:24190 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24180:24185 Dequeue.proof <> center:1298 var
R24188:24189 Dequeue.proof <> cd:1297 var
R24177:24190 Coq.Init.Specif <> exist constr
R24179:24190 Coq.Init.Datatypes <> pair constr
R24226:24227 Dequeue.proof <> :::'?'_x not
R24228:24233 Dequeue.proof <> suffix:1317 var
R24226:24233 Coq.Init.Specif <> exist constr
R24290:24291 Dequeue.proof <> :::'?'_x not
R24292:24299 Dequeue.proof <> Overflow constr
R24304:24305 Dequeue.proof <> ab:1324 var
R24301:24302 Dequeue.proof <> p1:1327 var
R24290:24305 Coq.Init.Specif <> exist constr
R24292:24305 Dequeue.proof <> Overflow constr
R24310:24311 Dequeue.proof <> :::'?'_x not
R24312:24319 Dequeue.proof <> Overflow constr
R24324:24325 Dequeue.proof <> cd:1335 var
R24321:24322 Dequeue.proof <> s1:1339 var
R24310:24325 Coq.Init.Specif <> exist constr
R24312:24325 Dequeue.proof <> Overflow constr
R24361:24362 Dequeue.proof <> :::'?'_x not
R24363:24363 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24365:24366 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24375:24375 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24364:24364 Dequeue.proof <> x:1356 var
R24367:24369 Dequeue.proof <> Any constr
R24371:24374 Dequeue.proof <> rest:1350 var
R24361:24375 Coq.Init.Specif <> exist constr
R24363:24375 Coq.Init.Datatypes <> pair constr
R24367:24374 Dequeue.proof <> Any constr
R24409:24410 Dequeue.proof <> :::'?'_x not
R24411:24416 Dequeue.proof <> prefix:1362 var
R24409:24416 Coq.Init.Specif <> exist constr
R22683:22698 Dequeue.proof <> prefix_decompose def
R22711:22726 Dequeue.proof <> suffix_decompose def
R23450:23466 Dequeue.proof <> buffer_unsandwich def
R23646:23659 Dequeue.proof <> cdeque_of_opt3 def
R23686:23687 Dequeue.proof <> :::'?'_x not
R23510:23517 Dequeue.proof <> prefix23 def
R23526:23533 Dequeue.proof <> suffix23 def
R23576:23577 Dequeue.proof <> :::'?'_x not
R23578:23578 Dequeue.proof <> G constr
R23608:23612 Dequeue.proof <> Small constr
R23581:23585 Dequeue.proof <> Green constr
R23594:23597 Dequeue.proof <> HOLE constr
R23148:23157 Dequeue.proof <> buffer_pop def
R23318:23325 Dequeue.proof <> prefix23 def
R23359:23360 Dequeue.proof <> :::'?'_x not
R23361:23361 Dequeue.proof <> G constr
R23387:23391 Dequeue.proof <> Small constr
R23364:23368 Dequeue.proof <> Green constr
R23377:23380 Dequeue.proof <> HOLE constr
R23243:23253 Dequeue.proof <> buffer_push def
R23275:23276 Dequeue.proof <> :::'?'_x not
R23211:23212 Dequeue.proof <> :::'?'_x not
R23213:23217 Dequeue.proof <> Small constr
R23964:23973 Dequeue.proof <> suffix_rot def
R24013:24020 Dequeue.proof <> prefix23 def
R24054:24055 Dequeue.proof <> :::'?'_x not
R24056:24056 Dequeue.proof <> G constr
R24082:24086 Dequeue.proof <> Small constr
R24059:24063 Dequeue.proof <> Green constr
R24072:24075 Dequeue.proof <> HOLE constr
R22848:22859 Dequeue.proof <> buffer_eject def
R23022:23029 Dequeue.proof <> suffix23 def
R23063:23064 Dequeue.proof <> :::'?'_x not
R23065:23065 Dequeue.proof <> G constr
R23091:23095 Dequeue.proof <> Small constr
R23068:23072 Dequeue.proof <> Green constr
R23077:23080 Dequeue.proof <> HOLE constr
R22945:22957 Dequeue.proof <> buffer_inject def
R22979:22980 Dequeue.proof <> :::'?'_x not
R22913:22914 Dequeue.proof <> :::'?'_x not
R22915:22919 Dequeue.proof <> Small constr
R22774:22775 Dequeue.proof <> :::'?'_x not
R22776:22776 Dequeue.proof <> G constr
R22798:22802 Dequeue.proof <> Small constr
R22779:22783 Dequeue.proof <> Green constr
R22788:22791 Dequeue.proof <> HOLE constr
R23844:23856 Dequeue.proof <> buffer_inject def
R23886:23887 Dequeue.proof <> :::'?'_x not
R23888:23888 Dequeue.proof <> G constr
R23891:23895 Dequeue.proof <> Green constr
R23900:23903 Dequeue.proof <> HOLE constr
R24148:24157 Dequeue.proof <> prefix_rot def
R24197:24204 Dequeue.proof <> suffix23 def
R24238:24239 Dequeue.proof <> :::'?'_x not
R24240:24240 Dequeue.proof <> G constr
R24266:24270 Dequeue.proof <> Small constr
R24243:24247 Dequeue.proof <> Green constr
R24252:24255 Dequeue.proof <> HOLE constr
R23734:23744 Dequeue.proof <> buffer_push def
R23774:23775 Dequeue.proof <> :::'?'_x not
R23776:23776 Dequeue.proof <> G constr
R23779:23783 Dequeue.proof <> Green constr
R23788:23791 Dequeue.proof <> HOLE constr
R24333:24344 Dequeue.proof <> buffer_halve def
R24382:24389 Dequeue.proof <> suffix12 def
R24421:24422 Dequeue.proof <> :::'?'_x not
R24423:24423 Dequeue.proof <> G constr
R24469:24473 Dequeue.proof <> Small constr
R24426:24430 Dequeue.proof <> Green constr
R24436:24441 Dequeue.proof <> Yellow constr
R24456:24457 Dequeue.proof <> B1 constr
R24450:24453 Dequeue.proof <> HOLE constr
def 24824:24835 <> green_of_red
binder 24838:24838 <> A:1375
R24854:24859 Dequeue.proof <> cdeque ind
R24861:24861 Dequeue.proof <> A:1375 var
R24863:24865 Dequeue.proof <> red abbrev
binder 24849:24850 <> cd:1376
R24872:24873 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R24877:24879 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R24894:24896 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R24927:24928 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R24880:24885 Dequeue.proof <> cdeque ind
R24889:24893 Dequeue.proof <> green abbrev
binder 24874:24876 <> cd':1377
R24911:24913 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24897:24906 Dequeue.proof <> cdeque_seq def
R24908:24910 Dequeue.proof <> cd':1377 var
R24914:24923 Dequeue.proof <> cdeque_seq def
R24933:24944 Dequeue.proof <> green_of_red:1382 def
R24947:24947 Dequeue.proof <> R constr
R24967:24971 Dequeue.proof <> Small constr
R24973:24975 Dequeue.proof <> buf:1379 var
R24950:24952 Dequeue.proof <> Red constr
R24962:24963 Dequeue.proof <> s1:1381 var
R24957:24960 Dequeue.proof <> HOLE constr
R24954:24955 Dequeue.proof <> p1:1380 var
R24947:24976 Dequeue.proof <> R constr
R24950:24963 Dequeue.proof <> Red constr
R24957:24960 Dequeue.proof <> HOLE constr
R24967:24975 Dequeue.proof <> Small constr
R25014:25015 Dequeue.proof <> :::'?'_x not
R25016:25018 Dequeue.proof <> cd':1384 var
R25014:25018 Coq.Init.Specif <> exist constr
R25032:25043 Dequeue.proof <> green_of_red:1404 def
R25046:25046 Dequeue.proof <> R constr
R25081:25082 Dequeue.proof <> cd:1398 var
R25049:25051 Dequeue.proof <> Red constr
R25077:25078 Dequeue.proof <> s1:1402 var
R25057:25062 Dequeue.proof <> Yellow constr
R25073:25074 Dequeue.proof <> s2:1403 var
R25067:25071 Dequeue.proof <> child:1399 var
R25064:25065 Dequeue.proof <> p2:1401 var
R25053:25054 Dequeue.proof <> p1:1400 var
R25046:25082 Dequeue.proof <> R constr
R25049:25078 Dequeue.proof <> Red constr
R25057:25074 Dequeue.proof <> Yellow constr
R25180:25181 Dequeue.proof <> :::'?'_x not
R25182:25182 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25186:25187 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25195:25195 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25183:25185 Dequeue.proof <> p1':1408 var
R25188:25190 Dequeue.proof <> Any constr
R25192:25194 Dequeue.proof <> p2':1410 var
R25180:25195 Coq.Init.Specif <> exist constr
R25182:25195 Coq.Init.Datatypes <> pair constr
R25188:25194 Dequeue.proof <> Any constr
R25198:25199 Dequeue.proof <> :::'?'_x not
R25200:25200 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25208:25209 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25213:25213 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25201:25203 Dequeue.proof <> Any constr
R25205:25207 Dequeue.proof <> s2':1440 var
R25210:25212 Dequeue.proof <> s1':1438 var
R25198:25213 Coq.Init.Specif <> exist constr
R25200:25213 Coq.Init.Datatypes <> pair constr
R25201:25207 Dequeue.proof <> Any constr
R25277:25288 Dequeue.proof <> green_of_red:1465 def
R25291:25291 Dequeue.proof <> R constr
R25311:25311 Dequeue.proof <> G constr
R25333:25334 Dequeue.proof <> cd:1459 var
R25314:25318 Dequeue.proof <> Green constr
R25329:25330 Dequeue.proof <> s2:1464 var
R25323:25327 Dequeue.proof <> child:1460 var
R25320:25321 Dequeue.proof <> p2:1462 var
R25294:25296 Dequeue.proof <> Red constr
R25306:25307 Dequeue.proof <> s1:1463 var
R25301:25304 Dequeue.proof <> HOLE constr
R25298:25299 Dequeue.proof <> p1:1461 var
R25291:25335 Dequeue.proof <> R constr
R25294:25307 Dequeue.proof <> Red constr
R25301:25304 Dequeue.proof <> HOLE constr
R25311:25334 Dequeue.proof <> G constr
R25314:25330 Dequeue.proof <> Green constr
R25407:25408 Dequeue.proof <> :::'?'_x not
R25409:25409 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25413:25414 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25428:25428 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25410:25412 Dequeue.proof <> p1':1471 var
R25415:25423 Dequeue.proof <> Yellowish constr
R25425:25427 Dequeue.proof <> p2':1473 var
R25407:25428 Coq.Init.Specif <> exist constr
R25409:25428 Coq.Init.Datatypes <> pair constr
R25415:25427 Dequeue.proof <> Yellowish constr
R25431:25432 Dequeue.proof <> :::'?'_x not
R25433:25433 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25447:25448 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25452:25452 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25434:25442 Dequeue.proof <> Yellowish constr
R25444:25446 Dequeue.proof <> s2':1504 var
R25449:25451 Dequeue.proof <> s1':1502 var
R25431:25452 Coq.Init.Specif <> exist constr
R25433:25452 Coq.Init.Datatypes <> pair constr
R25434:25446 Dequeue.proof <> Yellowish constr
R24984:24993 Dequeue.proof <> make_small def
R25023:25024 Dequeue.proof <> :::'?'_x not
R25345:25363 Dequeue.proof <> green_prefix_concat def
R25372:25390 Dequeue.proof <> green_suffix_concat def
R25461:25462 Dequeue.proof <> :::'?'_x not
R25463:25463 Dequeue.proof <> G constr
R25466:25470 Dequeue.proof <> Green constr
R25477:25482 Dequeue.proof <> Yellow constr
R25092:25111 Dequeue.proof <> yellow_prefix_concat def
R25117:25125 Dequeue.proof <> Yellowish constr
R25132:25151 Dequeue.proof <> yellow_suffix_concat def
R25154:25162 Dequeue.proof <> Yellowish constr
R25222:25223 Dequeue.proof <> :::'?'_x not
R25224:25224 Dequeue.proof <> G constr
R25248:25248 Dequeue.proof <> R constr
R25251:25253 Dequeue.proof <> Red constr
R25227:25231 Dequeue.proof <> Green constr
R25237:25240 Dequeue.proof <> HOLE constr
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25589:25597 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
R25703:25711 Coq.Lists.List <> app_assoc thm
def 25839:25850 <> ensure_green
binder 25853:25853 <> A:1523
binder 25855:25855 <> C:1524
R25863:25872 Dequeue.proof <> not_yellow ind
R25874:25874 Dequeue.proof <> C:1524 var
binder 25859:25860 <> ny:1525
R25883:25888 Dequeue.proof <> cdeque ind
R25890:25890 Dequeue.proof <> A:1523 var
R25892:25892 Dequeue.proof <> C:1524 var
binder 25878:25879 <> cd:1526
R25899:25900 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R25904:25906 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R25921:25923 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R25954:25955 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R25907:25912 Dequeue.proof <> cdeque ind
R25916:25920 Dequeue.proof <> green abbrev
binder 25901:25903 <> cd':1527
R25938:25940 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25924:25933 Dequeue.proof <> cdeque_seq def
R25935:25937 Dequeue.proof <> cd':1527 var
R25941:25950 Dequeue.proof <> cdeque_seq def
R25960:25971 Dequeue.proof <> ensure_green:1530 def
R25985:25989 Dequeue.proof <> Small constr
R25991:25993 Dequeue.proof <> buf:1529 var
R25973:25982 Dequeue.proof <> Not_yellow constr
R25973:25982 Dequeue.proof <> Not_yellow constr
R25985:25993 Dequeue.proof <> Small constr
R26012:26023 Dequeue.proof <> ensure_green:1533 def
R26037:26037 Dequeue.proof <> G constr
R26041:26042 Dequeue.proof <> cd:1531 var
R26039:26039 Dequeue.proof <> x:1532 var
R26025:26034 Dequeue.proof <> Not_yellow constr
R26025:26034 Dequeue.proof <> Not_yellow constr
R26037:26042 Dequeue.proof <> G constr
R26058:26069 Dequeue.proof <> ensure_green:1536 def
R26083:26083 Dequeue.proof <> R constr
R26087:26088 Dequeue.proof <> cd:1534 var
R26085:26085 Dequeue.proof <> x:1535 var
R26071:26080 Dequeue.proof <> Not_yellow constr
R26071:26080 Dequeue.proof <> Not_yellow constr
R26083:26088 Dequeue.proof <> R constr
R25999:26000 Dequeue.proof <> :::'?'_x not
R26001:26005 Dequeue.proof <> Small constr
R26048:26049 Dequeue.proof <> :::'?'_x not
R26050:26050 Dequeue.proof <> G constr
R26094:26105 Dequeue.proof <> green_of_red def
R26108:26108 Dequeue.proof <> R constr
def 26353:26363 <> make_yellow
binder 26366:26366 <> A:1537
binder 26368:26368 <> B:1538
binder 26378:26379 <> G1:1539
binder 26381:26382 <> Y1:1540
binder 26384:26385 <> Y2:1541
binder 26387:26388 <> G3:1542
binder 26390:26391 <> Y3:1543
binder 26393:26394 <> G4:1544
binder 26396:26397 <> R4:1545
R26410:26415 Dequeue.proof <> buffer ind
R26417:26417 Dequeue.proof <> A:1537 var
R26420:26422 Dequeue.proof <> Mix constr
R26424:26425 Dequeue.proof <> G1:1539 var
R26427:26428 Dequeue.proof <> Y1:1540 var
R26430:26434 Dequeue.proof <> NoRed constr
binder 26403:26406 <> buf1:1546
R26445:26450 Dequeue.proof <> packet ind
R26454:26456 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R26453:26453 Dequeue.proof <> A:1537 var
R26457:26457 Dequeue.proof <> A:1537 var
R26460:26460 Dequeue.proof <> B:1538 var
R26463:26465 Dequeue.proof <> Mix constr
R26467:26473 Dequeue.proof <> NoGreen constr
R26475:26476 Dequeue.proof <> Y2:1541 var
R26478:26482 Dequeue.proof <> NoRed constr
binder 26441:26441 <> p:1547
R26496:26501 Dequeue.proof <> buffer ind
R26503:26503 Dequeue.proof <> A:1537 var
R26506:26508 Dequeue.proof <> Mix constr
R26510:26511 Dequeue.proof <> G3:1542 var
R26513:26514 Dequeue.proof <> Y3:1543 var
R26516:26520 Dequeue.proof <> NoRed constr
binder 26489:26492 <> buf2:1548
R26532:26537 Dequeue.proof <> cdeque ind
R26539:26539 Dequeue.proof <> B:1538 var
R26542:26544 Dequeue.proof <> Mix constr
R26546:26547 Dequeue.proof <> G4:1544 var
R26549:26556 Dequeue.proof <> NoYellow constr
R26558:26559 Dequeue.proof <> R4:1545 var
binder 26527:26528 <> cd:1549
R26567:26568 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R26571:26573 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R26581:26587 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R26814:26815 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R26574:26578 Dequeue.proof <> deque ind
binder 26569:26570 <> sq:1550
R26600:26602 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26588:26596 Dequeue.proof <> deque_seq def
R26598:26599 Dequeue.proof <> sq:1550 var
R26618:26636 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26603:26612 Dequeue.proof <> buffer_seq def
R26666:26684 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26637:26644 Dequeue.proof <> flattenp def
R26647:26662 Dequeue.proof <> packet_front_seq def
R26733:26751 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26685:26692 Dequeue.proof <> flattenp def
R26695:26713 Dequeue.proof <> packet_hole_flatten def
R26718:26727 Dequeue.proof <> cdeque_seq def
R26780:26798 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26752:26759 Dequeue.proof <> flattenp def
R26762:26776 Dequeue.proof <> packet_rear_seq def
R26799:26808 Dequeue.proof <> buffer_seq def
R26820:26830 Dequeue.proof <> make_yellow:1556 def
R26844:26845 Dequeue.proof <> cd:1552 var
R26841:26842 Dequeue.proof <> s1:1555 var
R26835:26839 Dequeue.proof <> child:1553 var
R26832:26833 Dequeue.proof <> p1:1554 var
R26888:26889 Dequeue.proof <> :::'?'_x not
R26890:26892 Dequeue.proof <> cd':1558 var
R26888:26892 Coq.Init.Specif <> exist constr
R26852:26863 Dequeue.proof <> ensure_green def
R26865:26874 Dequeue.proof <> Not_yellow constr
R26897:26898 Dequeue.proof <> :::'?'_x not
R26899:26899 Dequeue.proof <> T constr
R26902:26902 Dequeue.proof <> Y constr
R26905:26910 Dequeue.proof <> Yellow constr
def 27154:27161 <> make_red
binder 27164:27164 <> A:1563
binder 27166:27166 <> B:1564
binder 27176:27177 <> C1:1565
binder 27179:27180 <> Y2:1566
binder 27182:27183 <> C3:1567
R27196:27201 Dequeue.proof <> buffer ind
R27203:27203 Dequeue.proof <> A:1563 var
R27205:27206 Dequeue.proof <> C1:1565 var
binder 27189:27192 <> buf1:1568
R27216:27221 Dequeue.proof <> packet ind
R27225:27227 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R27224:27224 Dequeue.proof <> A:1563 var
R27228:27228 Dequeue.proof <> A:1563 var
R27231:27231 Dequeue.proof <> B:1564 var
R27234:27236 Dequeue.proof <> Mix constr
R27238:27244 Dequeue.proof <> NoGreen constr
R27246:27247 Dequeue.proof <> Y2:1566 var
R27249:27253 Dequeue.proof <> NoRed constr
binder 27212:27212 <> p:1569
R27267:27272 Dequeue.proof <> buffer ind
R27274:27274 Dequeue.proof <> A:1563 var
R27276:27277 Dequeue.proof <> C3:1567 var
binder 27260:27263 <> buf2:1570
R27288:27293 Dequeue.proof <> cdeque ind
R27295:27295 Dequeue.proof <> B:1564 var
R27297:27301 Dequeue.proof <> green abbrev
binder 27283:27284 <> cd:1571
R27308:27309 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R27312:27314 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R27322:27328 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R27555:27556 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R27315:27319 Dequeue.proof <> deque ind
binder 27310:27311 <> sq:1572
R27341:27343 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27329:27337 Dequeue.proof <> deque_seq def
R27339:27340 Dequeue.proof <> sq:1572 var
R27359:27377 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27344:27353 Dequeue.proof <> buffer_seq def
R27407:27425 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27378:27385 Dequeue.proof <> flattenp def
R27388:27403 Dequeue.proof <> packet_front_seq def
R27474:27492 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27426:27433 Dequeue.proof <> flattenp def
R27436:27454 Dequeue.proof <> packet_hole_flatten def
R27459:27468 Dequeue.proof <> cdeque_seq def
R27521:27539 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27493:27500 Dequeue.proof <> flattenp def
R27503:27517 Dequeue.proof <> packet_rear_seq def
R27540:27549 Dequeue.proof <> buffer_seq def
R27561:27568 Dequeue.proof <> make_red:1578 def
R27582:27583 Dequeue.proof <> cd:1574 var
R27579:27580 Dequeue.proof <> s1:1577 var
R27573:27577 Dequeue.proof <> child:1575 var
R27570:27571 Dequeue.proof <> p1:1576 var
R27637:27638 Dequeue.proof <> :::'?'_x not
R27639:27641 Dequeue.proof <> cd':1580 var
R27637:27641 Coq.Init.Specif <> exist constr
R27590:27601 Dequeue.proof <> green_of_red def
R27604:27604 Dequeue.proof <> R constr
R27607:27609 Dequeue.proof <> Red constr
R27646:27647 Dequeue.proof <> :::'?'_x not
R27648:27648 Dequeue.proof <> T constr
mod 27665:27665 <> S
def 27716:27719 S push
binder 27722:27722 <> A:1585
R27736:27736 Dequeue.proof <> A:1585 var
binder 27732:27732 <> x:1586
R27745:27749 Dequeue.proof <> deque ind
R27751:27751 Dequeue.proof <> A:1585 var
binder 27740:27741 <> sq:1587
R27758:27759 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R27763:27765 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R27773:27775 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R27811:27812 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R27766:27770 Dequeue.proof <> deque ind
binder 27760:27762 <> sq':1588
R27789:27791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27776:27784 Dequeue.proof <> deque_seq def
R27786:27788 Dequeue.proof <> sq':1588 var
R27795:27798 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27792:27792 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R27794:27794 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R27799:27807 Dequeue.proof <> deque_seq def
R27817:27820 Dequeue.proof <> push:1592 def
R27825:27825 Dequeue.proof <> T constr
R27828:27832 Dequeue.proof <> Small constr
R27834:27836 Dequeue.proof <> buf:1590 var
R27822:27822 Dequeue.proof <> x:1591 var
R27825:27837 Dequeue.proof <> T constr
R27828:27836 Dequeue.proof <> Small constr
R27872:27873 Dequeue.proof <> :::'?'_x not
R27874:27877 Dequeue.proof <> buf':1594 var
R27872:27877 Coq.Init.Specif <> exist constr
R27894:27897 Dequeue.proof <> push:1607 def
R27902:27902 Dequeue.proof <> T constr
R27905:27905 Dequeue.proof <> G constr
R27927:27928 Dequeue.proof <> dq:1603 var
R27908:27912 Dequeue.proof <> Green constr
R27923:27924 Dequeue.proof <> s1:1605 var
R27917:27921 Dequeue.proof <> child:1602 var
R27914:27915 Dequeue.proof <> p1:1604 var
R27899:27899 Dequeue.proof <> x:1606 var
R27902:27929 Dequeue.proof <> T constr
R27905:27928 Dequeue.proof <> G constr
R27908:27924 Dequeue.proof <> Green constr
R27962:27963 Dequeue.proof <> :::'?'_x not
R27964:27967 Dequeue.proof <> buf':1608 var
R27962:27967 Coq.Init.Specif <> exist constr
R28014:28015 Dequeue.proof <> :::'?'_x not
R28016:28018 Dequeue.proof <> sq':1632 var
R28014:28018 Coq.Init.Specif <> exist constr
R28034:28037 Dequeue.proof <> push:1650 def
R28042:28042 Dequeue.proof <> T constr
R28045:28045 Dequeue.proof <> Y constr
R28068:28069 Dequeue.proof <> dq:1646 var
R28048:28053 Dequeue.proof <> Yellow constr
R28064:28065 Dequeue.proof <> s1:1648 var
R28058:28062 Dequeue.proof <> child:1645 var
R28055:28056 Dequeue.proof <> p1:1647 var
R28039:28039 Dequeue.proof <> x:1649 var
R28042:28070 Dequeue.proof <> T constr
R28045:28069 Dequeue.proof <> Y constr
R28048:28065 Dequeue.proof <> Yellow constr
R28118:28120 Dequeue.proof <> :::'?'_x not
R28128:28128 Dequeue.proof <> :::'?'_x not
R28121:28123 Dequeue.proof <> Any constr
R28125:28127 Dequeue.proof <> p1':1654 var
R28118:28128 Coq.Init.Specif <> exist constr
R28121:28127 Dequeue.proof <> Any constr
R28171:28172 Dequeue.proof <> :::'?'_x not
R28173:28175 Dequeue.proof <> sq':1676 var
R28171:28175 Coq.Init.Specif <> exist constr
R27845:27855 Dequeue.proof <> buffer_push def
R27882:27883 Dequeue.proof <> :::'?'_x not
R27884:27884 Dequeue.proof <> T constr
R27937:27946 Dequeue.proof <> green_push def
R27974:27984 Dequeue.proof <> make_yellow def
R28023:28024 Dequeue.proof <> :::'?'_x not
R28080:28090 Dequeue.proof <> yellow_push def
R28095:28103 Dequeue.proof <> Yellowish constr
R28135:28142 Dequeue.proof <> make_red def
R28180:28181 Dequeue.proof <> :::'?'_x not
def 28240:28245 S inject
binder 28248:28248 <> A:1693
R28263:28267 Dequeue.proof <> deque ind
R28269:28269 Dequeue.proof <> A:1693 var
binder 28258:28259 <> sq:1694
R28277:28277 Dequeue.proof <> A:1693 var
binder 28273:28273 <> x:1695
R28284:28285 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R28289:28291 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R28299:28301 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R28337:28338 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R28292:28296 Dequeue.proof <> deque ind
binder 28286:28288 <> sq':1696
R28315:28317 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28302:28310 Dequeue.proof <> deque_seq def
R28312:28314 Dequeue.proof <> sq':1696 var
R28330:28333 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28318:28326 Dequeue.proof <> deque_seq def
R28334:28334 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R28336:28336 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R28343:28348 Dequeue.proof <> inject:1700 def
R28366:28366 Dequeue.proof <> x:1699 var
R28351:28351 Dequeue.proof <> T constr
R28354:28358 Dequeue.proof <> Small constr
R28360:28362 Dequeue.proof <> buf:1698 var
R28351:28363 Dequeue.proof <> T constr
R28354:28362 Dequeue.proof <> Small constr
R28402:28403 Dequeue.proof <> :::'?'_x not
R28404:28407 Dequeue.proof <> buf':1702 var
R28402:28407 Coq.Init.Specif <> exist constr
R28424:28429 Dequeue.proof <> inject:1715 def
R28462:28462 Dequeue.proof <> x:1714 var
R28432:28432 Dequeue.proof <> T constr
R28435:28435 Dequeue.proof <> G constr
R28457:28458 Dequeue.proof <> cd:1710 var
R28438:28442 Dequeue.proof <> Green constr
R28453:28454 Dequeue.proof <> s1:1713 var
R28447:28451 Dequeue.proof <> child:1711 var
R28444:28445 Dequeue.proof <> p1:1712 var
R28432:28459 Dequeue.proof <> T constr
R28435:28458 Dequeue.proof <> G constr
R28438:28454 Dequeue.proof <> Green constr
R28496:28497 Dequeue.proof <> :::'?'_x not
R28498:28501 Dequeue.proof <> buf':1716 var
R28496:28501 Coq.Init.Specif <> exist constr
R28548:28549 Dequeue.proof <> :::'?'_x not
R28550:28552 Dequeue.proof <> sq':1740 var
R28548:28552 Coq.Init.Specif <> exist constr
R28568:28573 Dequeue.proof <> inject:1758 def
R28607:28607 Dequeue.proof <> x:1757 var
R28576:28576 Dequeue.proof <> T constr
R28579:28579 Dequeue.proof <> Y constr
R28602:28603 Dequeue.proof <> cd:1753 var
R28582:28587 Dequeue.proof <> Yellow constr
R28598:28599 Dequeue.proof <> s1:1756 var
R28592:28596 Dequeue.proof <> child:1754 var
R28589:28590 Dequeue.proof <> p1:1755 var
R28576:28604 Dequeue.proof <> T constr
R28579:28603 Dequeue.proof <> Y constr
R28582:28599 Dequeue.proof <> Yellow constr
R28656:28658 Dequeue.proof <> :::'?'_x not
R28666:28666 Dequeue.proof <> :::'?'_x not
R28659:28661 Dequeue.proof <> Any constr
R28663:28665 Dequeue.proof <> s1':1763 var
R28656:28666 Coq.Init.Specif <> exist constr
R28659:28665 Dequeue.proof <> Any constr
R28709:28710 Dequeue.proof <> :::'?'_x not
R28711:28713 Dequeue.proof <> sq':1784 var
R28709:28713 Coq.Init.Specif <> exist constr
R28373:28385 Dequeue.proof <> buffer_inject def
R28412:28413 Dequeue.proof <> :::'?'_x not
R28414:28414 Dequeue.proof <> T constr
R28469:28480 Dequeue.proof <> green_inject def
R28508:28518 Dequeue.proof <> make_yellow def
R28557:28558 Dequeue.proof <> :::'?'_x not
R28616:28628 Dequeue.proof <> yellow_inject def
R28631:28639 Dequeue.proof <> Yellowish constr
R28673:28680 Dequeue.proof <> make_red def
R28718:28719 Dequeue.proof <> :::'?'_x not
def 28777:28779 S pop
binder 28782:28782 <> A:1801
R28797:28801 Dequeue.proof <> deque ind
R28803:28803 Dequeue.proof <> A:1801 var
binder 28792:28793 <> sq:1802
R28810:28811 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R28813:28815 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R28836:28842 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R28972:28973 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R28816:28821 Coq.Init.Datatypes <> option ind
R28825:28827 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R28828:28832 Dequeue.proof <> deque ind
binder 28812:28812 <> o:1803
R28855:28857 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28843:28851 Dequeue.proof <> deque_seq def
R28864:28864 Dequeue.proof <> o:1803 var
R28888:28891 Coq.Init.Datatypes <> None constr
R28896:28897 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R28916:28919 Coq.Init.Datatypes <> Some constr
R28921:28921 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28923:28924 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28928:28928 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28936:28939 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28933:28933 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R28935:28935 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R28940:28948 Dequeue.proof <> deque_seq def
R28978:28980 Dequeue.proof <> pop:1807 def
R28983:28983 Dequeue.proof <> T constr
R28986:28990 Dequeue.proof <> Small constr
R28992:28994 Dequeue.proof <> buf:1806 var
R28983:28995 Dequeue.proof <> T constr
R28986:28994 Dequeue.proof <> Small constr
R29025:29027 Dequeue.proof <> pop:1815 def
R29032:29033 Dequeue.proof <> :::'?'_x not
R29034:29037 Coq.Init.Datatypes <> None constr
R29032:29037 Coq.Init.Specif <> exist constr
R29034:29037 Coq.Init.Datatypes <> None constr
R29053:29055 Dequeue.proof <> pop:1825 def
R29060:29061 Dequeue.proof <> :::'?'_x not
R29062:29065 Coq.Init.Datatypes <> Some constr
R29067:29067 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29069:29070 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29079:29079 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29068:29068 Dequeue.proof <> x:1824 var
R29071:29073 Dequeue.proof <> Any constr
R29075:29078 Dequeue.proof <> buf':1817 var
R29060:29079 Coq.Init.Specif <> exist constr
R29062:29079 Coq.Init.Datatypes <> Some constr
R29067:29079 Coq.Init.Datatypes <> pair constr
R29071:29078 Dequeue.proof <> Any constr
R29115:29117 Dequeue.proof <> pop:1830 def
R29120:29120 Dequeue.proof <> T constr
R29123:29123 Dequeue.proof <> G constr
R29145:29146 Dequeue.proof <> cd:1826 var
R29126:29130 Dequeue.proof <> Green constr
R29141:29142 Dequeue.proof <> s1:1829 var
R29135:29139 Dequeue.proof <> child:1827 var
R29132:29133 Dequeue.proof <> p1:1828 var
R29120:29147 Dequeue.proof <> T constr
R29123:29146 Dequeue.proof <> G constr
R29126:29142 Dequeue.proof <> Green constr
R29177:29178 Dequeue.proof <> :::'?'_x not
R29179:29179 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29181:29182 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29196:29196 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29180:29180 Dequeue.proof <> x:1847 var
R29183:29191 Dequeue.proof <> Yellowish constr
R29193:29195 Dequeue.proof <> p1':1835 var
R29177:29196 Coq.Init.Specif <> exist constr
R29179:29196 Coq.Init.Datatypes <> pair constr
R29183:29195 Dequeue.proof <> Yellowish constr
R29242:29243 Dequeue.proof <> :::'?'_x not
R29244:29246 Dequeue.proof <> sq':1855 var
R29242:29246 Coq.Init.Specif <> exist constr
R29272:29274 Dequeue.proof <> pop:1874 def
R29277:29277 Dequeue.proof <> T constr
R29280:29280 Dequeue.proof <> Y constr
R29303:29304 Dequeue.proof <> cd:1870 var
R29283:29288 Dequeue.proof <> Yellow constr
R29299:29300 Dequeue.proof <> s1:1873 var
R29293:29297 Dequeue.proof <> child:1871 var
R29290:29291 Dequeue.proof <> p1:1872 var
R29277:29305 Dequeue.proof <> T constr
R29280:29304 Dequeue.proof <> Y constr
R29283:29300 Dequeue.proof <> Yellow constr
R29348:29349 Dequeue.proof <> :::'?'_x not
R29350:29350 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29352:29353 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29361:29361 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29351:29351 Dequeue.proof <> x:1892 var
R29354:29356 Dequeue.proof <> Any constr
R29358:29360 Dequeue.proof <> p1':1878 var
R29348:29361 Coq.Init.Specif <> exist constr
R29350:29361 Coq.Init.Datatypes <> pair constr
R29354:29360 Dequeue.proof <> Any constr
R29404:29405 Dequeue.proof <> :::'?'_x not
R29406:29408 Dequeue.proof <> sq':1900 var
R29404:29408 Coq.Init.Specif <> exist constr
R29003:29012 Dequeue.proof <> buffer_pop def
R29085:29086 Dequeue.proof <> :::'?'_x not
R29087:29090 Coq.Init.Datatypes <> Some constr
R29092:29092 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29094:29095 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29110:29110 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29096:29096 Dequeue.proof <> T constr
R29099:29103 Dequeue.proof <> Small constr
R29043:29044 Dequeue.proof <> :::'?'_x not
R29045:29048 Coq.Init.Datatypes <> None constr
R29155:29163 Dequeue.proof <> green_pop def
R29203:29213 Dequeue.proof <> make_yellow def
R29251:29252 Dequeue.proof <> :::'?'_x not
R29253:29256 Coq.Init.Datatypes <> Some constr
R29258:29258 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29260:29261 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29265:29265 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29313:29322 Dequeue.proof <> yellow_pop def
R29325:29333 Dequeue.proof <> Yellowish constr
R29368:29375 Dequeue.proof <> make_red def
R29413:29414 Dequeue.proof <> :::'?'_x not
R29415:29418 Coq.Init.Datatypes <> Some constr
R29420:29420 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29422:29423 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29427:29427 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 29484:29488 S eject
binder 29491:29491 <> A:1917
R29507:29511 Dequeue.proof <> deque ind
R29513:29513 Dequeue.proof <> A:1917 var
binder 29502:29503 <> sq:1918
R29520:29521 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R29523:29525 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R29546:29552 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R29682:29683 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R29526:29531 Coq.Init.Datatypes <> option ind
R29541:29543 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R29534:29538 Dequeue.proof <> deque ind
binder 29522:29522 <> o:1919
R29565:29567 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29553:29561 Dequeue.proof <> deque_seq def
R29574:29574 Dequeue.proof <> o:1919 var
R29598:29601 Coq.Init.Datatypes <> None constr
R29606:29607 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R29626:29629 Coq.Init.Datatypes <> Some constr
R29631:29631 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29635:29636 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29638:29638 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29656:29659 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29643:29651 Dequeue.proof <> deque_seq def
R29660:29660 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R29662:29662 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R29688:29692 Dequeue.proof <> eject:1923 def
R29695:29695 Dequeue.proof <> T constr
R29698:29702 Dequeue.proof <> Small constr
R29704:29706 Dequeue.proof <> buf:1922 var
R29695:29707 Dequeue.proof <> T constr
R29698:29706 Dequeue.proof <> Small constr
R29739:29743 Dequeue.proof <> eject:1931 def
R29748:29749 Dequeue.proof <> :::'?'_x not
R29750:29753 Coq.Init.Datatypes <> None constr
R29748:29753 Coq.Init.Specif <> exist constr
R29750:29753 Coq.Init.Datatypes <> None constr
R29769:29773 Dequeue.proof <> eject:1941 def
R29778:29779 Dequeue.proof <> :::'?'_x not
R29780:29783 Coq.Init.Datatypes <> Some constr
R29785:29785 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29794:29795 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29797:29797 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29786:29788 Dequeue.proof <> Any constr
R29790:29793 Dequeue.proof <> buf':1933 var
R29796:29796 Dequeue.proof <> x:1940 var
R29778:29797 Coq.Init.Specif <> exist constr
R29780:29797 Coq.Init.Datatypes <> Some constr
R29785:29797 Coq.Init.Datatypes <> pair constr
R29786:29793 Dequeue.proof <> Any constr
R29833:29837 Dequeue.proof <> eject:1946 def
R29840:29840 Dequeue.proof <> T constr
R29843:29843 Dequeue.proof <> G constr
R29865:29866 Dequeue.proof <> cd:1942 var
R29846:29850 Dequeue.proof <> Green constr
R29861:29862 Dequeue.proof <> s1:1945 var
R29855:29859 Dequeue.proof <> child:1943 var
R29852:29853 Dequeue.proof <> p1:1944 var
R29840:29867 Dequeue.proof <> T constr
R29843:29866 Dequeue.proof <> G constr
R29846:29862 Dequeue.proof <> Green constr
R29899:29900 Dequeue.proof <> :::'?'_x not
R29901:29901 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29915:29916 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29918:29918 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29902:29910 Dequeue.proof <> Yellowish constr
R29912:29914 Dequeue.proof <> s1':1952 var
R29917:29917 Dequeue.proof <> x:1963 var
R29899:29918 Coq.Init.Specif <> exist constr
R29901:29918 Coq.Init.Datatypes <> pair constr
R29902:29914 Dequeue.proof <> Yellowish constr
R29964:29965 Dequeue.proof <> :::'?'_x not
R29966:29968 Dequeue.proof <> sq':1971 var
R29964:29968 Coq.Init.Specif <> exist constr
R29994:29998 Dequeue.proof <> eject:1990 def
R30001:30001 Dequeue.proof <> T constr
R30004:30004 Dequeue.proof <> Y constr
R30027:30028 Dequeue.proof <> cd:1986 var
R30007:30012 Dequeue.proof <> Yellow constr
R30023:30024 Dequeue.proof <> s1:1989 var
R30017:30021 Dequeue.proof <> child:1987 var
R30014:30015 Dequeue.proof <> p1:1988 var
R30001:30029 Dequeue.proof <> T constr
R30004:30028 Dequeue.proof <> Y constr
R30007:30024 Dequeue.proof <> Yellow constr
R30074:30075 Dequeue.proof <> :::'?'_x not
R30076:30076 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30084:30085 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30087:30087 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30077:30079 Dequeue.proof <> Any constr
R30081:30083 Dequeue.proof <> s1':1995 var
R30086:30086 Dequeue.proof <> x:2008 var
R30074:30087 Coq.Init.Specif <> exist constr
R30076:30087 Coq.Init.Datatypes <> pair constr
R30077:30083 Dequeue.proof <> Any constr
R30130:30131 Dequeue.proof <> :::'?'_x not
R30132:30134 Dequeue.proof <> sq':2016 var
R30130:30134 Coq.Init.Specif <> exist constr
R29715:29726 Dequeue.proof <> buffer_eject def
R29803:29804 Dequeue.proof <> :::'?'_x not
R29805:29808 Coq.Init.Datatypes <> Some constr
R29810:29810 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29825:29826 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29828:29828 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29811:29811 Dequeue.proof <> T constr
R29814:29818 Dequeue.proof <> Small constr
R29759:29760 Dequeue.proof <> :::'?'_x not
R29761:29764 Coq.Init.Datatypes <> None constr
R29875:29885 Dequeue.proof <> green_eject def
R29925:29935 Dequeue.proof <> make_yellow def
R29973:29974 Dequeue.proof <> :::'?'_x not
R29975:29978 Coq.Init.Datatypes <> Some constr
R29980:29980 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29984:29985 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29987:29987 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30037:30048 Dequeue.proof <> yellow_eject def
R30051:30059 Dequeue.proof <> Yellowish constr
R30094:30101 Dequeue.proof <> make_red def
R30139:30140 Dequeue.proof <> :::'?'_x not
R30141:30144 Coq.Init.Datatypes <> Some constr
R30146:30146 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30150:30151 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30153:30153 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30165:30165 Dequeue.proof S <> mod
rec 30378:30378 <> t
proj 30404:30413 <> seq_length
proj 30422:30424 <> seq
proj 30439:30448 <> length_inv
binder 30381:30381 <> A:2033
R30417:30417 Coq.Numbers.BinNums <> Z ind
R30428:30432 Dequeue.proof <> deque ind
R30434:30434 Dequeue.proof <> A:2033 var
R30472:30474 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30452:30460 Coq.ZArith.BinInt Z abs_nat def
R30462:30471 Dequeue.proof <> seq_length:2035 meth
R30475:30480 Coq.Init.Datatypes <> length def
R30483:30491 Dequeue.proof <> deque_seq def
R30493:30495 Dequeue.proof <> seq:2036 meth
R30512:30521 Dequeue.proof <> seq_length proj
R30512:30521 Dequeue.proof <> seq_length proj
R30538:30540 Dequeue.proof <> seq proj
R30538:30540 Dequeue.proof <> seq proj
def 30625:30629 <> t_seq
binder 30632:30632 <> A:2038
R30640:30643 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30637:30637 Dequeue.proof <> t rec
R30644:30647 Coq.Init.Datatypes <> list ind
R30654:30658 Dequeue.proof <> t_seq:2042 def
R30663:30672 Dequeue.proof <> seq_length proj
R30663:30672 Dequeue.proof <> seq_length proj
R30663:30672 Dequeue.proof <> seq_length proj
R30682:30684 Dequeue.proof <> seq proj
R30682:30684 Dequeue.proof <> seq proj
R30677:30679 Dequeue.proof <> len:2040 var
R30689:30690 Dequeue.proof <> sq:2041 var
R30663:30690 Dequeue.proof <> Build_t constr
R30727:30730 Coq.Init.Specif <> left constr
R30727:30732 Coq.Init.Specif <> left constr
R30760:30764 Coq.Init.Specif <> right constr
R30760:30766 Coq.Init.Specif <> right constr
R30700:30710 Coq.ZArith.ZArith_dec <> Z_lt_le_dec thm
R30737:30739 Coq.Lists.List <> rev def
R30742:30750 Dequeue.proof <> deque_seq def
R30771:30779 Dequeue.proof <> deque_seq def
R30943:30953 Coq.ZArith.ZArith_dec <> Z_lt_le_dec thm
R30943:30953 Coq.ZArith.ZArith_dec <> Z_lt_le_dec thm
R30980:30990 Coq.ZArith.ZArith_dec <> Z_lt_le_dec thm
prf 31048:31057 <> rev_eq_nil
binder 31059:31059 <> A:2051
R31066:31069 Coq.Init.Datatypes <> list ind
R31071:31071 Dequeue.proof <> A:2051 var
binder 31062:31062 <> l:2052
R31088:31091 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31083:31085 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31078:31080 Coq.Lists.List <> rev def
R31082:31082 Dequeue.proof <> l:2052 var
R31086:31087 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R31093:31095 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31092:31092 Dequeue.proof <> l:2052 var
R31096:31097 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R31119:31125 Coq.Init.Logic <> f_equal thm
R31129:31134 Coq.Init.Datatypes <> length def
R31119:31125 Coq.Init.Logic <> f_equal thm
R31129:31134 Coq.Init.Datatypes <> length def
R31161:31170 Coq.Lists.List <> rev_length thm
R31161:31170 Coq.Lists.List <> rev_length thm
R31161:31170 Coq.Lists.List <> rev_length thm
R31187:31205 Coq.Lists.List <> length_zero_iff_nil thm
R31187:31205 Coq.Lists.List <> length_zero_iff_nil thm
R31420:31422 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31423:31428 Coq.Init.Datatypes <> length def
R31420:31422 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31423:31428 Coq.Init.Datatypes <> length def
R31512:31514 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31506:31508 Coq.Lists.List <> rev def
R31515:31516 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R31512:31514 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31506:31508 Coq.Lists.List <> rev def
R31515:31516 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R31536:31545 Dequeue.proof <> rev_eq_nil thm
R31466:31484 Coq.Lists.List <> length_zero_iff_nil thm
def 31597:31601 <> empty
binder 31604:31604 <> A:2053
R31609:31610 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R31613:31615 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R31619:31621 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R31635:31636 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R31616:31616 Dequeue.proof <> t rec
binder 31611:31612 <> sq:2054
R31630:31632 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31622:31626 Dequeue.proof <> t_seq def
R31628:31629 Dequeue.proof <> sq:2054 var
R31633:31634 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R31641:31645 Dequeue.proof <> empty:2056 def
R31650:31654 Dequeue.proof <> :::'?'_x not
R31691:31693 Dequeue.proof <> :::'?'_x not
R31655:31664 Dequeue.proof <> seq_length proj
R31655:31664 Dequeue.proof <> seq_length proj
R31655:31664 Dequeue.proof <> seq_length proj
R31672:31674 Dequeue.proof <> seq proj
R31672:31674 Dequeue.proof <> seq proj
R31679:31679 Dequeue.proof <> T constr
R31682:31686 Dequeue.proof <> Small constr
R31688:31689 Dequeue.proof <> B0 constr
def 31736:31743 <> is_empty
binder 31746:31746 <> A:2057
R31755:31755 Dequeue.proof <> t rec
R31757:31757 Dequeue.proof <> A:2057 var
binder 31750:31751 <> sq:2058
R31764:31765 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R31767:31769 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R31774:31776 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R31803:31804 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R31770:31773 Coq.Init.Datatypes <> bool ind
binder 31766:31766 <> b:2059
R31785:31789 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R31778:31780 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31777:31777 Dequeue.proof <> b:2059 var
R31781:31784 Coq.Init.Datatypes <> true constr
R31798:31800 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31790:31794 Dequeue.proof <> t_seq def
R31801:31802 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R31809:31816 Dequeue.proof <> is_empty:2062 def
R31818:31819 Dequeue.proof <> sq:2061 var
R31824:31826 Dequeue.proof <> :::'?'_x not
R31845:31845 Dequeue.proof <> :::'?'_x not
R31840:31843 Coq.ZArith.BinInt <> ::Z_scope:x_'=?'_x not
R31827:31836 Dequeue.proof <> seq_length proj
R31929:31936 Coq.ZArith.BinInt Z eqb_eq thm
R31929:31936 Coq.ZArith.BinInt Z eqb_eq thm
R31929:31936 Coq.ZArith.BinInt Z eqb_eq thm
def 32095:32100 <> length
binder 32103:32103 <> A:2063
R32112:32112 Dequeue.proof <> t rec
R32114:32114 Dequeue.proof <> A:2063 var
binder 32107:32108 <> sq:2064
R32121:32122 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R32124:32126 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R32128:32130 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R32168:32169 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R32127:32127 Coq.Numbers.BinNums <> Z ind
binder 32123:32123 <> n:2065
R32132:32134 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32131:32131 Dequeue.proof <> n:2065 var
R32135:32142 Coq.ZArith.BinInt Z of_nat def
R32145:32155 Coq.Lists.List <> length abbrev
R32158:32162 Dequeue.proof <> t_seq def
R32174:32179 Dequeue.proof <> length:2068 def
R32181:32182 Dequeue.proof <> sq:2067 var
R32187:32188 Dequeue.proof <> :::'?'_x not
R32189:32193 Coq.ZArith.BinInt Z abs def
R32196:32205 Dequeue.proof <> seq_length proj
R32295:32304 Coq.Lists.List <> rev_length thm
R32295:32304 Coq.Lists.List <> rev_length thm
R32295:32304 Coq.Lists.List <> rev_length thm
R32295:32304 Coq.Lists.List <> rev_length thm
R32295:32304 Coq.Lists.List <> rev_length thm
R32295:32304 Coq.Lists.List <> rev_length thm
def 32349:32351 <> rev
binder 32354:32354 <> A:2069
R32363:32363 Dequeue.proof <> t rec
R32365:32365 Dequeue.proof <> A:2069 var
binder 32358:32359 <> sq:2070
R32370:32371 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R32375:32377 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R32381:32383 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R32410:32411 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R32378:32378 Dequeue.proof <> t rec
binder 32372:32374 <> sq':2071
R32393:32395 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32384:32388 Dequeue.proof <> t_seq def
R32390:32392 Dequeue.proof <> sq':2071 var
R32396:32398 Coq.Lists.List <> rev def
R32401:32405 Dequeue.proof <> t_seq def
R32416:32418 Dequeue.proof <> rev:2075 def
R32423:32432 Dequeue.proof <> seq_length proj
R32423:32432 Dequeue.proof <> seq_length proj
R32423:32432 Dequeue.proof <> seq_length proj
R32440:32442 Dequeue.proof <> seq proj
R32440:32442 Dequeue.proof <> seq proj
R32437:32437 Dequeue.proof <> n:2074 var
R32447:32451 Dequeue.proof <> deque:2073 var
R32423:32451 Dequeue.proof <> Build_t constr
R32461:32465 Dequeue.proof <> :::'?'_x not
R32497:32499 Dequeue.proof <> :::'?'_x not
R32466:32475 Dequeue.proof <> seq_length proj
R32466:32475 Dequeue.proof <> seq_length proj
R32466:32475 Dequeue.proof <> seq_length proj
R32485:32487 Dequeue.proof <> seq proj
R32485:32487 Dequeue.proof <> seq proj
R32480:32481 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R32600:32613 Coq.Lists.List <> rev_involutive thm
R32600:32613 Coq.Lists.List <> rev_involutive thm
R32600:32613 Coq.Lists.List <> rev_involutive thm
R32630:32632 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32630:32632 Coq.Init.Logic <> ::type_scope:x_'='_x not
def 32717:32720 <> push
binder 32723:32723 <> A:2076
R32731:32731 Dequeue.proof <> A:2076 var
binder 32727:32727 <> x:2077
R32740:32740 Dequeue.proof <> t rec
R32742:32742 Dequeue.proof <> A:2076 var
binder 32735:32736 <> sq:2078
R32749:32750 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R32754:32756 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R32760:32762 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R32790:32791 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R32757:32757 Dequeue.proof <> t rec
binder 32751:32753 <> sq':2079
R32772:32774 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32763:32767 Dequeue.proof <> t_seq def
R32769:32771 Dequeue.proof <> sq':2079 var
R32778:32781 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R32775:32775 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R32777:32777 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R32782:32786 Dequeue.proof <> t_seq def
R32796:32799 Dequeue.proof <> push:2084 def
R32806:32815 Dequeue.proof <> seq_length proj
R32806:32815 Dequeue.proof <> seq_length proj
R32806:32815 Dequeue.proof <> seq_length proj
R32823:32825 Dequeue.proof <> seq proj
R32823:32825 Dequeue.proof <> seq proj
R32820:32820 Dequeue.proof <> n:2082 var
R32830:32834 Dequeue.proof <> deque:2081 var
R32801:32801 Dequeue.proof <> x:2083 var
R32806:32834 Dequeue.proof <> Build_t constr
R32869:32873 Coq.Init.Specif <> right constr
R32869:32875 Coq.Init.Specif <> right constr
R32908:32909 Dequeue.proof <> :::'?'_x not
R32910:32915 Dequeue.proof <> deque':2092 var
R32908:32915 Coq.Init.Specif <> exist constr
R32970:32973 Coq.Init.Specif <> left constr
R32970:32975 Coq.Init.Specif <> left constr
R33010:33011 Dequeue.proof <> :::'?'_x not
R33012:33017 Dequeue.proof <> deque':2104 var
R33010:33017 Coq.Init.Specif <> exist constr
R32844:32854 Coq.ZArith.ZArith_dec <> Z_lt_le_dec thm
R32982:32989 Dequeue.proof <> inject def
R33022:33026 Dequeue.proof <> :::'?'_x not
R33061:33063 Dequeue.proof <> :::'?'_x not
R33027:33036 Dequeue.proof <> seq_length proj
R33027:33036 Dequeue.proof <> seq_length proj
R33027:33036 Dequeue.proof <> seq_length proj
R33048:33050 Dequeue.proof <> seq proj
R33048:33050 Dequeue.proof <> seq proj
R33042:33044 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R32882:32887 Dequeue.proof <> push def
R32920:32924 Dequeue.proof <> :::'?'_x not
R32959:32961 Dequeue.proof <> :::'?'_x not
R32925:32934 Dequeue.proof <> seq_length proj
R32925:32934 Dequeue.proof <> seq_length proj
R32925:32934 Dequeue.proof <> seq_length proj
R32946:32948 Dequeue.proof <> seq proj
R32946:32948 Dequeue.proof <> seq proj
R32940:32942 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R33122:33131 Coq.Lists.List <> app_length thm
R33122:33131 Coq.Lists.List <> app_length thm
R33122:33131 Coq.Lists.List <> app_length thm
R33229:33236 Coq.Lists.List <> rev_unit thm
R33229:33236 Coq.Lists.List <> rev_unit thm
R33229:33236 Coq.Lists.List <> rev_unit thm
R33257:33259 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33257:33259 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33376:33385 Coq.Lists.List <> app_length thm
R33376:33385 Coq.Lists.List <> app_length thm
R33376:33385 Coq.Lists.List <> app_length thm
R33491:33493 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33491:33493 Coq.Init.Logic <> ::type_scope:x_'='_x not
def 33581:33586 <> inject
binder 33589:33589 <> A:2109
R33598:33598 Dequeue.proof <> t rec
R33600:33600 Dequeue.proof <> A:2109 var
binder 33593:33594 <> sq:2110
R33608:33608 Dequeue.proof <> A:2109 var
binder 33604:33604 <> x:2111
R33615:33616 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R33620:33622 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R33626:33628 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R33656:33657 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R33623:33623 Dequeue.proof <> t rec
binder 33617:33619 <> sq':2112
R33638:33640 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33629:33633 Dequeue.proof <> t_seq def
R33635:33637 Dequeue.proof <> sq':2112 var
R33649:33652 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R33641:33645 Dequeue.proof <> t_seq def
R33653:33653 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R33655:33655 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R33662:33667 Dequeue.proof <> inject:2117 def
R33705:33705 Dequeue.proof <> x:2116 var
R33672:33681 Dequeue.proof <> seq_length proj
R33672:33681 Dequeue.proof <> seq_length proj
R33672:33681 Dequeue.proof <> seq_length proj
R33689:33691 Dequeue.proof <> seq proj
R33689:33691 Dequeue.proof <> seq proj
R33686:33686 Dequeue.proof <> n:2115 var
R33696:33700 Dequeue.proof <> deque:2114 var
R33672:33700 Dequeue.proof <> Build_t constr
R33737:33741 Coq.Init.Specif <> right constr
R33737:33743 Coq.Init.Specif <> right constr
R33778:33779 Dequeue.proof <> :::'?'_x not
R33780:33785 Dequeue.proof <> deque':2125 var
R33778:33785 Coq.Init.Specif <> exist constr
R33840:33843 Coq.Init.Specif <> left constr
R33840:33845 Coq.Init.Specif <> left constr
R33878:33879 Dequeue.proof <> :::'?'_x not
R33880:33885 Dequeue.proof <> deque':2137 var
R33878:33885 Coq.Init.Specif <> exist constr
R33712:33722 Coq.ZArith.ZArith_dec <> Z_lt_le_dec thm
R33852:33857 Dequeue.proof <> push def
R33890:33894 Dequeue.proof <> :::'?'_x not
R33929:33931 Dequeue.proof <> :::'?'_x not
R33895:33904 Dequeue.proof <> seq_length proj
R33895:33904 Dequeue.proof <> seq_length proj
R33895:33904 Dequeue.proof <> seq_length proj
R33916:33918 Dequeue.proof <> seq proj
R33916:33918 Dequeue.proof <> seq proj
R33910:33912 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R33750:33757 Dequeue.proof <> inject def
R33790:33794 Dequeue.proof <> :::'?'_x not
R33829:33831 Dequeue.proof <> :::'?'_x not
R33795:33804 Dequeue.proof <> seq_length proj
R33795:33804 Dequeue.proof <> seq_length proj
R33795:33804 Dequeue.proof <> seq_length proj
R33816:33818 Dequeue.proof <> seq proj
R33816:33818 Dequeue.proof <> seq proj
R33810:33812 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R33997:34006 Coq.Lists.List <> app_length thm
R33997:34006 Coq.Lists.List <> app_length thm
R33997:34006 Coq.Lists.List <> app_length thm
R34109:34111 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34109:34111 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34208:34217 Coq.Lists.List <> app_length thm
R34208:34217 Coq.Lists.List <> app_length thm
R34208:34217 Coq.Lists.List <> app_length thm
R34319:34321 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34319:34321 Coq.Init.Logic <> ::type_scope:x_'='_x not
def 34406:34408 <> pop
binder 34411:34411 <> A:2142
R34420:34420 Dequeue.proof <> t rec
R34422:34422 Dequeue.proof <> A:2142 var
binder 34415:34416 <> sq:2143
R34429:34430 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R34432:34434 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R34451:34457 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R34579:34580 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R34435:34440 Coq.Init.Datatypes <> option ind
R34444:34446 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R34447:34447 Dequeue.proof <> t rec
binder 34431:34431 <> o:2144
R34466:34468 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34458:34462 Dequeue.proof <> t_seq def
R34475:34475 Dequeue.proof <> o:2144 var
R34499:34502 Coq.Init.Datatypes <> None constr
R34507:34508 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R34527:34530 Coq.Init.Datatypes <> Some constr
R34532:34532 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34534:34535 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34539:34539 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34547:34550 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R34544:34544 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R34546:34546 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R34551:34555 Dequeue.proof <> t_seq def
R34585:34587 Dequeue.proof <> pop:2149 def
R34592:34601 Dequeue.proof <> seq_length proj
R34592:34601 Dequeue.proof <> seq_length proj
R34592:34601 Dequeue.proof <> seq_length proj
R34609:34611 Dequeue.proof <> seq proj
R34609:34611 Dequeue.proof <> seq proj
R34606:34606 Dequeue.proof <> n:2148 var
R34616:34620 Dequeue.proof <> deque:2147 var
R34592:34620 Dequeue.proof <> Build_t constr
R34655:34659 Coq.Init.Specif <> right constr
R34655:34661 Coq.Init.Specif <> right constr
R34691:34692 Dequeue.proof <> :::'?'_x not
R34693:34696 Coq.Init.Datatypes <> None constr
R34691:34696 Coq.Init.Specif <> exist constr
R34693:34696 Coq.Init.Datatypes <> None constr
R34715:34716 Dequeue.proof <> :::'?'_x not
R34717:34720 Coq.Init.Datatypes <> Some constr
R34722:34722 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34724:34725 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34732:34732 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34723:34723 Dequeue.proof <> x:2165 var
R34726:34731 Dequeue.proof <> deque':2161 var
R34715:34732 Coq.Init.Specif <> exist constr
R34717:34732 Coq.Init.Datatypes <> Some constr
R34722:34732 Coq.Init.Datatypes <> pair constr
R34797:34800 Coq.Init.Specif <> left constr
R34797:34802 Coq.Init.Specif <> left constr
R34834:34835 Dequeue.proof <> :::'?'_x not
R34836:34839 Coq.Init.Datatypes <> None constr
R34834:34839 Coq.Init.Specif <> exist constr
R34836:34839 Coq.Init.Datatypes <> None constr
R34858:34859 Dequeue.proof <> :::'?'_x not
R34860:34863 Coq.Init.Datatypes <> Some constr
R34865:34865 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34872:34873 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34875:34875 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34866:34871 Dequeue.proof <> deque':2177 var
R34874:34874 Dequeue.proof <> x:2181 var
R34858:34875 Coq.Init.Specif <> exist constr
R34860:34875 Coq.Init.Datatypes <> Some constr
R34865:34875 Coq.Init.Datatypes <> pair constr
R34630:34640 Coq.ZArith.ZArith_dec <> Z_lt_le_dec thm
R34809:34815 Dequeue.proof <> eject def
R34880:34881 Dequeue.proof <> :::'?'_x not
R34882:34885 Coq.Init.Datatypes <> Some constr
R34887:34887 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34889:34893 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34926:34929 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34894:34903 Dequeue.proof <> seq_length proj
R34894:34903 Dequeue.proof <> seq_length proj
R34894:34903 Dequeue.proof <> seq_length proj
R34913:34915 Dequeue.proof <> seq proj
R34913:34915 Dequeue.proof <> seq proj
R34909:34909 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R34844:34845 Dequeue.proof <> :::'?'_x not
R34846:34849 Coq.Init.Datatypes <> None constr
R34668:34672 Dequeue.proof <> pop def
R34737:34738 Dequeue.proof <> :::'?'_x not
R34739:34742 Coq.Init.Datatypes <> Some constr
R34744:34744 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34746:34750 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34783:34786 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34751:34760 Dequeue.proof <> seq_length proj
R34751:34760 Dequeue.proof <> seq_length proj
R34751:34760 Dequeue.proof <> seq_length proj
R34770:34772 Dequeue.proof <> seq proj
R34770:34772 Dequeue.proof <> seq proj
R34766:34766 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34701:34702 Dequeue.proof <> :::'?'_x not
R34703:34706 Coq.Init.Datatypes <> None constr
R34981:34987 Coq.Init.Logic <> f_equal thm
R34991:35001 Coq.Lists.List <> length abbrev
R34981:34987 Coq.Init.Logic <> f_equal thm
R34991:35001 Coq.Lists.List <> length abbrev
R35023:35032 Coq.Lists.List <> app_length thm
R35023:35032 Coq.Lists.List <> app_length thm
R35023:35032 Coq.Lists.List <> app_length thm
R35136:35143 Coq.Lists.List <> rev_unit thm
R35136:35143 Coq.Lists.List <> rev_unit thm
R35136:35143 Coq.Lists.List <> rev_unit thm
R35164:35166 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35164:35166 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35213:35220 Coq.Lists.List <> rev_unit thm
R35213:35220 Coq.Lists.List <> rev_unit thm
R35213:35220 Coq.Lists.List <> rev_unit thm
R35236:35245 Coq.Lists.List <> app_length thm
R35236:35245 Coq.Lists.List <> app_length thm
R35236:35245 Coq.Lists.List <> app_length thm
R35276:35278 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35279:35289 Coq.Lists.List <> length abbrev
R35292:35300 Dequeue.proof <> deque_seq def
R35276:35278 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35279:35289 Coq.Lists.List <> length abbrev
R35292:35300 Dequeue.proof <> deque_seq def
R35386:35392 Coq.Init.Logic <> f_equal thm
R35396:35406 Coq.Lists.List <> length abbrev
R35386:35392 Coq.Init.Logic <> f_equal thm
R35396:35406 Coq.Lists.List <> length abbrev
R35438:35447 Coq.Lists.List <> app_length thm
R35438:35447 Coq.Lists.List <> app_length thm
R35438:35447 Coq.Lists.List <> app_length thm
R35557:35559 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35557:35559 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35599:35610 Dequeue.proof <> app_cons_one thm
R35599:35610 Dequeue.proof <> app_cons_one thm
R35599:35610 Dequeue.proof <> app_cons_one thm
def 35679:35683 <> eject
binder 35686:35686 <> A:2182
R35695:35695 Dequeue.proof <> t rec
R35697:35697 Dequeue.proof <> A:2182 var
binder 35690:35691 <> sq:2183
R35704:35705 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R35707:35709 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R35726:35732 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R35854:35855 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R35710:35715 Coq.Init.Datatypes <> option ind
R35721:35723 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35718:35718 Dequeue.proof <> t rec
binder 35706:35706 <> o:2184
R35741:35743 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35733:35737 Dequeue.proof <> t_seq def
R35750:35750 Dequeue.proof <> o:2184 var
R35774:35777 Coq.Init.Datatypes <> None constr
R35782:35783 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R35802:35805 Coq.Init.Datatypes <> Some constr
R35807:35807 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35811:35812 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35814:35814 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35828:35831 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R35819:35823 Dequeue.proof <> t_seq def
R35832:35832 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R35834:35834 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R35860:35864 Dequeue.proof <> eject:2189 def
R35869:35878 Dequeue.proof <> seq_length proj
R35869:35878 Dequeue.proof <> seq_length proj
R35869:35878 Dequeue.proof <> seq_length proj
R35886:35888 Dequeue.proof <> seq proj
R35886:35888 Dequeue.proof <> seq proj
R35883:35883 Dequeue.proof <> n:2188 var
R35893:35897 Dequeue.proof <> deque:2187 var
R35869:35897 Dequeue.proof <> Build_t constr
R35932:35936 Coq.Init.Specif <> right constr
R35932:35938 Coq.Init.Specif <> right constr
R35970:35971 Dequeue.proof <> :::'?'_x not
R35972:35975 Coq.Init.Datatypes <> None constr
R35970:35975 Coq.Init.Specif <> exist constr
R35972:35975 Coq.Init.Datatypes <> None constr
R35994:35995 Dequeue.proof <> :::'?'_x not
R35996:35999 Coq.Init.Datatypes <> Some constr
R36001:36001 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36008:36009 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36011:36011 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36002:36007 Dequeue.proof <> deque':2201 var
R36010:36010 Dequeue.proof <> x:2205 var
R35994:36011 Coq.Init.Specif <> exist constr
R35996:36011 Coq.Init.Datatypes <> Some constr
R36001:36011 Coq.Init.Datatypes <> pair constr
R36076:36079 Coq.Init.Specif <> left constr
R36076:36081 Coq.Init.Specif <> left constr
R36111:36112 Dequeue.proof <> :::'?'_x not
R36113:36116 Coq.Init.Datatypes <> None constr
R36111:36116 Coq.Init.Specif <> exist constr
R36113:36116 Coq.Init.Datatypes <> None constr
R36135:36136 Dequeue.proof <> :::'?'_x not
R36137:36140 Coq.Init.Datatypes <> Some constr
R36142:36142 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36144:36145 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36152:36152 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36143:36143 Dequeue.proof <> x:2221 var
R36146:36151 Dequeue.proof <> deque':2217 var
R36135:36152 Coq.Init.Specif <> exist constr
R36137:36152 Coq.Init.Datatypes <> Some constr
R36142:36152 Coq.Init.Datatypes <> pair constr
R35907:35917 Coq.ZArith.ZArith_dec <> Z_lt_le_dec thm
R36088:36092 Dequeue.proof <> pop def
R36157:36158 Dequeue.proof <> :::'?'_x not
R36159:36162 Coq.Init.Datatypes <> Some constr
R36164:36167 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36200:36204 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36206:36206 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36168:36177 Dequeue.proof <> seq_length proj
R36168:36177 Dequeue.proof <> seq_length proj
R36168:36177 Dequeue.proof <> seq_length proj
R36187:36189 Dequeue.proof <> seq proj
R36187:36189 Dequeue.proof <> seq proj
R36183:36183 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R36121:36122 Dequeue.proof <> :::'?'_x not
R36123:36126 Coq.Init.Datatypes <> None constr
R35945:35951 Dequeue.proof <> eject def
R36016:36017 Dequeue.proof <> :::'?'_x not
R36018:36021 Coq.Init.Datatypes <> Some constr
R36023:36026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36059:36063 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36065:36065 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36027:36036 Dequeue.proof <> seq_length proj
R36027:36036 Dequeue.proof <> seq_length proj
R36027:36036 Dequeue.proof <> seq_length proj
R36046:36048 Dequeue.proof <> seq proj
R36046:36048 Dequeue.proof <> seq proj
R36042:36042 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35980:35981 Dequeue.proof <> :::'?'_x not
R35982:35985 Coq.Init.Datatypes <> None constr
R36258:36264 Coq.Init.Logic <> f_equal thm
R36268:36278 Coq.Lists.List <> length abbrev
R36258:36264 Coq.Init.Logic <> f_equal thm
R36268:36278 Coq.Lists.List <> length abbrev
R36298:36307 Coq.Lists.List <> app_length thm
R36298:36307 Coq.Lists.List <> app_length thm
R36298:36307 Coq.Lists.List <> app_length thm
R36420:36422 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36420:36422 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36506:36515 Coq.Lists.List <> app_length thm
R36506:36515 Coq.Lists.List <> app_length thm
R36506:36515 Coq.Lists.List <> app_length thm
R36544:36546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36547:36557 Coq.Lists.List <> length abbrev
R36560:36568 Dequeue.proof <> deque_seq def
R36544:36546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36547:36557 Coq.Lists.List <> length abbrev
R36560:36568 Dequeue.proof <> deque_seq def
R36652:36658 Coq.Init.Logic <> f_equal thm
R36662:36672 Coq.Lists.List <> length abbrev
R36652:36658 Coq.Init.Logic <> f_equal thm
R36662:36672 Coq.Lists.List <> length abbrev
R36694:36703 Coq.Lists.List <> app_length thm
R36694:36703 Coq.Lists.List <> app_length thm
R36694:36703 Coq.Lists.List <> app_length thm
R36813:36815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36813:36815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36882:36890 Dequeue.proof <> deque_seq def
R36882:36890 Dequeue.proof <> deque_seq def
R36923:36929 Coq.Init.Logic <> f_equal thm
R36933:36943 Coq.Lists.List <> length abbrev
R36969:36981 Coq.Lists.List <> app_comm_cons thm
R36923:36929 Coq.Init.Logic <> f_equal thm
R36933:36943 Coq.Lists.List <> length abbrev
R36969:36981 Coq.Lists.List <> app_comm_cons thm
R36969:36981 Coq.Lists.List <> app_comm_cons thm
R37015:37017 Coq.Init.Peano <> O_S thm
R37015:37017 Coq.Init.Peano <> O_S thm
def 37111:37116 <> is_rev
binder 37119:37119 <> A:2222
R37128:37128 Dequeue.proof <> t rec
R37130:37130 Dequeue.proof <> A:2222 var
binder 37123:37124 <> sq:2223
R37135:37138 Coq.Init.Datatypes <> bool ind
R37158:37161 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R37145:37154 Dequeue.proof <> seq_length proj
R37156:37157 Dequeue.proof <> sq:2223 var
